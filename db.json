{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechatpay.jpg","path":"images/wechatpay.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"7f47c815c053ae2edbb4821b1be0d3c32b81fe5d","modified":1518522498690},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1501574194000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1501574194000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1501574194000},{"_id":"themes/next/.DS_Store","hash":"b4031ca706d0e344ab2ab686d4decf4474d9e602","modified":1502430773000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1514748788000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1501574194000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1501574194000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1501574194000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1501574194000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1514748788000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1501574194000},{"_id":"themes/next/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1514748788000},{"_id":"themes/next/README.en.md","hash":"32d6cdfec1447f54aae1d7f1365ce6733dfcec8f","modified":1501574194000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1501574194000},{"_id":"themes/next/_config.yml","hash":"99bb990e30ea45854995e9fab502188ec4b6dae2","modified":1518579290850},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1514748788000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1514748788000},{"_id":"source/categories/index.md","hash":"5905f4d99a42fbc64873fec37693dc1b056c9237","modified":1494731164000},{"_id":"source/tags/index.md","hash":"43fa82f939a7b2946f441bb18c63a430673f2733","modified":1494731164000},{"_id":"source/_posts/2017-12-31-annual-summary.md","hash":"951ea92a805c089052ef0376ea19050eb2202a7d","modified":1514735951771},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1514735868828},{"_id":"source/_posts/2017-5-20-idea.md","hash":"7b6cdcfdde1dc970f16d630d2f11948c7f2559c4","modified":1495269380000},{"_id":"source/_posts/CMTime-CMTimeMake-CMTimeMakeWithSeconds-in-iOS-encode.md","hash":"8f3b2b17cb54ccd8d75507581a9bfdb2a1aa410f","modified":1494731164000},{"_id":"source/_posts/Interactive-live-broadcast.md","hash":"0d0f9bbd2b102a272a385710c4888041c9e2b663","modified":1494731164000},{"_id":"source/_posts/a-week-in-Shanghai-City.md","hash":"819af893b16a266d6470df041e8b0942de469f6c","modified":1494731164000},{"_id":"source/_posts/audio-video-transmission-plan.md","hash":"5f88d23f8d61514c272a9132f04db1e09fc124b1","modified":1494731164000},{"_id":"source/_posts/build-X264-library-for-iOS-platform.md","hash":"fb4a4871b5423050ed172419f7e57d6b4c8e7227","modified":1494731164000},{"_id":"source/_posts/buy-house-in-2016-03.md","hash":"28b2c2417fa228c8084a010df08fd4e57a8b341e","modified":1494731164000},{"_id":"source/_posts/a-quiet-life.md","hash":"93a5aafd475a28b8d3cfb2e0037123f19182d1ec","modified":1494772150000},{"_id":"source/_posts/analyse-h265-flv.md","hash":"7a6724969c375cf3dad680b9099c3ed17e905858","modified":1498920698000},{"_id":"source/_posts/duo-shuo-is-poor.md","hash":"9d84c801fad93f85c5fccc99c55d874676d369a8","modified":1494731164000},{"_id":"source/_posts/feeling-of-TwoYear-after-master-graduation.md","hash":"65599ae4509e3d76fc33184dff6ae3ce39efc0d1","modified":1494731164000},{"_id":"source/_posts/fear-of-marriage.md","hash":"197045219cd692bb8040479f026e3717937e933d","modified":1494731164000},{"_id":"source/_posts/flv-analysis-in-rtmp-live-play.md","hash":"72181307db32be64649984792f9b68c5c4af2720","modified":1494731164000},{"_id":"source/_posts/feeling-of-OneYear-after-master-graduation.md","hash":"7adc05adf44aef5265abdfa4cfaf0c68d2afb439","modified":1494731164000},{"_id":"source/_posts/frequently-used-audio-and-video-codec-script.md","hash":"37bd38f54db6edf54c2c593511ff05062a7b09d8","modified":1494731164000},{"_id":"source/_posts/go-to-Shanghai.md","hash":"ebbe788632c06814bd1082b2951a4badcf17e121","modified":1494731164000},{"_id":"source/_posts/help-platform-department-to-solve-the-bug-of-chongqing-project.md","hash":"0c1912ddfbeac482b195ed1797229bded5296fc2","modified":1494731164000},{"_id":"source/_posts/how-to-love.md","hash":"a930792342cdba6ab38cecaa25995828e238fa06","modified":1494731164000},{"_id":"source/_posts/hw-encode-and-transfer-in-ios-platform-camera-part1.md","hash":"8826376911d876149d1f929bda519e307d69c83c","modified":1494731164000},{"_id":"source/_posts/hw-encode-and-transfer-in-ios-platform-encode-aac-part6.md","hash":"2dd7dd904176fe4deddbac392bede608848bb67c","modified":1494731164000},{"_id":"source/_posts/hw-encode-and-transfer-in-ios-platform-image-merging-part2.md","hash":"d681130865cd46a8b9754fb20b96d4c5a48427d1","modified":1494731164000},{"_id":"source/_posts/hw-encode-and-transfer-in-ios-platform-mic-part5.md","hash":"69dfd3b22584c21b3398db900f34db9f7fa7b473","modified":1494731164000},{"_id":"source/_posts/hw-encode-and-transfer-in-ios-platform-real-time-image-filter-part3.md","hash":"294dc8243333c450ec2c320211a186a345ff51c9","modified":1494731164000},{"_id":"source/_posts/hw-encode-and-transfer-in-ios-platform-videotoolbox-encode-h264-part4.md","hash":"0ac5e5c971fc9a8034c0db4d14f7b8cfbec42156","modified":1494731164000},{"_id":"source/_posts/iOS-development-need-abilities.md","hash":"437a930ae79278b3048fe8891c9b0975acc19bb5","modified":1494731164000},{"_id":"source/_posts/install-android-studio-ide.md","hash":"d39d61a9b9ad0115620fb9f205127070ac02dfdd","modified":1494731164000},{"_id":"source/_posts/install-ffmpeg-to-MacOSX-and-use-ffmpeg-to-transform-h264-to-mp4.md","hash":"6e4c5e8f5243218f6b05acc5c08dc549716bfcce","modified":1494731164000},{"_id":"source/_posts/leave-Shenzhen-for-Beijing.md","hash":"a4f5ce9f32cc792c7b5a062be0723b6bf07f1369","modified":1494731164000},{"_id":"source/_posts/lei-xiao-hua-passed-away.md","hash":"4f92dab1c8ea2c7a9f16f4ab5131dc69a2e51afd","modified":1494731164000},{"_id":"source/_posts/live-broadcast-development-process.md","hash":"9631dfbd4827f136786e123a9c179df76d30f57d","modified":1494731164000},{"_id":"source/_posts/living-in-the-present.md","hash":"990ca5642ccf28e08c5dab960f00f1b7f8223b11","modified":1494731164000},{"_id":"source/_posts/next-ten-years.md","hash":"3f5261cc1216c79e24132485c1a35f0019ef5f04","modified":1494731164000},{"_id":"source/_posts/opengl-practice-description.md","hash":"8389a6b3b4ef265b8b400155967013a623c49cb2","modified":1494731164000},{"_id":"source/_posts/private-development-in-three-years.md","hash":"1a299d496069d80f46e9b4643f786c6f677c2100","modified":1494731164000},{"_id":"source/_posts/push-video-or-audio-to-server-in-rtmp-live-play.md","hash":"da92558bda5fd382f5faa5139dc9419ddfee4209","modified":1494731164000},{"_id":"source/_posts/recalling-the-old-days.md","hash":"987e42c3e8348db09f82ca8a75fd904a46f478ef","modified":1499145605000},{"_id":"source/_posts/review-multithreading-and-memory-management-for-ios-and-osx.md","hash":"88dae7b277a184352896aad968f53b4e48e17bd3","modified":1494731164000},{"_id":"source/_posts/review-2015-outlook-2016.md","hash":"c6656d340335852d13cccd9b8a9e9cc672ddca4e","modified":1516082643907},{"_id":"source/_posts/see-in-Beijing.md","hash":"a34aad2a9027637fe14219e8922685c30fde59ae","modified":1494731164000},{"_id":"source/_posts/see-in-Shanghai.md","hash":"933e349daa52d8d4a44590390607579e8fc625f0","modified":1494731164000},{"_id":"source/_posts/share-my-project-experience-in-audio-and-video-development.md","hash":"daa300f0cb61f266fae9a4022e99acd31b3c23f9","modified":1494731164000},{"_id":"source/_posts/spiritual-handholds-on-life.md","hash":"0d4920043e3cf232595d19d56f03fc8242b961a2","modified":1494731164000},{"_id":"source/_posts/talk-about-FFmpeg-part1.md","hash":"150ab03d11769430eedfc8307808db1d94dc6591","modified":1494731164000},{"_id":"source/_posts/talk-about-FFmpeg-part2.md","hash":"c4bc4b8285bc904b9de533b6e512dbd017dfe3fc","modified":1494731164000},{"_id":"source/_posts/talk-about-IT-technology.md","hash":"3bb4f789c57cf27b686f13a605e6d33da7879165","modified":1494731164000},{"_id":"source/_posts/talk-about-cocoapods-install-and-use.md","hash":"316a07dac55dbfa82c6d1ce84cab36de29964dd4","modified":1494731164000},{"_id":"source/_posts/talk-about-theory-study-and-application.md","hash":"80b82c0c2ef996f32531e48f56e76937ba0834b6","modified":1494731164000},{"_id":"source/_posts/talk-about-knowledge-points-of-developing-iOS-player.md","hash":"a1e168a13e7abd02678e4c2ac8e03fe69e106f34","modified":1494731164000},{"_id":"source/_posts/tensorflow-iOS-application.md","hash":"c2ae6104f19fac45bb48c391f89424b55d42171d","modified":1494731164000},{"_id":"source/_posts/the-feeling-of-Beijing-the-latest-month.md","hash":"65188cc45f06cd50cf8870beadad11f1c298427d","modified":1494731164000},{"_id":"source/_posts/tensorflow-neural-style.md","hash":"feb72d6a63fe0bd3f8dd97054e92b156b141b062","modified":1494731164000},{"_id":"source/_posts/the-summary-of-2016-year.md","hash":"7177b18061670871442de76a6d72adb3820c416d","modified":1494731164000},{"_id":"source/_posts/think-of-telecommuting-and-time-co-ordination.md","hash":"55a85b3917afe628c404fd84794f8bbf306b1a28","modified":1494731164000},{"_id":"source/_posts/use-VideoToolBox-decode-h264.md","hash":"4e555a5ca194140477d3fb6cc9153b9165120037","modified":1494731164000},{"_id":"source/_posts/use-fdk-aac-encode-iOS-mic-pcm-to-aac.md","hash":"35adc4068e4f389e22a0237991ef03dbd32c1cc4","modified":1494731164000},{"_id":"source/_posts/use-cmake-to-build-ios-lib.md","hash":"05d20c33874d362822ec07bf6846153c70ac1c35","modified":1497791978000},{"_id":"source/_posts/use-ffmpeg-and-rtmp-to-push-iOS-camera-streaming.md","hash":"be2e339abbb15fbaf0bace26813dcffd3b146d13","modified":1494731164000},{"_id":"source/_posts/use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264.md","hash":"166c9233c9660d6cc791e7937fff4b9aca40e6d9","modified":1494731164000},{"_id":"source/_posts/use-ffmpeg-to-create-a-iOS-player-part1.md","hash":"9c18c25ce7a3b451f5f358fa857a31cd9f9fa793","modified":1494731164000},{"_id":"source/_posts/use-gitment-as-comment-system.md","hash":"d11c5685756ac0336ef75dba08468d5ad62406ec","modified":1502473155000},{"_id":"source/_posts/use-hexo-create-blog-in-mac.md","hash":"5014090f405366b163b23fb57cfabdf2d73aafb3","modified":1494731164000},{"_id":"source/_posts/use-openh264-encode-iOS-camera-video-to-h264.md","hash":"f4cfa6aad5b9e77f85b40081e67114856c07a764","modified":1494731164000},{"_id":"source/_posts/use-tool-to-analyze-h264-file.md","hash":"e586f141938072831284826764debd812cb5ab7e","modified":1494731164000},{"_id":"source/_posts/use-webrtc-codec-in-ios-platform.md","hash":"d75e022408d816e786713021a76b1783c7388884","modified":1494731164000},{"_id":"source/_posts/use-x264-encode-iOS-camera-video-to-h264.md","hash":"bd78dbfc2d2cddeff0faa3c9cd40cdbf755d36f3","modified":1494731164000},{"_id":"source/_posts/view-graduates-which-enter-the-large-companies-or-small-companies.md","hash":"374fac79720df0d73df1f75fc2b5f330576df34f","modified":1494731164000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1501574194000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1514748788000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1514748788000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1514748788000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1514748788000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1514748788000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1514748788000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1514748788000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1514748788000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1514748788000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1514748788000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1514748788000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1514748788000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1514748788000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1514748788000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1514748788000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1514748788000},{"_id":"themes/next/layout/.DS_Store","hash":"c6431fbe07724706a3f70225602a724c16d90293","modified":1502430951000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1514748788000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1501574194000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1514748788000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1514748788000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1514748788000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1501574194000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1501574194000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1514748788000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1501574194000},{"_id":"themes/next/scripts/.DS_Store","hash":"2ecca5dd0b7260968763bb4ded8695e5748d3d0e","modified":1502430540000},{"_id":"themes/next/source/.DS_Store","hash":"8dffadfbfee7973f7d832d14977da99473265de3","modified":1502431050000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1501574194000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1501574194000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1501574194000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1501574194000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1501574194000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1514748788000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1501574194000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1514748788000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1514748788000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1514748788000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1501574194000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1501574194000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1501574194000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1514748788000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1514748788000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1514748788000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1514748788000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1501574194000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1514748788000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1501574194000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1501574194000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1501574194000},{"_id":"themes/next/layout/_third-party/.DS_Store","hash":"0e73aadb77f64bb6422780f04c83cece84f1bea4","modified":1502431039000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1501574194000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1501574194000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1501574194000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1501574194000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1501574194000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1514748788000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1501574194000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1501574194000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1501574194000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1501574194000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1501574194000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1501574194000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1501574194000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1501574194000},{"_id":"themes/next/source/css/.DS_Store","hash":"23b73227db54ddfe7ede13cd9b8bfdd4c8367219","modified":1502431055000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1501574194000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1501574194000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1501574194000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1501574194000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1501574194000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1501574194000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1501574194000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1501574194000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1501574194000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1501574194000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501574194000},{"_id":"themes/next/source/images/myFavicon.ico","hash":"82f8bf52c82f3eabb4e569db8f941914e44a5d40","modified":1498274567000},{"_id":"themes/next/source/images/myHeader.png","hash":"7406415702e9eb75181b2cc4c41f9da8a8eec3c2","modified":1494731164000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501574194000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1501574194000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1501574194000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1501574194000},{"_id":"themes/next/source/images/wechat-get-money.png","hash":"302355c708374f404f9e3339b3f122d0b50e89bb","modified":1494731164000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1501574194000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1501574194000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1501574194000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1501574194000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1501574194000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1501574194000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1501574194000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1501574194000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1501574194000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1501574194000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1514748788000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1514748788000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1514748788000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1514748788000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1501574194000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1501574194000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1501574194000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1501574194000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1501574194000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1501574194000},{"_id":"themes/next/source/css/_common/.DS_Store","hash":"c08e3427b7cae126fe16eeaf7e3d3d3be6e96e08","modified":1502431055000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1501574194000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1501574194000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1514748788000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1501574194000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1514748788000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1514748788000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1514748788000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1514748788000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1501574194000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1501574194000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514748788000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1501574194000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1501574194000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514748788000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514748788000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1501574194000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1501574194000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1514748788000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1501574194000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1501574194000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1501574194000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514748788000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1501574194000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1501574194000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1501574194000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1501574194000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1501574194000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1501574194000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1501574194000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1501574194000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1501574194000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1514748788000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1501574194000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1514748788000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1501574194000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1501574194000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1514748788000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1514748788000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1514748788000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1514748788000},{"_id":"themes/next/source/images/alipay-get-money.png","hash":"72c58625a293018f679fbaca55d2729e28746713","modified":1494731164000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514748788000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1501574194000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1501574194000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1514748788000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1501574194000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1501574194000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1501574194000},{"_id":"public/categories/index.html","hash":"9de69371de97dc392cfe96f6f93b81e756906b5e","modified":1518583235382},{"_id":"public/tags/index.html","hash":"c643b98e1bf3af955a470b4deb0f2fcf7a480b4b","modified":1518583235382},{"_id":"public/2017/08/12/use-gitment-as-comment-system/index.html","hash":"a9e30e9ca2bcb6bec273fb19a91e1ae61e0a7258","modified":1518583235383},{"_id":"public/archives/page/12/index.html","hash":"6004264355b3a0a5c37b1c0f90191d6235d16fbf","modified":1518583235382},{"_id":"public/archives/2015/05/index.html","hash":"c04270b0e7af385f0015a41c164c14d4c3b0e060","modified":1518583235382},{"_id":"public/archives/2015/12/index.html","hash":"bb1583c863e215596cf542caf9b956fb90da55b7","modified":1518583235382},{"_id":"public/archives/2016/05/index.html","hash":"a7da862d2c249093852e757f5a580afe73c3eb57","modified":1518583235382},{"_id":"public/archives/2016/11/index.html","hash":"3cad53717a023c0320a9ebb280c0a99ae2a75cd4","modified":1518583235382},{"_id":"public/archives/2016/12/index.html","hash":"35414956922224845da6a65a7c837302adf83003","modified":1518583235382},{"_id":"public/archives/2017/12/index.html","hash":"ef1f914d03a4afe53ca79d1076ac2d7f87cb350e","modified":1518583235382},{"_id":"public/archives/2017/08/index.html","hash":"3ba1c590506e5e57e7daaf41102294d1b5dd903f","modified":1518583235382},{"_id":"public/archives/2016/10/page/2/index.html","hash":"46927feb26239e7d39ec7162f48890a91bb984cd","modified":1518583235382},{"_id":"public/tags/Android开发/index.html","hash":"5eb0cbb600f9679a1e2abeb9c617d45423d825c5","modified":1518583235382},{"_id":"public/tags/OpenGL/index.html","hash":"d5bd71bf949177e80e0c9818393fb2b0c24cf322","modified":1518583235382},{"_id":"public/2017/12/31/2017-12-31-annual-summary/index.html","hash":"04a81f501b2a1d7481d8e1b5184d8c062a6145af","modified":1518583235383},{"_id":"public/2017/07/04/recalling-the-old-days/index.html","hash":"54dec62d67d97d3463f0174b50536b9b9b1994c1","modified":1518583235383},{"_id":"public/2017/05/21/use-cmake-to-build-ios-lib/index.html","hash":"9896dad09836b372f844e50320c34fb6806e6ccb","modified":1518583235383},{"_id":"public/2017/07/01/analyse-h265-flv/index.html","hash":"43cbc8c0467ae002bcb011ceb5aaf7b480eedc09","modified":1518583235383},{"_id":"public/2017/05/20/2017-5-20-idea/index.html","hash":"93d4bc0211cdff2bffccd90251fe92c9c0ed7564","modified":1518583235383},{"_id":"public/2017/05/14/a-quiet-life/index.html","hash":"66b6edea128e77ce3d4dc324859e801905666810","modified":1518583235383},{"_id":"public/2017/01/16/tensorflow-iOS-application/index.html","hash":"393032a5bb44e875cff4488fa1dde735e7eacdb5","modified":1518583235383},{"_id":"public/2017/01/19/tensorflow-neural-style/index.html","hash":"64d5d066dc5ec135ffc0c6001cc16c767926ecd1","modified":1518583235383},{"_id":"public/2016/11/01/duo-shuo-is-poor/index.html","hash":"afb3080161b6fbb74744eac20d9fe6e6c3fb6d6e","modified":1518583235383},{"_id":"public/2016/12/27/the-summary-of-2016-year/index.html","hash":"521d0a193a5741c5815a2b43a43e5f443731a154","modified":1518583235383},{"_id":"public/2016/10/19/fear-of-marriage/index.html","hash":"cb81192c9afbea4ad7bba2e0dcdd1af930de5329","modified":1518583235383},{"_id":"public/2016/10/14/Interactive-live-broadcast/index.html","hash":"93f222acdd027d7ec05ed95851b20dcf4fe014b5","modified":1518583235383},{"_id":"public/2016/10/12/how-to-love/index.html","hash":"c91cb8bc7d0d3ce540a9429d9a332d24b3c7d5ec","modified":1518583235383},{"_id":"public/2016/10/02/living-in-the-present/index.html","hash":"39f2347bef0c8968cbd2a31f91caadb383c7be4d","modified":1518583235384},{"_id":"public/2016/10/07/next-ten-years/index.html","hash":"2086da97c7ecc8820c072d04e75f5063ad66e2d4","modified":1518583235384},{"_id":"public/2016/10/08/talk-about-IT-technology/index.html","hash":"823f4c0c73a39edceced3ca484a7563108dbd51b","modified":1518583235384},{"_id":"public/2016/09/25/a-week-in-Shanghai-City/index.html","hash":"d133871fd39ef9e84fb897aa1e2c794a6191ae53","modified":1518583235384},{"_id":"public/2016/09/06/the-feeling-of-Beijing-the-latest-month/index.html","hash":"408bfac23d7b47e85f0a107a4d6d2d955701d4ca","modified":1518583235384},{"_id":"public/2016/09/29/opengl-practice-description/index.html","hash":"1d94328621ab3b58ada71d4c4f5600baeceb753f","modified":1518583235384},{"_id":"public/2016/10/06/private-development-in-three-years/index.html","hash":"4c7ac0c22d135f76a126bf24826b7093a4a92fc6","modified":1518583235384},{"_id":"public/2016/09/03/think-of-telecommuting-and-time-co-ordination/index.html","hash":"3ff9104e61139eb8f7ad397ab681b6950eadb1f0","modified":1518583235384},{"_id":"public/2016/08/25/see-in-Beijing/index.html","hash":"ec1afe683b42cc26707b4b0d72ae68b9db718b7c","modified":1518583235384},{"_id":"public/2016/08/31/spiritual-handholds-on-life/index.html","hash":"e5b2138674d870a748f853683e64481f1965bdac","modified":1518583235384},{"_id":"public/2016/08/24/see-in-Shanghai/index.html","hash":"58b3f70722d37690b1773e08f67a913c3e12dad5","modified":1518583235384},{"_id":"public/2016/07/11/use-openh264-encode-iOS-camera-video-to-h264/index.html","hash":"c77617f95ce8e425c652cdf88b3b2a55981f6db1","modified":1518583235384},{"_id":"public/2016/08/05/go-to-Shanghai/index.html","hash":"92197216db78dcb61edb65ad075b1209fe3e40f6","modified":1518583235384},{"_id":"public/2016/07/07/talk-about-theory-study-and-application/index.html","hash":"7bcd428f6ebe3ec5a63d229b90312c2bdc306da5","modified":1518583235384},{"_id":"public/2016/08/04/lei-xiao-hua-passed-away/index.html","hash":"3c7f4c1dcf28557e6447dffb9af6f423da45fed6","modified":1518583235384},{"_id":"public/2016/07/06/feeling-of-TwoYear-after-master-graduation/index.html","hash":"c52f87cbdbb0206793e0a7960c25f8881dab878f","modified":1518583235385},{"_id":"public/2016/07/08/use-fdk-aac-encode-iOS-mic-pcm-to-aac/index.html","hash":"533ad4526eaf32137121640e99a6d205645af1ae","modified":1518583235384},{"_id":"public/2016/08/03/leave-Shenzhen-for-Beijing/index.html","hash":"7ea0eef0631f1788369515d99e460033cafbf034","modified":1518583235384},{"_id":"public/2016/05/09/live-broadcast-development-process/index.html","hash":"4aa8942fc77906ebedc15711d01adbbef9b2162a","modified":1518583235385},{"_id":"public/2016/03/23/hw-encode-and-transfer-in-ios-platform-encode-aac-part6/index.html","hash":"d2a6103da7a765b3c821a36cf2f0ad52b9928911","modified":1518583235385},{"_id":"public/2016/03/24/review-multithreading-and-memory-management-for-ios-and-osx/index.html","hash":"7a0e33e849e7aebfd4484a059fc765aa0bf93de3","modified":1518583235385},{"_id":"public/2016/03/22/hw-encode-and-transfer-in-ios-platform-mic-part5/index.html","hash":"abd1b1ea578ecd13407e8bf9a9eeda6f24a36138","modified":1518583235385},{"_id":"public/2016/03/18/hw-encode-and-transfer-in-ios-platform-image-merging-part2/index.html","hash":"c8797f196ef3d23680c9b78cca02a1bb05f26a9d","modified":1518583235385},{"_id":"public/2016/03/19/hw-encode-and-transfer-in-ios-platform-real-time-image-filter-part3/index.html","hash":"30828ece3c0c761a2b549152ecaa698259ed7d88","modified":1518583235385},{"_id":"public/2016/03/20/hw-encode-and-transfer-in-ios-platform-videotoolbox-encode-h264-part4/index.html","hash":"608491ebe9dc45f6fb380eaa94800c1dd8c571a2","modified":1518583235385},{"_id":"public/2016/03/17/hw-encode-and-transfer-in-ios-platform-camera-part1/index.html","hash":"63f111ae1e00cfd21108d8fc9a264822a2c33e81","modified":1518583235385},{"_id":"public/2016/03/16/share-my-project-experience-in-audio-and-video-development/index.html","hash":"e77b19933b1a35b2fee8c4b0f99081ba30ca5f23","modified":1518583235385},{"_id":"public/2016/03/14/use-webrtc-codec-in-ios-platform/index.html","hash":"ec54e7fbe04e66d38a4320ea0d0a1a151ee5f145","modified":1518583235385},{"_id":"public/2016/03/15/CMTime-CMTimeMake-CMTimeMakeWithSeconds-in-iOS-encode/index.html","hash":"e40edfdade283a15830e27eb2d0ae82d25bd32e8","modified":1518583235385},{"_id":"public/2016/03/10/buy-house-in-2016-03/index.html","hash":"616b672014e6e802d4c3832d2df544790bdd182c","modified":1518583235385},{"_id":"public/2015/11/16/push-video-or-audio-to-server-in-rtmp-live-play/index.html","hash":"5b449c6cbf9188c1548f0d304d15d3ab7c38df46","modified":1518583235385},{"_id":"public/2015/10/29/iOS-development-need-abilities/index.html","hash":"6919aaee6de45b27e0059a79868bcaac724b79bb","modified":1518583235386},{"_id":"public/2015/11/13/flv-analysis-in-rtmp-live-play/index.html","hash":"545e245f7b3932c11b4bc5d2ef9234f9a6beec8a","modified":1518583235385},{"_id":"public/2015/12/31/review-2015-outlook-2016/index.html","hash":"941461393680112c82d51e6fe1a221fb16c9684a","modified":1518583235385},{"_id":"public/2015/10/09/install-android-studio-ide/index.html","hash":"e7b204e595a8183aa82d28a77f2f995593344125","modified":1518583235386},{"_id":"public/2015/10/08/use-ffmpeg-to-create-a-iOS-player-part1/index.html","hash":"e41737800b8d96366afbfe5ec89b6f466c2130e1","modified":1518583235386},{"_id":"public/2015/10/13/use-ffmpeg-and-rtmp-to-push-iOS-camera-streaming/index.html","hash":"4d3b3748b8466f937ded4a14c8ff79886ae1f8ef","modified":1518583235386},{"_id":"public/2015/10/24/use-VideoToolBox-decode-h264/index.html","hash":"b6e74e0b2967c28f7230abf4c803fd630dabfbbd","modified":1518583235386},{"_id":"public/2015/10/29/frequently-used-audio-and-video-codec-script/index.html","hash":"948be5fb2f7a4550c34f0f03bba427aab791afb0","modified":1518583235386},{"_id":"public/2015/09/24/install-ffmpeg-to-MacOSX-and-use-ffmpeg-to-transform-h264-to-mp4/index.html","hash":"9a1e0e756a3c559897196054ccd7234070c45eee","modified":1518583235386},{"_id":"public/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/index.html","hash":"44e27a492469c3cfada444b4296ce1f68f463238","modified":1518583235386},{"_id":"public/2015/09/16/build-X264-library-for-iOS-platform/index.html","hash":"d3e8a4e646ad877949498469724dfa8479b06a8e","modified":1518583235386},{"_id":"public/2015/07/02/audio-video-transmission-plan/index.html","hash":"1363f77137db04000579ebc7a183ab9f44625c34","modified":1518583235386},{"_id":"public/2015/09/23/use-tool-to-analyze-h264-file/index.html","hash":"6e434596dc8376b4a8f32129152f333ef79ea289","modified":1518583235386},{"_id":"public/2015/07/01/feeling-of-OneYear-after-master-graduation/index.html","hash":"41f7d95fd3e3eba1223ad11610c479ddb72cb70e","modified":1518583235386},{"_id":"public/2015/06/18/view-graduates-which-enter-the-large-companies-or-small-companies/index.html","hash":"6edbc9ac06384a6f5eb57e1b3f630d07facb182f","modified":1518583235386},{"_id":"public/2015/06/15/help-platform-department-to-solve-the-bug-of-chongqing-project/index.html","hash":"dfbe71908010f6717165766d89ac0badb85eb9fb","modified":1518583235386},{"_id":"public/2015/06/12/use-hexo-create-blog-in-mac/index.html","hash":"418cdb393970654aad24ae54327cf05534ba4503","modified":1518583235386},{"_id":"public/2015/09/18/use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264/index.html","hash":"2bad36de93053e90fa41b496f451ba01ad20235e","modified":1518583235386},{"_id":"public/2015/04/22/talk-about-knowledge-points-of-developing-iOS-player/index.html","hash":"25bbf6a4cc1e104069c47f56c9362a43ffbc8f1c","modified":1518583235387},{"_id":"public/2015/04/28/talk-about-FFmpeg-part2/index.html","hash":"9155870518845c4f21eee36ad1a5db3231721f6f","modified":1518583235386},{"_id":"public/index.html","hash":"08107d6f90180946a1f7eb0658b9c9668b34401c","modified":1518583312770},{"_id":"public/2015/05/11/talk-about-cocoapods-install-and-use/index.html","hash":"c18673a95f265f4f90c552b789264e80640647ad","modified":1518583235386},{"_id":"public/page/4/index.html","hash":"d0b56e5b5d7af9c7fa6ec2bea2cf59d04d674a4a","modified":1518583312772},{"_id":"public/page/2/index.html","hash":"862c48a15693497d5f0ad365fbf930b2b96f8cce","modified":1518583312771},{"_id":"public/2015/04/27/talk-about-FFmpeg-part1/index.html","hash":"a9f9ebf7aa9016382f6f868f6f764924e270535e","modified":1518583235387},{"_id":"public/page/6/index.html","hash":"c658bc42723e93cef663df2882784afd246a2005","modified":1518583312772},{"_id":"public/page/7/index.html","hash":"579ed97d90d6c66b437ea11c66a5130fa4dd7345","modified":1518583312772},{"_id":"public/page/8/index.html","hash":"2281993b973095083fb3d8faa7deff1c9b6061a3","modified":1518583312772},{"_id":"public/page/5/index.html","hash":"b45665e6e9a931885a05bcf088d8b74eb4d3fc7d","modified":1518583312772},{"_id":"public/page/3/index.html","hash":"6426b2b282fd9480e15999213a9de8b8475ac473","modified":1518583312771},{"_id":"public/page/11/index.html","hash":"db59b758f6ea4064ba00424bd987c04f0dcdcd78","modified":1518583312773},{"_id":"public/page/10/index.html","hash":"24b16948903cc99133053ad4ae664bf126de8f0e","modified":1518583312773},{"_id":"public/page/9/index.html","hash":"abdfe91a2e5805765c68fc2d6d4cfc367e4b7239","modified":1518583312772},{"_id":"public/page/12/index.html","hash":"3ebd31bf104e950b840465c75b3dc10e08113d4a","modified":1518583312773},{"_id":"public/archives/page/2/index.html","hash":"dd90dfafedce12197f213fa11ecb452af0593595","modified":1518583235387},{"_id":"public/archives/page/3/index.html","hash":"0e5d1d1899a50cfd9373571dd3cf1603c7753a5e","modified":1518583235387},{"_id":"public/archives/page/4/index.html","hash":"f85f0603743fdcb8fae0858662072b5198d8702f","modified":1518583235387},{"_id":"public/archives/page/6/index.html","hash":"db2e0ccd010eebb2b50583b6d99019b5b02dd4f7","modified":1518583235387},{"_id":"public/archives/page/5/index.html","hash":"8aedd43019d279884ae750532000b55372c53f99","modified":1518583235387},{"_id":"public/archives/page/7/index.html","hash":"10a20df0149464d8cb2b712b12f1d8703c8d9ad0","modified":1518583235387},{"_id":"public/archives/page/9/index.html","hash":"5675eb5da2e690e60581fb14cd2f0d15412ca0e3","modified":1518583235387},{"_id":"public/archives/page/8/index.html","hash":"8dbcd96cf9b459f385e1a8b9abb42023f79fe9eb","modified":1518583235387},{"_id":"public/archives/page/10/index.html","hash":"1cb00a01cde0668ddda062871044f6b5d9a6999c","modified":1518583235387},{"_id":"public/archives/page/11/index.html","hash":"d4d2ba9195755e7bc79775c647e8303643133d29","modified":1518583235387},{"_id":"public/archives/index.html","hash":"512087123298929ae90e312de1f49c10407946bf","modified":1518583235387},{"_id":"public/archives/2015/index.html","hash":"efc02b9f079d22fb005f0cf2cd2fa93c39f9fc03","modified":1518583235387},{"_id":"public/archives/2015/page/4/index.html","hash":"f907b3ebd2bd262586cd402ed362197ce53ad79d","modified":1518583235388},{"_id":"public/archives/2015/04/index.html","hash":"2c2d8e22189d3d6f8957ec9c1a9ae9cbccb127b8","modified":1518583235388},{"_id":"public/archives/2015/page/3/index.html","hash":"2afb12d81b40ec3b13cd32eda01527e5d5eb9174","modified":1518583235388},{"_id":"public/archives/2015/page/2/index.html","hash":"82970de29e1920bd7544f7e2770acaaa2c4d2507","modified":1518583235388},{"_id":"public/archives/2015/06/index.html","hash":"5842a40b002c962ecd9f301a01a7071f518f8e4d","modified":1518583235388},{"_id":"public/archives/2015/07/index.html","hash":"555facbe208866c75842121f2d6fab35c85ac923","modified":1518583235388},{"_id":"public/archives/2015/10/index.html","hash":"1b302c2f88fface54a18dd6fbf58c1cfb483cf60","modified":1518583235388},{"_id":"public/archives/2015/11/index.html","hash":"a2e42d9d3ac1948bf803d404290504644df0f670","modified":1518583235388},{"_id":"public/archives/2015/09/index.html","hash":"3feb087d85b3c16e09197e668643050b197d45aa","modified":1518583235388},{"_id":"public/archives/2016/index.html","hash":"9089a34eb48ab0ca4d44f0c77c2fd3db3ae3458b","modified":1518583235388},{"_id":"public/archives/2016/page/2/index.html","hash":"a65603b194d8791ae5d20b801f59844185352f01","modified":1518583235388},{"_id":"public/archives/2016/page/4/index.html","hash":"93151729be5650093c9ef996bc87308ee6f020f9","modified":1518583235388},{"_id":"public/archives/2016/page/3/index.html","hash":"fef29dfa9780749651548f13c937356075ca1ee9","modified":1518583235388},{"_id":"public/archives/2016/page/6/index.html","hash":"8eacd94bc0120d2227cdafb08b1548cd487fbd55","modified":1518583235388},{"_id":"public/archives/2016/page/5/index.html","hash":"4e69ab5f0be7585f54d5d8abf704e0da8f48ff22","modified":1518583235388},{"_id":"public/archives/2016/07/index.html","hash":"a283242779564b0cf278b6e8a7877b12ad49ade8","modified":1518583235389},{"_id":"public/archives/2016/08/index.html","hash":"f0f8b48c91135e57a39ebd03b0541878bb3f441a","modified":1518583235389},{"_id":"public/archives/2016/09/index.html","hash":"fb6f709f161f48efb64a2f23407315113efb3216","modified":1518583235389},{"_id":"public/archives/2016/10/index.html","hash":"176c1df541c7bcc59eca34636a2a55d600c3ab63","modified":1518583235389},{"_id":"public/archives/2016/03/page/2/index.html","hash":"9fa98da1eebc9abab6fdabccf573f259e395aa1b","modified":1518583235389},{"_id":"public/archives/2016/03/index.html","hash":"2c71bec65727cb862fa6b0e1f5d0098c357f6649","modified":1518583235388},{"_id":"public/archives/2017/index.html","hash":"a97e98c7bed53c3be0e7c410ef0e349e0bad061f","modified":1518583235389},{"_id":"public/archives/2017/01/index.html","hash":"37f973225ea0a4950867460575acad4b80b3af6f","modified":1518583235389},{"_id":"public/archives/2017/05/index.html","hash":"2833b36a33b7b56234581aff627bfb9002408f94","modified":1518583235389},{"_id":"public/archives/2017/page/2/index.html","hash":"6f169b9ac838e41a864ece3bb88d48f3dcf38b44","modified":1518583235389},{"_id":"public/archives/2017/07/index.html","hash":"52196eb5574c36eaacace13e4bbf853f6dc28432","modified":1518583235389},{"_id":"public/tags/工作/index.html","hash":"14e87083e6ad0ee260a6160cea7d9988a0f08922","modified":1518583235390},{"_id":"public/tags/工作/page/2/index.html","hash":"f36892f2747167260e8aa5ad6690890e213e64e4","modified":1518583235390},{"_id":"public/tags/工作/page/4/index.html","hash":"ed822c80716dbe1f79c7f35af2dde96ec9312a31","modified":1518583235390},{"_id":"public/tags/工作/page/3/index.html","hash":"4c1e87f622b8e69b81528058d5c70eab84ac475e","modified":1518583235390},{"_id":"public/tags/生活/index.html","hash":"7d778eae87b2392d87f8aa71ac5ee3e6e11a9489","modified":1518583235390},{"_id":"public/tags/生活/page/4/index.html","hash":"f757db88cdf7c483d6729622b00e1c66e3340148","modified":1518583235391},{"_id":"public/tags/生活/page/2/index.html","hash":"a2f4d1a6e3284381f0cf0865cd92d18e3ac62809","modified":1518583235390},{"_id":"public/tags/生活/page/3/index.html","hash":"48c0ae0dfa4067949af2804568c47af39366bb05","modified":1518583235391},{"_id":"public/tags/iOS中高级开发/index.html","hash":"5e44a93bd395448c1bbffbe5b78f2c7de5c62faf","modified":1518583235391},{"_id":"public/tags/音视频处理/index.html","hash":"38d2fe52ad271bf76517c7b1a3674f315cb4e383","modified":1518583235391},{"_id":"public/tags/iOS中高级开发/page/3/index.html","hash":"5808df8a899263a0316c3052160b22b81c07303c","modified":1518583235391},{"_id":"public/tags/iOS中高级开发/page/2/index.html","hash":"041a93ab3be931042117582240c03a445cbd1a9d","modified":1518583235391},{"_id":"public/tags/音视频处理/page/3/index.html","hash":"a2251c7249c2ac9bd92433816ec0ed1172b5260e","modified":1518583235391},{"_id":"public/tags/音视频处理/page/4/index.html","hash":"265670e8b45a2e5878bd0ded9081836f1aca1c98","modified":1518583235391},{"_id":"public/tags/hexo/index.html","hash":"44c6812be40ca77183dd34e2e20f5bde2952b405","modified":1518583235391},{"_id":"public/tags/iOS中高级开发/page/4/index.html","hash":"abd5bbb118ff786030f2f959f95a6ee8816d6225","modified":1518583235391},{"_id":"public/tags/深度学习DL/index.html","hash":"b1f1f74d7899c9151bfeb74521ff8cce2f6fd072","modified":1518583235391},{"_id":"public/tags/音视频处理/page/2/index.html","hash":"bb1496bccf7c4c9f6d3be2619a50cc00bd7b31ba","modified":1518583235391},{"_id":"public/tags/音视频处理/page/5/index.html","hash":"81c94c7b472fada009a759531313289d9b71f703","modified":1518583235391},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1516082671443},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1516082671443},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1516082671443},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1516082671443},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1516082671444},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1516082671444},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1516082671444},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1516082671444},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1516082671444},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516082671444},{"_id":"public/images/myHeader.png","hash":"7406415702e9eb75181b2cc4c41f9da8a8eec3c2","modified":1516082671444},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516082671444},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1516082671444},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1516082671444},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1516082671444},{"_id":"public/images/wechat-get-money.png","hash":"302355c708374f404f9e3339b3f122d0b50e89bb","modified":1516082671444},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1516082671444},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1516082671444},{"_id":"public/images/myFavicon.ico","hash":"82f8bf52c82f3eabb4e569db8f941914e44a5d40","modified":1516082671444},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1516082671444},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1516082671444},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1516082671444},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1516082671444},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1516082671444},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1516082671444},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1516082671444},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1516082671444},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1516082671444},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1516082671444},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1516082671445},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1516082671445},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1516082672447},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1516082672453},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1518583235410},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1516082672462},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1516082672462},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1518583235411},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1516082672462},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1516082672462},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1518583235410},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1516082672462},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1518583235411},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1516082672463},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1516082672463},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1516082672463},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1518583235411},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1516082672463},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1516082672463},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1516082672463},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1516082672463},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1516082672463},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1516082672463},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1516082672463},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1516082672463},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1516082672463},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1516082672463},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1516082672463},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1516082672463},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1516082672463},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1516082672463},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1516082672464},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1516082672464},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1516082672464},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1516082672464},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1516082672464},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1516082672464},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1516082672464},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1516082672464},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1516082672464},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1516082672464},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1516082672464},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1518583235411},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1516082672465},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1516082672465},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1516082672465},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1516082672465},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1516082672465},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1516082672466},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1516082672466},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1516082672466},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1516082672466},{"_id":"public/css/main.css","hash":"6fc12d08fd55f83e08d98978b6b0a5427e214e26","modified":1516082672466},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1516082672466},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1516082672466},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1516082672466},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1516082672466},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1516082672466},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1516082672466},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1516082672467},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1516082672467},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1516082672467},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1516082672467},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1516082672467},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1516082672467},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1516082672467},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1516082672467},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1516082672467},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1516082672467},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1516082672467},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1516082672467},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1516082672468},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1516082672468},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1516082672469},{"_id":"public/images/alipay-get-money.png","hash":"72c58625a293018f679fbaca55d2729e28746713","modified":1518583152329},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1516082672491},{"_id":"themes/next/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1518578300624},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1514748788000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514748788000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1514748788000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1514748788000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1514748788000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1514748788000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514748788000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514748788000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514748788000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1514748788000},{"_id":"themes/next/source/images/alipay.jpg","hash":"b0dfb67c47c46d985af5e4a2e6159476f4d38a47","modified":1518578105227},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1514748788000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1514748788000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1514748788000},{"_id":"themes/next/source/images/wechatpay.jpg","hash":"882229d44c53318525a924ac10a4d4f0aae8de55","modified":1518578104959},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514748788000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514748788000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514748788000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1514748788000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514748788000},{"_id":"themes/next/source/images/avatar.jpg","hash":"39b1932f8ab47cc3fb50b1c9e079d62a52ba07cd","modified":1510899391000},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1518583235395},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1518583235395},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1518583235395},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1518583235395},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1518583235395},{"_id":"public/images/alipay.jpg","hash":"b0dfb67c47c46d985af5e4a2e6159476f4d38a47","modified":1518583235411},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1518583235412},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1518583235414},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1518583235414},{"_id":"public/images/wechatpay.jpg","hash":"882229d44c53318525a924ac10a4d4f0aae8de55","modified":1518583235432},{"_id":"public/images/avatar.jpg","hash":"39b1932f8ab47cc3fb50b1c9e079d62a52ba07cd","modified":1518583235503}],"Category":[],"Data":[],"Page":[{"title":"分类","date":"2017-05-14T01:58:29.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-05-14 09:58:29\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-05-14T03:06:04.000Z","path":"categories/index.html","layout":"page","_id":"cjch8gzq70000qxepz8yulq6e","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2016-10-31T06:10:59.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2016-10-31 14:10:59\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-05-14T03:06:04.000Z","path":"tags/index.html","layout":"page","_id":"cjch8gzqh0002qxepkls69mtp","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"2017年度总结","date":"2017-12-31T15:20:25.000Z","_content":"\n今天是2017年12月31日，2017年的最后一天。马上就2018年了，在2017年有什么收获呢。仔细想想，好像没有什么收获，也没有印象最深的事情。\n\n工作中做出的一点成绩就是开发了 iOS 平台的短视频 SDK，服务了一批企业客户。从2017年5月到现在主要就是做短视频 SDK 的事情，为了赶进度，每天都过的很快，没什么感觉。2017年下半年开始带人做一些事情，算是走带团队的路线了，发现在带人上经验上还需要完善，这方面有些小收获。\n\n<!-- more -->\n生活中最大的变化就是自己想找个人结婚了。这一点改变对我而言，是个很大的变化，2017年上半年，我对结婚这件事都没怎么放在心上。但到了2017年10月后，不知怎么了就非常想结婚了。\n\n2017年工作上没有什么大的提升和成就感，生活上也平平淡淡，这一年就这么过去了，有点可惜。2018年，就30岁了，房子装修、买车、结婚是最重要的事情了。2018年最最重要的事情就是领结婚证。\n\n\n\n\n\n\n\n","source":"_posts/2017-12-31-annual-summary.md","raw":"---\ntitle: 2017年度总结\ndate: 2017-12-31 23:20:25\ntags:\n- 工作\n- 生活\n---\n\n今天是2017年12月31日，2017年的最后一天。马上就2018年了，在2017年有什么收获呢。仔细想想，好像没有什么收获，也没有印象最深的事情。\n\n工作中做出的一点成绩就是开发了 iOS 平台的短视频 SDK，服务了一批企业客户。从2017年5月到现在主要就是做短视频 SDK 的事情，为了赶进度，每天都过的很快，没什么感觉。2017年下半年开始带人做一些事情，算是走带团队的路线了，发现在带人上经验上还需要完善，这方面有些小收获。\n\n<!-- more -->\n生活中最大的变化就是自己想找个人结婚了。这一点改变对我而言，是个很大的变化，2017年上半年，我对结婚这件事都没怎么放在心上。但到了2017年10月后，不知怎么了就非常想结婚了。\n\n2017年工作上没有什么大的提升和成就感，生活上也平平淡淡，这一年就这么过去了，有点可惜。2018年，就30岁了，房子装修、买车、结婚是最重要的事情了。2018年最最重要的事情就是领结婚证。\n\n\n\n\n\n\n\n","slug":"2017-12-31-annual-summary","published":1,"updated":"2017-12-31T15:59:11.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzqa0001qxept0ygjuih","content":"<p>今天是2017年12月31日，2017年的最后一天。马上就2018年了，在2017年有什么收获呢。仔细想想，好像没有什么收获，也没有印象最深的事情。</p>\n<p>工作中做出的一点成绩就是开发了 iOS 平台的短视频 SDK，服务了一批企业客户。从2017年5月到现在主要就是做短视频 SDK 的事情，为了赶进度，每天都过的很快，没什么感觉。2017年下半年开始带人做一些事情，算是走带团队的路线了，发现在带人上经验上还需要完善，这方面有些小收获。</p>\n<a id=\"more\"></a>\n<p>生活中最大的变化就是自己想找个人结婚了。这一点改变对我而言，是个很大的变化，2017年上半年，我对结婚这件事都没怎么放在心上。但到了2017年10月后，不知怎么了就非常想结婚了。</p>\n<p>2017年工作上没有什么大的提升和成就感，生活上也平平淡淡，这一年就这么过去了，有点可惜。2018年，就30岁了，房子装修、买车、结婚是最重要的事情了。2018年最最重要的事情就是领结婚证。</p>\n","site":{"data":{}},"excerpt":"<p>今天是2017年12月31日，2017年的最后一天。马上就2018年了，在2017年有什么收获呢。仔细想想，好像没有什么收获，也没有印象最深的事情。</p>\n<p>工作中做出的一点成绩就是开发了 iOS 平台的短视频 SDK，服务了一批企业客户。从2017年5月到现在主要就是做短视频 SDK 的事情，为了赶进度，每天都过的很快，没什么感觉。2017年下半年开始带人做一些事情，算是走带团队的路线了，发现在带人上经验上还需要完善，这方面有些小收获。</p>","more":"<p>生活中最大的变化就是自己想找个人结婚了。这一点改变对我而言，是个很大的变化，2017年上半年，我对结婚这件事都没怎么放在心上。但到了2017年10月后，不知怎么了就非常想结婚了。</p>\n<p>2017年工作上没有什么大的提升和成就感，生活上也平平淡淡，这一年就这么过去了，有点可惜。2018年，就30岁了，房子装修、买车、结婚是最重要的事情了。2018年最最重要的事情就是领结婚证。</p>"},{"title":"2017.5.20谈感受","date":"2017-05-20T07:41:16.000Z","_content":"\n今天是5月20号，微信里各种撒狗粮、秀恩爱。这一切，都跟我没什么关系，该看资料看资料，该写代码写代码，该睡就睡。日子就是这么单调、有规律。\n\n翻了翻博客里以前的文章，最近一年没怎么写技术性文章，写的都是些心情、感悟。工作忙是一个原因，生活中对未来的规划的不确定性也是一个导致自己静不下心来写技术性文章的原因。以前，还会看看文学方面的书，放松下。现在，书看的少了，写起东西来词穷，流水账的陈述，自己都看不顺眼了。文字这东西很奇妙，把内心的心情通过文字表述出来，能释放压力，缓解精神上的负担。当寂寞空虚冷的时候，就真正明白书和文字才是疗伤的良药。\n\n写到这里，想起一句话，原文不记得了，意思大概是“当你没能力时，遇到想要呵护的人是那么地难，当你有能力时，那个对的人已经离你而去”。生活就是这样，得向前看，你只要往回看，伤心是难免的。\n\n<!-- more -->\n\n生活要积极向上，活得才有激情。没激情的生活，过久了就堕落了。我发现自己在精神上已经堕落了，生活中缺乏趣味，缺乏激情。2017年已经过去了一半，那就抓紧将来的时间，活得开心、快乐，才能有健康的精神面貌、世界观和人生观。\n\n以上文字纯粹是流水账，想到什么写什么。用“该文言语简单、质朴、写实，有可取之处”来抚慰下自己词穷的囧态。好了，到了文章结束的时候了，嗯，那就结束吧。\n\n`二零一七年五月二十日 北京`\n\n\n","source":"_posts/2017-5-20-idea.md","raw":"---\ntitle: 2017.5.20谈感受\ndate: 2017-05-20 15:41:16\ntags:\n- 生活\n---\n\n今天是5月20号，微信里各种撒狗粮、秀恩爱。这一切，都跟我没什么关系，该看资料看资料，该写代码写代码，该睡就睡。日子就是这么单调、有规律。\n\n翻了翻博客里以前的文章，最近一年没怎么写技术性文章，写的都是些心情、感悟。工作忙是一个原因，生活中对未来的规划的不确定性也是一个导致自己静不下心来写技术性文章的原因。以前，还会看看文学方面的书，放松下。现在，书看的少了，写起东西来词穷，流水账的陈述，自己都看不顺眼了。文字这东西很奇妙，把内心的心情通过文字表述出来，能释放压力，缓解精神上的负担。当寂寞空虚冷的时候，就真正明白书和文字才是疗伤的良药。\n\n写到这里，想起一句话，原文不记得了，意思大概是“当你没能力时，遇到想要呵护的人是那么地难，当你有能力时，那个对的人已经离你而去”。生活就是这样，得向前看，你只要往回看，伤心是难免的。\n\n<!-- more -->\n\n生活要积极向上，活得才有激情。没激情的生活，过久了就堕落了。我发现自己在精神上已经堕落了，生活中缺乏趣味，缺乏激情。2017年已经过去了一半，那就抓紧将来的时间，活得开心、快乐，才能有健康的精神面貌、世界观和人生观。\n\n以上文字纯粹是流水账，想到什么写什么。用“该文言语简单、质朴、写实，有可取之处”来抚慰下自己词穷的囧态。好了，到了文章结束的时候了，嗯，那就结束吧。\n\n`二零一七年五月二十日 北京`\n\n\n","slug":"2017-5-20-idea","published":1,"updated":"2017-05-20T08:36:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzqj0003qxepowz8tynt","content":"<p>今天是5月20号，微信里各种撒狗粮、秀恩爱。这一切，都跟我没什么关系，该看资料看资料，该写代码写代码，该睡就睡。日子就是这么单调、有规律。</p>\n<p>翻了翻博客里以前的文章，最近一年没怎么写技术性文章，写的都是些心情、感悟。工作忙是一个原因，生活中对未来的规划的不确定性也是一个导致自己静不下心来写技术性文章的原因。以前，还会看看文学方面的书，放松下。现在，书看的少了，写起东西来词穷，流水账的陈述，自己都看不顺眼了。文字这东西很奇妙，把内心的心情通过文字表述出来，能释放压力，缓解精神上的负担。当寂寞空虚冷的时候，就真正明白书和文字才是疗伤的良药。</p>\n<p>写到这里，想起一句话，原文不记得了，意思大概是“当你没能力时，遇到想要呵护的人是那么地难，当你有能力时，那个对的人已经离你而去”。生活就是这样，得向前看，你只要往回看，伤心是难免的。</p>\n<a id=\"more\"></a>\n<p>生活要积极向上，活得才有激情。没激情的生活，过久了就堕落了。我发现自己在精神上已经堕落了，生活中缺乏趣味，缺乏激情。2017年已经过去了一半，那就抓紧将来的时间，活得开心、快乐，才能有健康的精神面貌、世界观和人生观。</p>\n<p>以上文字纯粹是流水账，想到什么写什么。用“该文言语简单、质朴、写实，有可取之处”来抚慰下自己词穷的囧态。好了，到了文章结束的时候了，嗯，那就结束吧。</p>\n<p><code>二零一七年五月二十日 北京</code></p>\n","site":{"data":{}},"excerpt":"<p>今天是5月20号，微信里各种撒狗粮、秀恩爱。这一切，都跟我没什么关系，该看资料看资料，该写代码写代码，该睡就睡。日子就是这么单调、有规律。</p>\n<p>翻了翻博客里以前的文章，最近一年没怎么写技术性文章，写的都是些心情、感悟。工作忙是一个原因，生活中对未来的规划的不确定性也是一个导致自己静不下心来写技术性文章的原因。以前，还会看看文学方面的书，放松下。现在，书看的少了，写起东西来词穷，流水账的陈述，自己都看不顺眼了。文字这东西很奇妙，把内心的心情通过文字表述出来，能释放压力，缓解精神上的负担。当寂寞空虚冷的时候，就真正明白书和文字才是疗伤的良药。</p>\n<p>写到这里，想起一句话，原文不记得了，意思大概是“当你没能力时，遇到想要呵护的人是那么地难，当你有能力时，那个对的人已经离你而去”。生活就是这样，得向前看，你只要往回看，伤心是难免的。</p>","more":"<p>生活要积极向上，活得才有激情。没激情的生活，过久了就堕落了。我发现自己在精神上已经堕落了，生活中缺乏趣味，缺乏激情。2017年已经过去了一半，那就抓紧将来的时间，活得开心、快乐，才能有健康的精神面貌、世界观和人生观。</p>\n<p>以上文字纯粹是流水账，想到什么写什么。用“该文言语简单、质朴、写实，有可取之处”来抚慰下自己词穷的囧态。好了，到了文章结束的时候了，嗯，那就结束吧。</p>\n<p><code>二零一七年五月二十日 北京</code></p>"},{"title":"iOS平台上编码之CMTime，CMTimeMake，CMTimeMakeWithSeconds的作用","date":"2016-03-15T08:39:35.000Z","_content":"\n在iOS平台上使用iOS8及以上系统的VideoToolbox进行硬编码，会涉及到CMTime，CMTimeMake，CMTimeMakeWithSeconds的使用。下面说下这几个结构体的作用。\n\nCoreMedia.framework的CMTime.h中CMTime，CMTimeMake，CMTimeMakeWithSeconds的定义如下：\n\n<!-- more -->\n\n（备注：关于CMTime可翻看下苹果官网api文档\n[http://developer.apple.com/library/mac/#documentation/CoreMedia/Reference/CMTime/Reference/reference.html](http://developer.apple.com/library/mac/#documentation/CoreMedia/Reference/CMTime/Reference/reference.html)）\n\n```\n/*!\n\t@typedef\tCMTime\n\t@abstract\tRational time value represented as int64/int32.\n*/\ntypedef struct\n{\n\tCMTimeValue\tvalue;\t\t/*! @field value The value of the CMTime. value/timescale = seconds. */\n\tCMTimeScale\ttimescale;\t/*! @field timescale The timescale of the CMTime. value/timescale = seconds.  */\n\tCMTimeFlags\tflags;\t\t/*! @field flags The flags, eg. kCMTimeFlags_Valid, kCMTimeFlags_PositiveInfinity, etc. */\n\tCMTimeEpoch\tepoch;\t\t/*! @field epoch Differentiates between equal timestamps that are actually different because\n\t\t\t\t\t\t\t\t\t\t\t\t of looping, multi-item sequencing, etc.  \n\t\t\t\t\t\t\t\t\t\t\t\t Will be used during comparison: greater epochs happen after lesser ones. \n\t\t\t\t\t\t\t\t\t\t\t\t Additions/subtraction is only possible within a single epoch,\n\t\t\t\t\t\t\t\t\t\t\t\t however, since epoch length may be unknown/variable. */\n} CMTime;\n```\n\n```\n/*!\n\t@function\tCMTimeMake\n\t@abstract\tMake a valid CMTime with value and timescale.  Epoch is implied to be 0.\n\t@result\t\tThe resulting CMTime.\n*/\nCM_EXPORT \nCMTime CMTimeMake(\n\t\t\t\tint64_t value,\t\t/*! @param value\t\tInitializes the value field of the resulting CMTime. */\n\t\t\t\tint32_t timescale)\t/*! @param timescale\tInitializes the timescale field of the resulting CMTime. */\n\t\t\t\t\t\t\t__OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0);\n```\n\n```\n/*!\n\t@function\tCMTimeMakeWithSeconds\n\t@abstract\tMake a CMTime from a Float64 number of seconds, and a preferred timescale.\n\t@discussion\tThe epoch of the result will be zero.  If preferredTimeScale is <= 0, the result\n\t\t\t\twill be an invalid CMTime.  If the preferred timescale will cause an overflow, the\n\t\t\t\ttimescale will be halved repeatedly until the overflow goes away, or the timescale\n\t\t\t\tis 1.  If it still overflows at that point, the result will be +/- infinity.  The\n\t\t\t\tkCMTimeFlags_HasBeenRounded flag will be set if the result, when converted back to\n\t\t\t\tseconds, is not exactly equal to the original seconds value.\n\t@result\t\tThe resulting CMTime.\n*/\nCM_EXPORT \nCMTime CMTimeMakeWithSeconds(\n\t\t\t\tFloat64 seconds,\n\t\t\t\tint32_t preferredTimeScale)\n\t\t\t\t\t\t\t__OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0);\n```\t\n\n\tCMTime firstframe=CMTimeMake(1,10);\n\tCMTime lastframe=CMTimeMake(10, 10);\n\nCMTime是专门用来表示影片事件用的类别，用法为：CMTimeMake(time, timeScale)。其中，time指的是时间，而不是秒，而时间要换算成秒，此时就要用到第二个参数timeScale。timeScale指的是1秒需要有几个frame构成（可以看作为fps），因此真正要表达的时间就是 time/timeScale，才会是秒。\n\n上面的代码可以理解为，视频的fps（帧率）是10，firstframe是第一帧，在视频中的时间为0.1秒，lastframe是第10帧，在视频中的时间为1秒。\n\n或者换种写法：CMTime curFrame = CMTimeMake(第几帧， 帧率）。看看另一篇博客的写法：[解釋何謂iOS中的CMTimeMake](http://blog.riaproject.com/objective-c/1745/解釋何謂ios中的cmtimemake.html)， 要使用VPN翻墙才能打开这篇文章。这么看，CMTime firstframe=CMTimeMake(32，16);\nCMTime lastframe=CMTimeMake(48, 24); 这两个都表示2秒的时间。但是帧率是完全不同的。\n\nCMTimeMakeWithSeconds和CMTimeMake区别在于，第一个函数的第一个参数可以是float，其他一样。\n\n以上解释的比较清楚了，为加深印象，可看下stackoverflow上[Trying to understand CMTime](http://stackoverflow.com/questions/12902410/trying-to-understand-cmtime)一文。\n\n综述如下：\n\n\tCMTimeMake(a,b)    \t\t\t   a当前第几帧, b每秒钟多少帧.当前播放时间a/b\n\tCMTimeMakeWithSeconds(a,b)    a当前时间,b每秒钟多少帧.\n\t\t\t\t\t\t\n\n","source":"_posts/CMTime-CMTimeMake-CMTimeMakeWithSeconds-in-iOS-encode.md","raw":"---\ntitle: iOS平台上编码之CMTime，CMTimeMake，CMTimeMakeWithSeconds的作用\ndate: 2016-03-15 16:39:35\ntags:\n- iOS中高级开发\n- 音视频处理\n---\n\n在iOS平台上使用iOS8及以上系统的VideoToolbox进行硬编码，会涉及到CMTime，CMTimeMake，CMTimeMakeWithSeconds的使用。下面说下这几个结构体的作用。\n\nCoreMedia.framework的CMTime.h中CMTime，CMTimeMake，CMTimeMakeWithSeconds的定义如下：\n\n<!-- more -->\n\n（备注：关于CMTime可翻看下苹果官网api文档\n[http://developer.apple.com/library/mac/#documentation/CoreMedia/Reference/CMTime/Reference/reference.html](http://developer.apple.com/library/mac/#documentation/CoreMedia/Reference/CMTime/Reference/reference.html)）\n\n```\n/*!\n\t@typedef\tCMTime\n\t@abstract\tRational time value represented as int64/int32.\n*/\ntypedef struct\n{\n\tCMTimeValue\tvalue;\t\t/*! @field value The value of the CMTime. value/timescale = seconds. */\n\tCMTimeScale\ttimescale;\t/*! @field timescale The timescale of the CMTime. value/timescale = seconds.  */\n\tCMTimeFlags\tflags;\t\t/*! @field flags The flags, eg. kCMTimeFlags_Valid, kCMTimeFlags_PositiveInfinity, etc. */\n\tCMTimeEpoch\tepoch;\t\t/*! @field epoch Differentiates between equal timestamps that are actually different because\n\t\t\t\t\t\t\t\t\t\t\t\t of looping, multi-item sequencing, etc.  \n\t\t\t\t\t\t\t\t\t\t\t\t Will be used during comparison: greater epochs happen after lesser ones. \n\t\t\t\t\t\t\t\t\t\t\t\t Additions/subtraction is only possible within a single epoch,\n\t\t\t\t\t\t\t\t\t\t\t\t however, since epoch length may be unknown/variable. */\n} CMTime;\n```\n\n```\n/*!\n\t@function\tCMTimeMake\n\t@abstract\tMake a valid CMTime with value and timescale.  Epoch is implied to be 0.\n\t@result\t\tThe resulting CMTime.\n*/\nCM_EXPORT \nCMTime CMTimeMake(\n\t\t\t\tint64_t value,\t\t/*! @param value\t\tInitializes the value field of the resulting CMTime. */\n\t\t\t\tint32_t timescale)\t/*! @param timescale\tInitializes the timescale field of the resulting CMTime. */\n\t\t\t\t\t\t\t__OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0);\n```\n\n```\n/*!\n\t@function\tCMTimeMakeWithSeconds\n\t@abstract\tMake a CMTime from a Float64 number of seconds, and a preferred timescale.\n\t@discussion\tThe epoch of the result will be zero.  If preferredTimeScale is <= 0, the result\n\t\t\t\twill be an invalid CMTime.  If the preferred timescale will cause an overflow, the\n\t\t\t\ttimescale will be halved repeatedly until the overflow goes away, or the timescale\n\t\t\t\tis 1.  If it still overflows at that point, the result will be +/- infinity.  The\n\t\t\t\tkCMTimeFlags_HasBeenRounded flag will be set if the result, when converted back to\n\t\t\t\tseconds, is not exactly equal to the original seconds value.\n\t@result\t\tThe resulting CMTime.\n*/\nCM_EXPORT \nCMTime CMTimeMakeWithSeconds(\n\t\t\t\tFloat64 seconds,\n\t\t\t\tint32_t preferredTimeScale)\n\t\t\t\t\t\t\t__OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0);\n```\t\n\n\tCMTime firstframe=CMTimeMake(1,10);\n\tCMTime lastframe=CMTimeMake(10, 10);\n\nCMTime是专门用来表示影片事件用的类别，用法为：CMTimeMake(time, timeScale)。其中，time指的是时间，而不是秒，而时间要换算成秒，此时就要用到第二个参数timeScale。timeScale指的是1秒需要有几个frame构成（可以看作为fps），因此真正要表达的时间就是 time/timeScale，才会是秒。\n\n上面的代码可以理解为，视频的fps（帧率）是10，firstframe是第一帧，在视频中的时间为0.1秒，lastframe是第10帧，在视频中的时间为1秒。\n\n或者换种写法：CMTime curFrame = CMTimeMake(第几帧， 帧率）。看看另一篇博客的写法：[解釋何謂iOS中的CMTimeMake](http://blog.riaproject.com/objective-c/1745/解釋何謂ios中的cmtimemake.html)， 要使用VPN翻墙才能打开这篇文章。这么看，CMTime firstframe=CMTimeMake(32，16);\nCMTime lastframe=CMTimeMake(48, 24); 这两个都表示2秒的时间。但是帧率是完全不同的。\n\nCMTimeMakeWithSeconds和CMTimeMake区别在于，第一个函数的第一个参数可以是float，其他一样。\n\n以上解释的比较清楚了，为加深印象，可看下stackoverflow上[Trying to understand CMTime](http://stackoverflow.com/questions/12902410/trying-to-understand-cmtime)一文。\n\n综述如下：\n\n\tCMTimeMake(a,b)    \t\t\t   a当前第几帧, b每秒钟多少帧.当前播放时间a/b\n\tCMTimeMakeWithSeconds(a,b)    a当前时间,b每秒钟多少帧.\n\t\t\t\t\t\t\n\n","slug":"CMTime-CMTimeMake-CMTimeMakeWithSeconds-in-iOS-encode","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzqt0005qxepgz1vy833","content":"<p>在iOS平台上使用iOS8及以上系统的VideoToolbox进行硬编码，会涉及到CMTime，CMTimeMake，CMTimeMakeWithSeconds的使用。下面说下这几个结构体的作用。</p>\n<p>CoreMedia.framework的CMTime.h中CMTime，CMTimeMake，CMTimeMakeWithSeconds的定义如下：</p>\n<a id=\"more\"></a>\n<p>（备注：关于CMTime可翻看下苹果官网api文档<br><a href=\"http://developer.apple.com/library/mac/#documentation/CoreMedia/Reference/CMTime/Reference/reference.html\" target=\"_blank\" rel=\"external\">http://developer.apple.com/library/mac/#documentation/CoreMedia/Reference/CMTime/Reference/reference.html</a>）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*!</span></div><div class=\"line\">\t<span class=\"doctag\">@typedef</span>\tCMTime</div><div class=\"line\">\t<span class=\"doctag\">@abstract</span>\tRational time value represented as int64/int32.</div><div class=\"line\">*/</div><div class=\"line\">typedef struct</div><div class=\"line\">&#123;</div><div class=\"line\">\tCMTimeValue\tvalue;\t\t<span class=\"comment\">/*! <span class=\"doctag\">@field</span> value The value of the CMTime. value/timescale = seconds. */</span></div><div class=\"line\">\tCMTimeScale\ttimescale;\t<span class=\"comment\">/*! <span class=\"doctag\">@field</span> timescale The timescale of the CMTime. value/timescale = seconds.  */</span></div><div class=\"line\">\tCMTimeFlags\tflags;\t\t<span class=\"comment\">/*! <span class=\"doctag\">@field</span> flags The flags, eg. kCMTimeFlags_Valid, kCMTimeFlags_PositiveInfinity, etc. */</span></div><div class=\"line\">\tCMTimeEpoch\tepoch;\t\t<span class=\"comment\">/*! <span class=\"doctag\">@field</span> epoch Differentiates between equal timestamps that are actually different because</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t of looping, multi-item sequencing, etc.  </div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t Will be used during comparison: greater epochs happen after lesser ones. </div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t Additions/subtraction is only possible within a single epoch,</div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t however, since epoch length may be unknown/variable. */</div><div class=\"line\">&#125; CMTime;</div></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*!</span></div><div class=\"line\">\t<span class=\"doctag\">@function</span>\tCMTimeMake</div><div class=\"line\">\t<span class=\"doctag\">@abstract</span>\tMake a valid CMTime with value and timescale.  Epoch is implied to be 0.</div><div class=\"line\">\t<span class=\"doctag\">@result</span>\t\tThe resulting CMTime.</div><div class=\"line\">*/</div><div class=\"line\">CM_EXPORT </div><div class=\"line\">CMTime CMTimeMake(</div><div class=\"line\">\t\t\t\tint64_t value,\t\t<span class=\"comment\">/*! <span class=\"doctag\">@param</span> value\t\tInitializes the value field of the resulting CMTime. */</span></div><div class=\"line\">\t\t\t\tint32_t timescale)\t<span class=\"comment\">/*! <span class=\"doctag\">@param</span> timescale\tInitializes the timescale field of the resulting CMTime. */</span></div><div class=\"line\">\t\t\t\t\t\t\t__OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0);</div></pre></td></tr></table></figure>\n<pre><code>/*!\n    @function    CMTimeMakeWithSeconds\n    @abstract    Make a CMTime from a Float64 number of seconds, and a preferred timescale.\n    @discussion    The epoch of the result will be zero.  If preferredTimeScale is &lt;= 0, the result\n                will be an invalid CMTime.  If the preferred timescale will cause an overflow, the\n                timescale will be halved repeatedly until the overflow goes away, or the timescale\n                is 1.  If it still overflows at that point, the result will be +/- infinity.  The\n                kCMTimeFlags_HasBeenRounded flag will be set if the result, when converted back to\n                seconds, is not exactly equal to the original seconds value.\n    @result        The resulting CMTime.\n*/\nCM_EXPORT \nCMTime CMTimeMakeWithSeconds(\n                Float64 seconds,\n                int32_t preferredTimeScale)\n                            __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0);\n</code></pre><pre><code>CMTime firstframe=CMTimeMake(1,10);\nCMTime lastframe=CMTimeMake(10, 10);\n</code></pre><p>CMTime是专门用来表示影片事件用的类别，用法为：CMTimeMake(time, timeScale)。其中，time指的是时间，而不是秒，而时间要换算成秒，此时就要用到第二个参数timeScale。timeScale指的是1秒需要有几个frame构成（可以看作为fps），因此真正要表达的时间就是 time/timeScale，才会是秒。</p>\n<p>上面的代码可以理解为，视频的fps（帧率）是10，firstframe是第一帧，在视频中的时间为0.1秒，lastframe是第10帧，在视频中的时间为1秒。</p>\n<p>或者换种写法：CMTime curFrame = CMTimeMake(第几帧， 帧率）。看看另一篇博客的写法：<a href=\"http://blog.riaproject.com/objective-c/1745/解釋何謂ios中的cmtimemake.html\" target=\"_blank\" rel=\"external\">解釋何謂iOS中的CMTimeMake</a>， 要使用VPN翻墙才能打开这篇文章。这么看，CMTime firstframe=CMTimeMake(32，16);<br>CMTime lastframe=CMTimeMake(48, 24); 这两个都表示2秒的时间。但是帧率是完全不同的。</p>\n<p>CMTimeMakeWithSeconds和CMTimeMake区别在于，第一个函数的第一个参数可以是float，其他一样。</p>\n<p>以上解释的比较清楚了，为加深印象，可看下stackoverflow上<a href=\"http://stackoverflow.com/questions/12902410/trying-to-understand-cmtime\" target=\"_blank\" rel=\"external\">Trying to understand CMTime</a>一文。</p>\n<p>综述如下：</p>\n<pre><code>CMTimeMake(a,b)                   a当前第几帧, b每秒钟多少帧.当前播放时间a/b\nCMTimeMakeWithSeconds(a,b)    a当前时间,b每秒钟多少帧.\n</code></pre>","site":{"data":{}},"excerpt":"<p>在iOS平台上使用iOS8及以上系统的VideoToolbox进行硬编码，会涉及到CMTime，CMTimeMake，CMTimeMakeWithSeconds的使用。下面说下这几个结构体的作用。</p>\n<p>CoreMedia.framework的CMTime.h中CMTime，CMTimeMake，CMTimeMakeWithSeconds的定义如下：</p>","more":"<p>（备注：关于CMTime可翻看下苹果官网api文档<br><a href=\"http://developer.apple.com/library/mac/#documentation/CoreMedia/Reference/CMTime/Reference/reference.html\" target=\"_blank\" rel=\"external\">http://developer.apple.com/library/mac/#documentation/CoreMedia/Reference/CMTime/Reference/reference.html</a>）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*!</span></div><div class=\"line\">\t<span class=\"doctag\">@typedef</span>\tCMTime</div><div class=\"line\">\t<span class=\"doctag\">@abstract</span>\tRational time value represented as int64/int32.</div><div class=\"line\">*/</div><div class=\"line\">typedef struct</div><div class=\"line\">&#123;</div><div class=\"line\">\tCMTimeValue\tvalue;\t\t<span class=\"comment\">/*! <span class=\"doctag\">@field</span> value The value of the CMTime. value/timescale = seconds. */</span></div><div class=\"line\">\tCMTimeScale\ttimescale;\t<span class=\"comment\">/*! <span class=\"doctag\">@field</span> timescale The timescale of the CMTime. value/timescale = seconds.  */</span></div><div class=\"line\">\tCMTimeFlags\tflags;\t\t<span class=\"comment\">/*! <span class=\"doctag\">@field</span> flags The flags, eg. kCMTimeFlags_Valid, kCMTimeFlags_PositiveInfinity, etc. */</span></div><div class=\"line\">\tCMTimeEpoch\tepoch;\t\t<span class=\"comment\">/*! <span class=\"doctag\">@field</span> epoch Differentiates between equal timestamps that are actually different because</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t of looping, multi-item sequencing, etc.  </div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t Will be used during comparison: greater epochs happen after lesser ones. </div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t Additions/subtraction is only possible within a single epoch,</div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t however, since epoch length may be unknown/variable. */</div><div class=\"line\">&#125; CMTime;</div></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*!</span></div><div class=\"line\">\t<span class=\"doctag\">@function</span>\tCMTimeMake</div><div class=\"line\">\t<span class=\"doctag\">@abstract</span>\tMake a valid CMTime with value and timescale.  Epoch is implied to be 0.</div><div class=\"line\">\t<span class=\"doctag\">@result</span>\t\tThe resulting CMTime.</div><div class=\"line\">*/</div><div class=\"line\">CM_EXPORT </div><div class=\"line\">CMTime CMTimeMake(</div><div class=\"line\">\t\t\t\tint64_t value,\t\t<span class=\"comment\">/*! <span class=\"doctag\">@param</span> value\t\tInitializes the value field of the resulting CMTime. */</span></div><div class=\"line\">\t\t\t\tint32_t timescale)\t<span class=\"comment\">/*! <span class=\"doctag\">@param</span> timescale\tInitializes the timescale field of the resulting CMTime. */</span></div><div class=\"line\">\t\t\t\t\t\t\t__OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0);</div></pre></td></tr></table></figure>\n<pre><code>/*!\n    @function    CMTimeMakeWithSeconds\n    @abstract    Make a CMTime from a Float64 number of seconds, and a preferred timescale.\n    @discussion    The epoch of the result will be zero.  If preferredTimeScale is &lt;= 0, the result\n                will be an invalid CMTime.  If the preferred timescale will cause an overflow, the\n                timescale will be halved repeatedly until the overflow goes away, or the timescale\n                is 1.  If it still overflows at that point, the result will be +/- infinity.  The\n                kCMTimeFlags_HasBeenRounded flag will be set if the result, when converted back to\n                seconds, is not exactly equal to the original seconds value.\n    @result        The resulting CMTime.\n*/\nCM_EXPORT \nCMTime CMTimeMakeWithSeconds(\n                Float64 seconds,\n                int32_t preferredTimeScale)\n                            __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0);\n</code></pre><pre><code>CMTime firstframe=CMTimeMake(1,10);\nCMTime lastframe=CMTimeMake(10, 10);\n</code></pre><p>CMTime是专门用来表示影片事件用的类别，用法为：CMTimeMake(time, timeScale)。其中，time指的是时间，而不是秒，而时间要换算成秒，此时就要用到第二个参数timeScale。timeScale指的是1秒需要有几个frame构成（可以看作为fps），因此真正要表达的时间就是 time/timeScale，才会是秒。</p>\n<p>上面的代码可以理解为，视频的fps（帧率）是10，firstframe是第一帧，在视频中的时间为0.1秒，lastframe是第10帧，在视频中的时间为1秒。</p>\n<p>或者换种写法：CMTime curFrame = CMTimeMake(第几帧， 帧率）。看看另一篇博客的写法：<a href=\"http://blog.riaproject.com/objective-c/1745/解釋何謂ios中的cmtimemake.html\" target=\"_blank\" rel=\"external\">解釋何謂iOS中的CMTimeMake</a>， 要使用VPN翻墙才能打开这篇文章。这么看，CMTime firstframe=CMTimeMake(32，16);<br>CMTime lastframe=CMTimeMake(48, 24); 这两个都表示2秒的时间。但是帧率是完全不同的。</p>\n<p>CMTimeMakeWithSeconds和CMTimeMake区别在于，第一个函数的第一个参数可以是float，其他一样。</p>\n<p>以上解释的比较清楚了，为加深印象，可看下stackoverflow上<a href=\"http://stackoverflow.com/questions/12902410/trying-to-understand-cmtime\" target=\"_blank\" rel=\"external\">Trying to understand CMTime</a>一文。</p>\n<p>综述如下：</p>\n<pre><code>CMTimeMake(a,b)                   a当前第几帧, b每秒钟多少帧.当前播放时间a/b\nCMTimeMakeWithSeconds(a,b)    a当前时间,b每秒钟多少帧.\n</code></pre>"},{"title":"聊一聊互动直播","date":"2016-10-14T07:30:00.000Z","_content":"\n　　传统单人直播，形式上比较单调，以主播为主导，聊各种话题。观众与主播之间的沟通，基于即时通信（IM）技术以文字，表情，点赞等来与主播互动。这种互动是有延迟性的，单向的，一问一答的模式。为了增加观众与主播之间的强互动性，有必要引入实时通信（RTC）技术打造连麦互动直播。\n\n<!-- more -->\n　　即时通信中 XMPP 协议是被广泛的协议之一，XMPP 是基于文本标记语言 XML 的协议。打造一套属于自己的即时通信系统可以基于 XMPP 协议从零开发，也可以利用开源方案去实现，比如 openfire。openfire 是基于 XMPP 协议，采用 Java 编程语言开发的实时协作服务器，想快速实现一套 IM 方案，可以在该开源工程上进行改造，节省开发时间和成本。\n\n　　音视频实时通信领域现广泛采用 Google 的开源方案 WebRTC。WebRTC  分为三部分：音频处理模块，视频处理模块，协议层模块。在使用 WebRTC 时，可以从中拆解出所需要的功能块去实现所需要的功能。\n\n　　现在 WebRTC 被广泛推广，移动直播也从传统的单人直播进入到了多人连麦互动直播的应用场景。RTC 互动直播必将是直播行业中下一场厮杀的战场。\n\n　　今天以讲师的角色在公司组织的直播技术培训课堂上讲了直播连麦涉及到的一些概念，方案设计。一节课讲授下来，我发现 RTC 可深挖，可改进的点还是比较多的。\n\n`2016年10月14号 写于北京市太阳宫中路12号 亲笔`\n","source":"_posts/Interactive-live-broadcast.md","raw":"---\ntitle: 聊一聊互动直播\ndate: 2016-10-14 15:30:00\ntags:\n- 工作\n---\n\n　　传统单人直播，形式上比较单调，以主播为主导，聊各种话题。观众与主播之间的沟通，基于即时通信（IM）技术以文字，表情，点赞等来与主播互动。这种互动是有延迟性的，单向的，一问一答的模式。为了增加观众与主播之间的强互动性，有必要引入实时通信（RTC）技术打造连麦互动直播。\n\n<!-- more -->\n　　即时通信中 XMPP 协议是被广泛的协议之一，XMPP 是基于文本标记语言 XML 的协议。打造一套属于自己的即时通信系统可以基于 XMPP 协议从零开发，也可以利用开源方案去实现，比如 openfire。openfire 是基于 XMPP 协议，采用 Java 编程语言开发的实时协作服务器，想快速实现一套 IM 方案，可以在该开源工程上进行改造，节省开发时间和成本。\n\n　　音视频实时通信领域现广泛采用 Google 的开源方案 WebRTC。WebRTC  分为三部分：音频处理模块，视频处理模块，协议层模块。在使用 WebRTC 时，可以从中拆解出所需要的功能块去实现所需要的功能。\n\n　　现在 WebRTC 被广泛推广，移动直播也从传统的单人直播进入到了多人连麦互动直播的应用场景。RTC 互动直播必将是直播行业中下一场厮杀的战场。\n\n　　今天以讲师的角色在公司组织的直播技术培训课堂上讲了直播连麦涉及到的一些概念，方案设计。一节课讲授下来，我发现 RTC 可深挖，可改进的点还是比较多的。\n\n`2016年10月14号 写于北京市太阳宫中路12号 亲笔`\n","slug":"Interactive-live-broadcast","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzqw0006qxepn8tvumax","content":"<p>　　传统单人直播，形式上比较单调，以主播为主导，聊各种话题。观众与主播之间的沟通，基于即时通信（IM）技术以文字，表情，点赞等来与主播互动。这种互动是有延迟性的，单向的，一问一答的模式。为了增加观众与主播之间的强互动性，有必要引入实时通信（RTC）技术打造连麦互动直播。</p>\n<a id=\"more\"></a>\n<p>　　即时通信中 XMPP 协议是被广泛的协议之一，XMPP 是基于文本标记语言 XML 的协议。打造一套属于自己的即时通信系统可以基于 XMPP 协议从零开发，也可以利用开源方案去实现，比如 openfire。openfire 是基于 XMPP 协议，采用 Java 编程语言开发的实时协作服务器，想快速实现一套 IM 方案，可以在该开源工程上进行改造，节省开发时间和成本。</p>\n<p>　　音视频实时通信领域现广泛采用 Google 的开源方案 WebRTC。WebRTC  分为三部分：音频处理模块，视频处理模块，协议层模块。在使用 WebRTC 时，可以从中拆解出所需要的功能块去实现所需要的功能。</p>\n<p>　　现在 WebRTC 被广泛推广，移动直播也从传统的单人直播进入到了多人连麦互动直播的应用场景。RTC 互动直播必将是直播行业中下一场厮杀的战场。</p>\n<p>　　今天以讲师的角色在公司组织的直播技术培训课堂上讲了直播连麦涉及到的一些概念，方案设计。一节课讲授下来，我发现 RTC 可深挖，可改进的点还是比较多的。</p>\n<p><code>2016年10月14号 写于北京市太阳宫中路12号 亲笔</code></p>\n","site":{"data":{}},"excerpt":"<p>　　传统单人直播，形式上比较单调，以主播为主导，聊各种话题。观众与主播之间的沟通，基于即时通信（IM）技术以文字，表情，点赞等来与主播互动。这种互动是有延迟性的，单向的，一问一答的模式。为了增加观众与主播之间的强互动性，有必要引入实时通信（RTC）技术打造连麦互动直播。</p>","more":"<p>　　即时通信中 XMPP 协议是被广泛的协议之一，XMPP 是基于文本标记语言 XML 的协议。打造一套属于自己的即时通信系统可以基于 XMPP 协议从零开发，也可以利用开源方案去实现，比如 openfire。openfire 是基于 XMPP 协议，采用 Java 编程语言开发的实时协作服务器，想快速实现一套 IM 方案，可以在该开源工程上进行改造，节省开发时间和成本。</p>\n<p>　　音视频实时通信领域现广泛采用 Google 的开源方案 WebRTC。WebRTC  分为三部分：音频处理模块，视频处理模块，协议层模块。在使用 WebRTC 时，可以从中拆解出所需要的功能块去实现所需要的功能。</p>\n<p>　　现在 WebRTC 被广泛推广，移动直播也从传统的单人直播进入到了多人连麦互动直播的应用场景。RTC 互动直播必将是直播行业中下一场厮杀的战场。</p>\n<p>　　今天以讲师的角色在公司组织的直播技术培训课堂上讲了直播连麦涉及到的一些概念，方案设计。一节课讲授下来，我发现 RTC 可深挖，可改进的点还是比较多的。</p>\n<p><code>2016年10月14号 写于北京市太阳宫中路12号 亲笔</code></p>"},{"title":"在上海总部工作一周的感受","date":"2016-09-25T04:50:38.000Z","_content":"　　2016年9月19日～2016年9月24日，在上海总部工作了一周，收获颇多。对于我而言，很感谢团队和公司的付出。\n\n　　人到一定阶段，处在一个和谐进取的团队中，人的感官和认识不再是那种不入流的小民市井看法。\n\n　　以前，看到某些颁奖典礼上一些人说的大客套话，感谢公司，感谢团队，让人听起来真的好假。为什么觉得好假，在于没有经历过别人的处境。在上海的一周，我确实体会到了一个人在舞台的光鲜，其背后有很多默默付出和支持的小伙伴们，说一些感谢的话，看起来是大话，用心去体验，那是发自内心最真实的声音。现在的社会，是群体，单打独斗不是主流，合群求同化异是趋势。对于知识交流，人际交流，只有放开，才能拥抱更大更广的空间。保持谦逊，保持温和，保持敬畏，保持进取，视野就会大一点，进步就会快一点。\n\n<!-- more -->\n　　溪水会长流，溪水也会干涸，身处的世界有无所不在的变化。害怕变化，就是拒绝机会，结果就是细水断流。保持拥抱变化的接受态度，以变应变来维持细水长流。细水聚集，见泉眼。\n\n`2016年9月25日 北京 昌平区 住宅`\n\n\n\n\n","source":"_posts/a-week-in-Shanghai-City.md","raw":"---\ntitle: 在上海总部工作一周的感受\ndate: 2016-09-25 12:50:38\ntags:\n- 工作\n- 生活\n---\n　　2016年9月19日～2016年9月24日，在上海总部工作了一周，收获颇多。对于我而言，很感谢团队和公司的付出。\n\n　　人到一定阶段，处在一个和谐进取的团队中，人的感官和认识不再是那种不入流的小民市井看法。\n\n　　以前，看到某些颁奖典礼上一些人说的大客套话，感谢公司，感谢团队，让人听起来真的好假。为什么觉得好假，在于没有经历过别人的处境。在上海的一周，我确实体会到了一个人在舞台的光鲜，其背后有很多默默付出和支持的小伙伴们，说一些感谢的话，看起来是大话，用心去体验，那是发自内心最真实的声音。现在的社会，是群体，单打独斗不是主流，合群求同化异是趋势。对于知识交流，人际交流，只有放开，才能拥抱更大更广的空间。保持谦逊，保持温和，保持敬畏，保持进取，视野就会大一点，进步就会快一点。\n\n<!-- more -->\n　　溪水会长流，溪水也会干涸，身处的世界有无所不在的变化。害怕变化，就是拒绝机会，结果就是细水断流。保持拥抱变化的接受态度，以变应变来维持细水长流。细水聚集，见泉眼。\n\n`2016年9月25日 北京 昌平区 住宅`\n\n\n\n\n","slug":"a-week-in-Shanghai-City","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzqy0007qxep18v01bhc","content":"<p>　　2016年9月19日～2016年9月24日，在上海总部工作了一周，收获颇多。对于我而言，很感谢团队和公司的付出。</p>\n<p>　　人到一定阶段，处在一个和谐进取的团队中，人的感官和认识不再是那种不入流的小民市井看法。</p>\n<p>　　以前，看到某些颁奖典礼上一些人说的大客套话，感谢公司，感谢团队，让人听起来真的好假。为什么觉得好假，在于没有经历过别人的处境。在上海的一周，我确实体会到了一个人在舞台的光鲜，其背后有很多默默付出和支持的小伙伴们，说一些感谢的话，看起来是大话，用心去体验，那是发自内心最真实的声音。现在的社会，是群体，单打独斗不是主流，合群求同化异是趋势。对于知识交流，人际交流，只有放开，才能拥抱更大更广的空间。保持谦逊，保持温和，保持敬畏，保持进取，视野就会大一点，进步就会快一点。</p>\n<a id=\"more\"></a>\n<p>　　溪水会长流，溪水也会干涸，身处的世界有无所不在的变化。害怕变化，就是拒绝机会，结果就是细水断流。保持拥抱变化的接受态度，以变应变来维持细水长流。细水聚集，见泉眼。</p>\n<p><code>2016年9月25日 北京 昌平区 住宅</code></p>\n","site":{"data":{}},"excerpt":"<p>　　2016年9月19日～2016年9月24日，在上海总部工作了一周，收获颇多。对于我而言，很感谢团队和公司的付出。</p>\n<p>　　人到一定阶段，处在一个和谐进取的团队中，人的感官和认识不再是那种不入流的小民市井看法。</p>\n<p>　　以前，看到某些颁奖典礼上一些人说的大客套话，感谢公司，感谢团队，让人听起来真的好假。为什么觉得好假，在于没有经历过别人的处境。在上海的一周，我确实体会到了一个人在舞台的光鲜，其背后有很多默默付出和支持的小伙伴们，说一些感谢的话，看起来是大话，用心去体验，那是发自内心最真实的声音。现在的社会，是群体，单打独斗不是主流，合群求同化异是趋势。对于知识交流，人际交流，只有放开，才能拥抱更大更广的空间。保持谦逊，保持温和，保持敬畏，保持进取，视野就会大一点，进步就会快一点。</p>","more":"<p>　　溪水会长流，溪水也会干涸，身处的世界有无所不在的变化。害怕变化，就是拒绝机会，结果就是细水断流。保持拥抱变化的接受态度，以变应变来维持细水长流。细水聚集，见泉眼。</p>\n<p><code>2016年9月25日 北京 昌平区 住宅</code></p>"},{"title":"音视频传输解决方案","date":"2015-07-02T01:43:51.000Z","_content":"\n## 协议\n流媒体协议：RTSP（Real Time Streaming Protocol），RTMP（Real Time Messaging Protocol），HLS(http live streaming)\n\n会话描述协议：SDP（Session Description Protocol）\n\n实时传输控制协议：RTCP（Real-time Transport Control Protocol或RTP Control Protocol）\n\n实时传输协议：RTP（Real-time Transport Protocol）\n\n## 流的类型\n流的类型：TS流，RTP流\n\n<!-- more -->\n\n## 容器类型\n* ##### .mp4\n\n## 音频编解码格式\n\n## 视频编解码格式\n\n## BSD socket\n* ##### [Introduction to BSD Sockets](http://wiki.treck.com/Introduction_to_BSD_Sockets)\n\n## 知识点的维基百科解释\n维基百科：rtsp－[实时流协议](https://en.wikipedia.org/wiki/Real_Time_Streaming_Protocol)\n\n维基百科：rtmp－[实时消息传递协议](https://en.wikipedia.org/wiki/Real_Time_Messaging_Protocol)\n\n维基百科：HLS－[HTTP实时流](https://en.wikipedia.org/wiki/HTTP_Live_Streaming)\n\n维基百科：SDP－[会话描述协议](https://en.wikipedia.org/wiki/Session_Description_Protocol)\n\n维基百科：RTCP－[实时传输控制协议](https://zh.wikipedia.org/wiki/%E5%AE%9E%E6%97%B6%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE)\n\n维基百科：RTP－[实时传输协议](https://zh.wikipedia.org/wiki/%E5%AE%9E%E6%97%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE)\n\n维基百科：[BSD socket](https://zh.wikipedia.org/wiki/Berkeley%E5%A5%97%E6%8E%A5%E5%AD%97)\n\n","source":"_posts/audio-video-transmission-plan.md","raw":"title: 音视频传输解决方案\ndate: 2015-07-02 09:43:51\ntags:  \n- 音视频处理\n---\n\n## 协议\n流媒体协议：RTSP（Real Time Streaming Protocol），RTMP（Real Time Messaging Protocol），HLS(http live streaming)\n\n会话描述协议：SDP（Session Description Protocol）\n\n实时传输控制协议：RTCP（Real-time Transport Control Protocol或RTP Control Protocol）\n\n实时传输协议：RTP（Real-time Transport Protocol）\n\n## 流的类型\n流的类型：TS流，RTP流\n\n<!-- more -->\n\n## 容器类型\n* ##### .mp4\n\n## 音频编解码格式\n\n## 视频编解码格式\n\n## BSD socket\n* ##### [Introduction to BSD Sockets](http://wiki.treck.com/Introduction_to_BSD_Sockets)\n\n## 知识点的维基百科解释\n维基百科：rtsp－[实时流协议](https://en.wikipedia.org/wiki/Real_Time_Streaming_Protocol)\n\n维基百科：rtmp－[实时消息传递协议](https://en.wikipedia.org/wiki/Real_Time_Messaging_Protocol)\n\n维基百科：HLS－[HTTP实时流](https://en.wikipedia.org/wiki/HTTP_Live_Streaming)\n\n维基百科：SDP－[会话描述协议](https://en.wikipedia.org/wiki/Session_Description_Protocol)\n\n维基百科：RTCP－[实时传输控制协议](https://zh.wikipedia.org/wiki/%E5%AE%9E%E6%97%B6%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE)\n\n维基百科：RTP－[实时传输协议](https://zh.wikipedia.org/wiki/%E5%AE%9E%E6%97%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE)\n\n维基百科：[BSD socket](https://zh.wikipedia.org/wiki/Berkeley%E5%A5%97%E6%8E%A5%E5%AD%97)\n\n","slug":"audio-video-transmission-plan","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzr6000aqxep4kfgvpb8","content":"<h2 id=\"协议\"><a href=\"#协议\" class=\"headerlink\" title=\"协议\"></a>协议</h2><p>流媒体协议：RTSP（Real Time Streaming Protocol），RTMP（Real Time Messaging Protocol），HLS(http live streaming)</p>\n<p>会话描述协议：SDP（Session Description Protocol）</p>\n<p>实时传输控制协议：RTCP（Real-time Transport Control Protocol或RTP Control Protocol）</p>\n<p>实时传输协议：RTP（Real-time Transport Protocol）</p>\n<h2 id=\"流的类型\"><a href=\"#流的类型\" class=\"headerlink\" title=\"流的类型\"></a>流的类型</h2><p>流的类型：TS流，RTP流</p>\n<a id=\"more\"></a>\n<h2 id=\"容器类型\"><a href=\"#容器类型\" class=\"headerlink\" title=\"容器类型\"></a>容器类型</h2><ul>\n<li><h5 id=\"mp4\"><a href=\"#mp4\" class=\"headerlink\" title=\".mp4\"></a>.mp4</h5></li>\n</ul>\n<h2 id=\"音频编解码格式\"><a href=\"#音频编解码格式\" class=\"headerlink\" title=\"音频编解码格式\"></a>音频编解码格式</h2><h2 id=\"视频编解码格式\"><a href=\"#视频编解码格式\" class=\"headerlink\" title=\"视频编解码格式\"></a>视频编解码格式</h2><h2 id=\"BSD-socket\"><a href=\"#BSD-socket\" class=\"headerlink\" title=\"BSD socket\"></a>BSD socket</h2><ul>\n<li><h5 id=\"Introduction-to-BSD-Sockets\"><a href=\"#Introduction-to-BSD-Sockets\" class=\"headerlink\" title=\"Introduction to BSD Sockets\"></a><a href=\"http://wiki.treck.com/Introduction_to_BSD_Sockets\" target=\"_blank\" rel=\"external\">Introduction to BSD Sockets</a></h5></li>\n</ul>\n<h2 id=\"知识点的维基百科解释\"><a href=\"#知识点的维基百科解释\" class=\"headerlink\" title=\"知识点的维基百科解释\"></a>知识点的维基百科解释</h2><p>维基百科：rtsp－<a href=\"https://en.wikipedia.org/wiki/Real_Time_Streaming_Protocol\" target=\"_blank\" rel=\"external\">实时流协议</a></p>\n<p>维基百科：rtmp－<a href=\"https://en.wikipedia.org/wiki/Real_Time_Messaging_Protocol\" target=\"_blank\" rel=\"external\">实时消息传递协议</a></p>\n<p>维基百科：HLS－<a href=\"https://en.wikipedia.org/wiki/HTTP_Live_Streaming\" target=\"_blank\" rel=\"external\">HTTP实时流</a></p>\n<p>维基百科：SDP－<a href=\"https://en.wikipedia.org/wiki/Session_Description_Protocol\" target=\"_blank\" rel=\"external\">会话描述协议</a></p>\n<p>维基百科：RTCP－<a href=\"https://zh.wikipedia.org/wiki/%E5%AE%9E%E6%97%B6%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"external\">实时传输控制协议</a></p>\n<p>维基百科：RTP－<a href=\"https://zh.wikipedia.org/wiki/%E5%AE%9E%E6%97%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"external\">实时传输协议</a></p>\n<p>维基百科：<a href=\"https://zh.wikipedia.org/wiki/Berkeley%E5%A5%97%E6%8E%A5%E5%AD%97\" target=\"_blank\" rel=\"external\">BSD socket</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"协议\"><a href=\"#协议\" class=\"headerlink\" title=\"协议\"></a>协议</h2><p>流媒体协议：RTSP（Real Time Streaming Protocol），RTMP（Real Time Messaging Protocol），HLS(http live streaming)</p>\n<p>会话描述协议：SDP（Session Description Protocol）</p>\n<p>实时传输控制协议：RTCP（Real-time Transport Control Protocol或RTP Control Protocol）</p>\n<p>实时传输协议：RTP（Real-time Transport Protocol）</p>\n<h2 id=\"流的类型\"><a href=\"#流的类型\" class=\"headerlink\" title=\"流的类型\"></a>流的类型</h2><p>流的类型：TS流，RTP流</p>","more":"<h2 id=\"容器类型\"><a href=\"#容器类型\" class=\"headerlink\" title=\"容器类型\"></a>容器类型</h2><ul>\n<li><h5 id=\"mp4\"><a href=\"#mp4\" class=\"headerlink\" title=\".mp4\"></a>.mp4</h5></li>\n</ul>\n<h2 id=\"音频编解码格式\"><a href=\"#音频编解码格式\" class=\"headerlink\" title=\"音频编解码格式\"></a>音频编解码格式</h2><h2 id=\"视频编解码格式\"><a href=\"#视频编解码格式\" class=\"headerlink\" title=\"视频编解码格式\"></a>视频编解码格式</h2><h2 id=\"BSD-socket\"><a href=\"#BSD-socket\" class=\"headerlink\" title=\"BSD socket\"></a>BSD socket</h2><ul>\n<li><h5 id=\"Introduction-to-BSD-Sockets\"><a href=\"#Introduction-to-BSD-Sockets\" class=\"headerlink\" title=\"Introduction to BSD Sockets\"></a><a href=\"http://wiki.treck.com/Introduction_to_BSD_Sockets\" target=\"_blank\" rel=\"external\">Introduction to BSD Sockets</a></h5></li>\n</ul>\n<h2 id=\"知识点的维基百科解释\"><a href=\"#知识点的维基百科解释\" class=\"headerlink\" title=\"知识点的维基百科解释\"></a>知识点的维基百科解释</h2><p>维基百科：rtsp－<a href=\"https://en.wikipedia.org/wiki/Real_Time_Streaming_Protocol\" target=\"_blank\" rel=\"external\">实时流协议</a></p>\n<p>维基百科：rtmp－<a href=\"https://en.wikipedia.org/wiki/Real_Time_Messaging_Protocol\" target=\"_blank\" rel=\"external\">实时消息传递协议</a></p>\n<p>维基百科：HLS－<a href=\"https://en.wikipedia.org/wiki/HTTP_Live_Streaming\" target=\"_blank\" rel=\"external\">HTTP实时流</a></p>\n<p>维基百科：SDP－<a href=\"https://en.wikipedia.org/wiki/Session_Description_Protocol\" target=\"_blank\" rel=\"external\">会话描述协议</a></p>\n<p>维基百科：RTCP－<a href=\"https://zh.wikipedia.org/wiki/%E5%AE%9E%E6%97%B6%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"external\">实时传输控制协议</a></p>\n<p>维基百科：RTP－<a href=\"https://zh.wikipedia.org/wiki/%E5%AE%9E%E6%97%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"external\">实时传输协议</a></p>\n<p>维基百科：<a href=\"https://zh.wikipedia.org/wiki/Berkeley%E5%A5%97%E6%8E%A5%E5%AD%97\" target=\"_blank\" rel=\"external\">BSD socket</a></p>"},{"title":"编译iOS平台上使用的X264库","date":"2015-09-16T07:56:46.000Z","_content":"　　x264是一种免费的、具有更优秀算法的符合H.264/MPEG-4 AVC视频压缩编码标准格式的编码库。它同xvid一样都是开源项目，但x264是采用H.264标准的，而xvid是采用MPEG-4早期标准的。由于H.264是2003年正式发布的最新的视频编码标准，因此，在通常情况下，x264压缩出的视频文件在相同质量下要比xvid压缩出的文件要小，或者也可以说，在相同体积下比xvid压缩出的文件质量要好。它符合GPL许可证。\n\n　　从iOS8开始，苹果开放了硬解码和硬编码API，框架为 **VideoToolbox.framework**， 此框架需要在iOS8及以上的系统上才能使用。\n　　此框架中的硬解码API是几个纯C函数，在任何OC或者 C++代码里都可以使用。使用的时候，首先，要把 VideoToolbox.framework 添加到工程里，并且在要使用该API的文件中包含头文件 **#include &lt;VideoToolbox/VideoToolbox.h&gt;**，然后，就可以畅快的高效的对视频流进行硬编码了。\n\n<!-- more -->\n\n　　其实至少从iPhone4开始，苹果就是支持硬件解码了，但是硬解码API框架**VideoToolBox**一直是私有API，如果调用这个私有库，那么app在必须在越狱的设备上运行，正常的App如果想提交到AppStore是不允许使用私有API的。\n\n　　此处，不讨论iOS硬编解码框架**VideoToolbox.framework**的使用。现在，使用较多的h264编码工具还是X264开源库。要想在iOS平台上使用X264编码视频流，首先要知道如何编译运行在iOS上的X264静态库。\n  \n　　编译X264的一个靠谱的脚本为[https://github.com/kewlbear/x264-ios](https://github.com/kewlbear/x264-ios)，但是，使用该脚本有个不方便的，就是要先下载X264并解压好，同时要下载[https://github.com/libav/gas-preprocessor](https://github.com/libav/gas-preprocessor)并将gas-preprocessor.pl拷贝到/usr/local/bin/下，并且赋予管理员权限，才能启动脚本进行编译。\n  \n　　为了使用脚本一步到位得到X264静态库，我在该脚本的基础上做了一些修改。\n\n##### 第一处修改：\n\n\t# sunminmin blog: http://depthlove.github.io/\n\t# modified by sunminmin, 2015/09/07\n\t#ARCHS=\"arm64 armv7s x86_64 i386 armv7\"\n\tARCHS=\"arm64 x86_64 i386 armv7\"\n\t\n##### 第二处修改：\n\n\t# begin: added by sunminmin, 2015/09/07\n    if [ ! -r $GAS_PREPROCESSOR ]\n    then\n    echo 'gas-preprocessor.pl not found. Trying to install...'\n    (curl -L https://github.com/libav/gas-preprocessor/blob/master/gas-preprocessor.pl \\\n    -o /usr/local/bin/gas-preprocessor.pl \\\n    && chmod +x /usr/local/bin/gas-preprocessor.pl) \\\n    || exit 1\n    fi\n\n\n    if [ ! -r $SOURCE ]\n    then\n    echo 'x264 source not found. Trying to download...'\n    curl https://download.videolan.org/pub/x264/snapshots/x264-snapshot-20140930-2245.tar.bz2 | tar xj && ln -s x264-snapshot-20140930-2245 x264 || exit 1\n    fi\n\t# end: added by sunminmin, 2015/09/07\n\t\n##### 第三处修改：\n\n\t# begin: added by sunminmin, 2015/09/07\n\techo \"copy config.h to ...\"\n\tfor ARCH in $ARCHS\n\tdo\n\tcd $CWD\n\techo \"copy $SCRATCH/$ARCH/config.h to $THIN/$ARCH/$include\"\n\tcp -rf $SCRATCH/$ARCH/config.h $THIN/$ARCH/$include || exit 1\n\tdone\n\n\techo \"building success!\"\n\t# end: added by sunminmin, 2015/09/07\n\n  \n　　**修改后的脚本下载地址：[https://github.com/depthlove/x264-iOS-build-script](https://github.com/depthlove/x264-iOS-build-script)**\n  \n　　**原始脚本下载地址：[https://github.com/kewlbear/x264-ios](https://github.com/kewlbear/x264-ios)**\n  \n　　后续文章后写如何使用x264库对iOS设备摄像头实时视频流进行h264软编码。\n  ","source":"_posts/build-X264-library-for-iOS-platform.md","raw":"title: 编译iOS平台上使用的X264库\ndate: 2015-09-16 15:56:46\ntags: \n- 音视频处理\n---\n　　x264是一种免费的、具有更优秀算法的符合H.264/MPEG-4 AVC视频压缩编码标准格式的编码库。它同xvid一样都是开源项目，但x264是采用H.264标准的，而xvid是采用MPEG-4早期标准的。由于H.264是2003年正式发布的最新的视频编码标准，因此，在通常情况下，x264压缩出的视频文件在相同质量下要比xvid压缩出的文件要小，或者也可以说，在相同体积下比xvid压缩出的文件质量要好。它符合GPL许可证。\n\n　　从iOS8开始，苹果开放了硬解码和硬编码API，框架为 **VideoToolbox.framework**， 此框架需要在iOS8及以上的系统上才能使用。\n　　此框架中的硬解码API是几个纯C函数，在任何OC或者 C++代码里都可以使用。使用的时候，首先，要把 VideoToolbox.framework 添加到工程里，并且在要使用该API的文件中包含头文件 **#include &lt;VideoToolbox/VideoToolbox.h&gt;**，然后，就可以畅快的高效的对视频流进行硬编码了。\n\n<!-- more -->\n\n　　其实至少从iPhone4开始，苹果就是支持硬件解码了，但是硬解码API框架**VideoToolBox**一直是私有API，如果调用这个私有库，那么app在必须在越狱的设备上运行，正常的App如果想提交到AppStore是不允许使用私有API的。\n\n　　此处，不讨论iOS硬编解码框架**VideoToolbox.framework**的使用。现在，使用较多的h264编码工具还是X264开源库。要想在iOS平台上使用X264编码视频流，首先要知道如何编译运行在iOS上的X264静态库。\n  \n　　编译X264的一个靠谱的脚本为[https://github.com/kewlbear/x264-ios](https://github.com/kewlbear/x264-ios)，但是，使用该脚本有个不方便的，就是要先下载X264并解压好，同时要下载[https://github.com/libav/gas-preprocessor](https://github.com/libav/gas-preprocessor)并将gas-preprocessor.pl拷贝到/usr/local/bin/下，并且赋予管理员权限，才能启动脚本进行编译。\n  \n　　为了使用脚本一步到位得到X264静态库，我在该脚本的基础上做了一些修改。\n\n##### 第一处修改：\n\n\t# sunminmin blog: http://depthlove.github.io/\n\t# modified by sunminmin, 2015/09/07\n\t#ARCHS=\"arm64 armv7s x86_64 i386 armv7\"\n\tARCHS=\"arm64 x86_64 i386 armv7\"\n\t\n##### 第二处修改：\n\n\t# begin: added by sunminmin, 2015/09/07\n    if [ ! -r $GAS_PREPROCESSOR ]\n    then\n    echo 'gas-preprocessor.pl not found. Trying to install...'\n    (curl -L https://github.com/libav/gas-preprocessor/blob/master/gas-preprocessor.pl \\\n    -o /usr/local/bin/gas-preprocessor.pl \\\n    && chmod +x /usr/local/bin/gas-preprocessor.pl) \\\n    || exit 1\n    fi\n\n\n    if [ ! -r $SOURCE ]\n    then\n    echo 'x264 source not found. Trying to download...'\n    curl https://download.videolan.org/pub/x264/snapshots/x264-snapshot-20140930-2245.tar.bz2 | tar xj && ln -s x264-snapshot-20140930-2245 x264 || exit 1\n    fi\n\t# end: added by sunminmin, 2015/09/07\n\t\n##### 第三处修改：\n\n\t# begin: added by sunminmin, 2015/09/07\n\techo \"copy config.h to ...\"\n\tfor ARCH in $ARCHS\n\tdo\n\tcd $CWD\n\techo \"copy $SCRATCH/$ARCH/config.h to $THIN/$ARCH/$include\"\n\tcp -rf $SCRATCH/$ARCH/config.h $THIN/$ARCH/$include || exit 1\n\tdone\n\n\techo \"building success!\"\n\t# end: added by sunminmin, 2015/09/07\n\n  \n　　**修改后的脚本下载地址：[https://github.com/depthlove/x264-iOS-build-script](https://github.com/depthlove/x264-iOS-build-script)**\n  \n　　**原始脚本下载地址：[https://github.com/kewlbear/x264-ios](https://github.com/kewlbear/x264-ios)**\n  \n　　后续文章后写如何使用x264库对iOS设备摄像头实时视频流进行h264软编码。\n  ","slug":"build-X264-library-for-iOS-platform","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzr7000bqxepyudv9ey1","content":"<p>　　x264是一种免费的、具有更优秀算法的符合H.264/MPEG-4 AVC视频压缩编码标准格式的编码库。它同xvid一样都是开源项目，但x264是采用H.264标准的，而xvid是采用MPEG-4早期标准的。由于H.264是2003年正式发布的最新的视频编码标准，因此，在通常情况下，x264压缩出的视频文件在相同质量下要比xvid压缩出的文件要小，或者也可以说，在相同体积下比xvid压缩出的文件质量要好。它符合GPL许可证。</p>\n<p>　　从iOS8开始，苹果开放了硬解码和硬编码API，框架为 <strong>VideoToolbox.framework</strong>， 此框架需要在iOS8及以上的系统上才能使用。<br>　　此框架中的硬解码API是几个纯C函数，在任何OC或者 C++代码里都可以使用。使用的时候，首先，要把 VideoToolbox.framework 添加到工程里，并且在要使用该API的文件中包含头文件 <strong>#include &lt;VideoToolbox/VideoToolbox.h&gt;</strong>，然后，就可以畅快的高效的对视频流进行硬编码了。</p>\n<a id=\"more\"></a>\n<p>　　其实至少从iPhone4开始，苹果就是支持硬件解码了，但是硬解码API框架<strong>VideoToolBox</strong>一直是私有API，如果调用这个私有库，那么app在必须在越狱的设备上运行，正常的App如果想提交到AppStore是不允许使用私有API的。</p>\n<p>　　此处，不讨论iOS硬编解码框架<strong>VideoToolbox.framework</strong>的使用。现在，使用较多的h264编码工具还是X264开源库。要想在iOS平台上使用X264编码视频流，首先要知道如何编译运行在iOS上的X264静态库。</p>\n<p>　　编译X264的一个靠谱的脚本为<a href=\"https://github.com/kewlbear/x264-ios\" target=\"_blank\" rel=\"external\">https://github.com/kewlbear/x264-ios</a>，但是，使用该脚本有个不方便的，就是要先下载X264并解压好，同时要下载<a href=\"https://github.com/libav/gas-preprocessor\" target=\"_blank\" rel=\"external\">https://github.com/libav/gas-preprocessor</a>并将gas-preprocessor.pl拷贝到/usr/local/bin/下，并且赋予管理员权限，才能启动脚本进行编译。</p>\n<p>　　为了使用脚本一步到位得到X264静态库，我在该脚本的基础上做了一些修改。</p>\n<h5 id=\"第一处修改：\"><a href=\"#第一处修改：\" class=\"headerlink\" title=\"第一处修改：\"></a>第一处修改：</h5><pre><code># sunminmin blog: http://depthlove.github.io/\n# modified by sunminmin, 2015/09/07\n#ARCHS=&quot;arm64 armv7s x86_64 i386 armv7&quot;\nARCHS=&quot;arm64 x86_64 i386 armv7&quot;\n</code></pre><h5 id=\"第二处修改：\"><a href=\"#第二处修改：\" class=\"headerlink\" title=\"第二处修改：\"></a>第二处修改：</h5><pre><code># begin: added by sunminmin, 2015/09/07\nif [ ! -r $GAS_PREPROCESSOR ]\nthen\necho &apos;gas-preprocessor.pl not found. Trying to install...&apos;\n(curl -L https://github.com/libav/gas-preprocessor/blob/master/gas-preprocessor.pl \\\n-o /usr/local/bin/gas-preprocessor.pl \\\n&amp;&amp; chmod +x /usr/local/bin/gas-preprocessor.pl) \\\n|| exit 1\nfi\n\n\nif [ ! -r $SOURCE ]\nthen\necho &apos;x264 source not found. Trying to download...&apos;\ncurl https://download.videolan.org/pub/x264/snapshots/x264-snapshot-20140930-2245.tar.bz2 | tar xj &amp;&amp; ln -s x264-snapshot-20140930-2245 x264 || exit 1\nfi\n# end: added by sunminmin, 2015/09/07\n</code></pre><h5 id=\"第三处修改：\"><a href=\"#第三处修改：\" class=\"headerlink\" title=\"第三处修改：\"></a>第三处修改：</h5><pre><code># begin: added by sunminmin, 2015/09/07\necho &quot;copy config.h to ...&quot;\nfor ARCH in $ARCHS\ndo\ncd $CWD\necho &quot;copy $SCRATCH/$ARCH/config.h to $THIN/$ARCH/$include&quot;\ncp -rf $SCRATCH/$ARCH/config.h $THIN/$ARCH/$include || exit 1\ndone\n\necho &quot;building success!&quot;\n# end: added by sunminmin, 2015/09/07\n</code></pre><p>　　<strong>修改后的脚本下载地址：<a href=\"https://github.com/depthlove/x264-iOS-build-script\" target=\"_blank\" rel=\"external\">https://github.com/depthlove/x264-iOS-build-script</a></strong></p>\n<p>　　<strong>原始脚本下载地址：<a href=\"https://github.com/kewlbear/x264-ios\" target=\"_blank\" rel=\"external\">https://github.com/kewlbear/x264-ios</a></strong></p>\n<p>　　后续文章后写如何使用x264库对iOS设备摄像头实时视频流进行h264软编码。</p>\n","site":{"data":{}},"excerpt":"<p>　　x264是一种免费的、具有更优秀算法的符合H.264/MPEG-4 AVC视频压缩编码标准格式的编码库。它同xvid一样都是开源项目，但x264是采用H.264标准的，而xvid是采用MPEG-4早期标准的。由于H.264是2003年正式发布的最新的视频编码标准，因此，在通常情况下，x264压缩出的视频文件在相同质量下要比xvid压缩出的文件要小，或者也可以说，在相同体积下比xvid压缩出的文件质量要好。它符合GPL许可证。</p>\n<p>　　从iOS8开始，苹果开放了硬解码和硬编码API，框架为 <strong>VideoToolbox.framework</strong>， 此框架需要在iOS8及以上的系统上才能使用。<br>　　此框架中的硬解码API是几个纯C函数，在任何OC或者 C++代码里都可以使用。使用的时候，首先，要把 VideoToolbox.framework 添加到工程里，并且在要使用该API的文件中包含头文件 <strong>#include &lt;VideoToolbox/VideoToolbox.h&gt;</strong>，然后，就可以畅快的高效的对视频流进行硬编码了。</p>","more":"<p>　　其实至少从iPhone4开始，苹果就是支持硬件解码了，但是硬解码API框架<strong>VideoToolBox</strong>一直是私有API，如果调用这个私有库，那么app在必须在越狱的设备上运行，正常的App如果想提交到AppStore是不允许使用私有API的。</p>\n<p>　　此处，不讨论iOS硬编解码框架<strong>VideoToolbox.framework</strong>的使用。现在，使用较多的h264编码工具还是X264开源库。要想在iOS平台上使用X264编码视频流，首先要知道如何编译运行在iOS上的X264静态库。</p>\n<p>　　编译X264的一个靠谱的脚本为<a href=\"https://github.com/kewlbear/x264-ios\" target=\"_blank\" rel=\"external\">https://github.com/kewlbear/x264-ios</a>，但是，使用该脚本有个不方便的，就是要先下载X264并解压好，同时要下载<a href=\"https://github.com/libav/gas-preprocessor\" target=\"_blank\" rel=\"external\">https://github.com/libav/gas-preprocessor</a>并将gas-preprocessor.pl拷贝到/usr/local/bin/下，并且赋予管理员权限，才能启动脚本进行编译。</p>\n<p>　　为了使用脚本一步到位得到X264静态库，我在该脚本的基础上做了一些修改。</p>\n<h5 id=\"第一处修改：\"><a href=\"#第一处修改：\" class=\"headerlink\" title=\"第一处修改：\"></a>第一处修改：</h5><pre><code># sunminmin blog: http://depthlove.github.io/\n# modified by sunminmin, 2015/09/07\n#ARCHS=&quot;arm64 armv7s x86_64 i386 armv7&quot;\nARCHS=&quot;arm64 x86_64 i386 armv7&quot;\n</code></pre><h5 id=\"第二处修改：\"><a href=\"#第二处修改：\" class=\"headerlink\" title=\"第二处修改：\"></a>第二处修改：</h5><pre><code># begin: added by sunminmin, 2015/09/07\nif [ ! -r $GAS_PREPROCESSOR ]\nthen\necho &apos;gas-preprocessor.pl not found. Trying to install...&apos;\n(curl -L https://github.com/libav/gas-preprocessor/blob/master/gas-preprocessor.pl \\\n-o /usr/local/bin/gas-preprocessor.pl \\\n&amp;&amp; chmod +x /usr/local/bin/gas-preprocessor.pl) \\\n|| exit 1\nfi\n\n\nif [ ! -r $SOURCE ]\nthen\necho &apos;x264 source not found. Trying to download...&apos;\ncurl https://download.videolan.org/pub/x264/snapshots/x264-snapshot-20140930-2245.tar.bz2 | tar xj &amp;&amp; ln -s x264-snapshot-20140930-2245 x264 || exit 1\nfi\n# end: added by sunminmin, 2015/09/07\n</code></pre><h5 id=\"第三处修改：\"><a href=\"#第三处修改：\" class=\"headerlink\" title=\"第三处修改：\"></a>第三处修改：</h5><pre><code># begin: added by sunminmin, 2015/09/07\necho &quot;copy config.h to ...&quot;\nfor ARCH in $ARCHS\ndo\ncd $CWD\necho &quot;copy $SCRATCH/$ARCH/config.h to $THIN/$ARCH/$include&quot;\ncp -rf $SCRATCH/$ARCH/config.h $THIN/$ARCH/$include || exit 1\ndone\n\necho &quot;building success!&quot;\n# end: added by sunminmin, 2015/09/07\n</code></pre><p>　　<strong>修改后的脚本下载地址：<a href=\"https://github.com/depthlove/x264-iOS-build-script\" target=\"_blank\" rel=\"external\">https://github.com/depthlove/x264-iOS-build-script</a></strong></p>\n<p>　　<strong>原始脚本下载地址：<a href=\"https://github.com/kewlbear/x264-ios\" target=\"_blank\" rel=\"external\">https://github.com/kewlbear/x264-ios</a></strong></p>\n<p>　　后续文章后写如何使用x264库对iOS设备摄像头实时视频流进行h264软编码。</p>"},{"title":"2016年3月买房纪实","date":"2016-03-10T02:17:30.000Z","_content":"　　去年11月就计划着今年要买房，根据市场行情，我看涨房价走势。但是没有快速入手，原因有很多。主要原因有考虑将来自己要待在哪里生活和发展。今年春节后，一线城市，强二线城市的房价蹭蹭蹭往上窜，此时不入手，更待何时。中国的房地产行情是独具中国特色的，按照市场经济规律来评判在中国行不通，身在中国看懂国家大政策就足够用来分析行情，市场经济规律与我等百姓干系不大。这也是中国房地产的奇特之处。很多经济学者和评论员看衰中国房地产，不如任志强的一句“有钱就买”来的深刻、清晰、明了。任志强，咱们的任大炮同志开炮中国房地产、政府，政府封了他的新浪微博，并发文批判他丧失党性人性，政治上的事千丝万缕，咱百姓插不上嘴，但是房地产这码事，明眼人都能看出点道道。这里不讨论任大炮同志，也不想讨论大部分网民。网民怎么怎么样，大炮同志所作所说怎样怎样，互联网这个大平台充当了事件辐射的工具，跟政府作对能有好果子吃么，跟大部分网民对着干实属浪费精力。事实上，2016年春节到现在，房地产市场普涨，这里不考虑三四线城市的行情，除非实在活不下去了，才有人回三四线城市的。\n\n<!-- more -->\n\n　　2月25号下定决心入手，马上开始搜集楼盘信息，3月4号下午，3月5号上午家里人看了一些楼盘后，经过与我商量，在3月5号中午交了定金，9号我与开发商签了商品房购买合同，就这样把房买了。3月1号国家发布降准的信息后，楼市一片涨涨涨，对于刚需者来说是利好。对于是否充当了开发商的接盘侠，我觉得有刚需、楼市利好、能拿出钱付首付、能承受每月还贷，那就买。中国文化中，家这个概念在每个人心中都占很大的分量。\n\n　　计划买第二套房，但是考虑到还有一些重要的事情上花钱的地方很多，这个想法只能搁浅了。4月份开始，一线城市，二线城市的房价肯定是唰唰唰的往上涨，涨的会更猛。想买房，就不要指望房价跌，至于什么时候是拐点，刚需者有时间等吗？我觉得一等，就更没机会买房了。\n","source":"_posts/buy-house-in-2016-03.md","raw":"title: 2016年3月买房纪实\ndate: 2016-03-10 10:17:30\ntags: 生活\n---\n　　去年11月就计划着今年要买房，根据市场行情，我看涨房价走势。但是没有快速入手，原因有很多。主要原因有考虑将来自己要待在哪里生活和发展。今年春节后，一线城市，强二线城市的房价蹭蹭蹭往上窜，此时不入手，更待何时。中国的房地产行情是独具中国特色的，按照市场经济规律来评判在中国行不通，身在中国看懂国家大政策就足够用来分析行情，市场经济规律与我等百姓干系不大。这也是中国房地产的奇特之处。很多经济学者和评论员看衰中国房地产，不如任志强的一句“有钱就买”来的深刻、清晰、明了。任志强，咱们的任大炮同志开炮中国房地产、政府，政府封了他的新浪微博，并发文批判他丧失党性人性，政治上的事千丝万缕，咱百姓插不上嘴，但是房地产这码事，明眼人都能看出点道道。这里不讨论任大炮同志，也不想讨论大部分网民。网民怎么怎么样，大炮同志所作所说怎样怎样，互联网这个大平台充当了事件辐射的工具，跟政府作对能有好果子吃么，跟大部分网民对着干实属浪费精力。事实上，2016年春节到现在，房地产市场普涨，这里不考虑三四线城市的行情，除非实在活不下去了，才有人回三四线城市的。\n\n<!-- more -->\n\n　　2月25号下定决心入手，马上开始搜集楼盘信息，3月4号下午，3月5号上午家里人看了一些楼盘后，经过与我商量，在3月5号中午交了定金，9号我与开发商签了商品房购买合同，就这样把房买了。3月1号国家发布降准的信息后，楼市一片涨涨涨，对于刚需者来说是利好。对于是否充当了开发商的接盘侠，我觉得有刚需、楼市利好、能拿出钱付首付、能承受每月还贷，那就买。中国文化中，家这个概念在每个人心中都占很大的分量。\n\n　　计划买第二套房，但是考虑到还有一些重要的事情上花钱的地方很多，这个想法只能搁浅了。4月份开始，一线城市，二线城市的房价肯定是唰唰唰的往上涨，涨的会更猛。想买房，就不要指望房价跌，至于什么时候是拐点，刚需者有时间等吗？我觉得一等，就更没机会买房了。\n","slug":"buy-house-in-2016-03","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzrc000dqxeppr9zjtyx","content":"<p>　　去年11月就计划着今年要买房，根据市场行情，我看涨房价走势。但是没有快速入手，原因有很多。主要原因有考虑将来自己要待在哪里生活和发展。今年春节后，一线城市，强二线城市的房价蹭蹭蹭往上窜，此时不入手，更待何时。中国的房地产行情是独具中国特色的，按照市场经济规律来评判在中国行不通，身在中国看懂国家大政策就足够用来分析行情，市场经济规律与我等百姓干系不大。这也是中国房地产的奇特之处。很多经济学者和评论员看衰中国房地产，不如任志强的一句“有钱就买”来的深刻、清晰、明了。任志强，咱们的任大炮同志开炮中国房地产、政府，政府封了他的新浪微博，并发文批判他丧失党性人性，政治上的事千丝万缕，咱百姓插不上嘴，但是房地产这码事，明眼人都能看出点道道。这里不讨论任大炮同志，也不想讨论大部分网民。网民怎么怎么样，大炮同志所作所说怎样怎样，互联网这个大平台充当了事件辐射的工具，跟政府作对能有好果子吃么，跟大部分网民对着干实属浪费精力。事实上，2016年春节到现在，房地产市场普涨，这里不考虑三四线城市的行情，除非实在活不下去了，才有人回三四线城市的。</p>\n<a id=\"more\"></a>\n<p>　　2月25号下定决心入手，马上开始搜集楼盘信息，3月4号下午，3月5号上午家里人看了一些楼盘后，经过与我商量，在3月5号中午交了定金，9号我与开发商签了商品房购买合同，就这样把房买了。3月1号国家发布降准的信息后，楼市一片涨涨涨，对于刚需者来说是利好。对于是否充当了开发商的接盘侠，我觉得有刚需、楼市利好、能拿出钱付首付、能承受每月还贷，那就买。中国文化中，家这个概念在每个人心中都占很大的分量。</p>\n<p>　　计划买第二套房，但是考虑到还有一些重要的事情上花钱的地方很多，这个想法只能搁浅了。4月份开始，一线城市，二线城市的房价肯定是唰唰唰的往上涨，涨的会更猛。想买房，就不要指望房价跌，至于什么时候是拐点，刚需者有时间等吗？我觉得一等，就更没机会买房了。</p>\n","site":{"data":{}},"excerpt":"<p>　　去年11月就计划着今年要买房，根据市场行情，我看涨房价走势。但是没有快速入手，原因有很多。主要原因有考虑将来自己要待在哪里生活和发展。今年春节后，一线城市，强二线城市的房价蹭蹭蹭往上窜，此时不入手，更待何时。中国的房地产行情是独具中国特色的，按照市场经济规律来评判在中国行不通，身在中国看懂国家大政策就足够用来分析行情，市场经济规律与我等百姓干系不大。这也是中国房地产的奇特之处。很多经济学者和评论员看衰中国房地产，不如任志强的一句“有钱就买”来的深刻、清晰、明了。任志强，咱们的任大炮同志开炮中国房地产、政府，政府封了他的新浪微博，并发文批判他丧失党性人性，政治上的事千丝万缕，咱百姓插不上嘴，但是房地产这码事，明眼人都能看出点道道。这里不讨论任大炮同志，也不想讨论大部分网民。网民怎么怎么样，大炮同志所作所说怎样怎样，互联网这个大平台充当了事件辐射的工具，跟政府作对能有好果子吃么，跟大部分网民对着干实属浪费精力。事实上，2016年春节到现在，房地产市场普涨，这里不考虑三四线城市的行情，除非实在活不下去了，才有人回三四线城市的。</p>","more":"<p>　　2月25号下定决心入手，马上开始搜集楼盘信息，3月4号下午，3月5号上午家里人看了一些楼盘后，经过与我商量，在3月5号中午交了定金，9号我与开发商签了商品房购买合同，就这样把房买了。3月1号国家发布降准的信息后，楼市一片涨涨涨，对于刚需者来说是利好。对于是否充当了开发商的接盘侠，我觉得有刚需、楼市利好、能拿出钱付首付、能承受每月还贷，那就买。中国文化中，家这个概念在每个人心中都占很大的分量。</p>\n<p>　　计划买第二套房，但是考虑到还有一些重要的事情上花钱的地方很多，这个想法只能搁浅了。4月份开始，一线城市，二线城市的房价肯定是唰唰唰的往上涨，涨的会更猛。想买房，就不要指望房价跌，至于什么时候是拐点，刚需者有时间等吗？我觉得一等，就更没机会买房了。</p>"},{"title":"也无风雨也无晴","date":"2017-05-14T13:03:43.000Z","_content":"\n<center>\n定风波/定风波·三月七日\n【作者】苏轼 【朝代】宋\n三月七日， 沙湖道中遇雨。 雨具先去， 同行皆狼狈， 余独不觉。 已而遂晴， 故作此。\n莫听穿林打叶声， 何妨吟啸且徐行。 竹杖芒鞋轻胜马， 谁怕？ 一蓑烟雨任平生。\n料峭春风吹酒醒， 微冷， 山头斜照却相迎。 回首向来潇瑟处， 归去， 也无风雨也无晴。<br/>\n</center>\n\n<!--more-->\n\n用苏轼老先生的一首词来表达我二零一七年上半年的心境。二零一七年上半年去了天津、上海、厦门、东莞、珠海，假装很开心，假装看起来不在乎，其实内心早已如凉水。人生中定的目标不应受环境和事物的影响而放弃，否则会活的很纠结。打开心结，释放内心，做一个洒脱的人，一个快乐的人。\n\n`二零一七年五月十四日于北京`\n\n\n\n\n\n","source":"_posts/a-quiet-life.md","raw":"---\ntitle: 也无风雨也无晴\ndate: 2017-05-14 21:03:43\ntags:\n- 生活\n---\n\n<center>\n定风波/定风波·三月七日\n【作者】苏轼 【朝代】宋\n三月七日， 沙湖道中遇雨。 雨具先去， 同行皆狼狈， 余独不觉。 已而遂晴， 故作此。\n莫听穿林打叶声， 何妨吟啸且徐行。 竹杖芒鞋轻胜马， 谁怕？ 一蓑烟雨任平生。\n料峭春风吹酒醒， 微冷， 山头斜照却相迎。 回首向来潇瑟处， 归去， 也无风雨也无晴。<br/>\n</center>\n\n<!--more-->\n\n用苏轼老先生的一首词来表达我二零一七年上半年的心境。二零一七年上半年去了天津、上海、厦门、东莞、珠海，假装很开心，假装看起来不在乎，其实内心早已如凉水。人生中定的目标不应受环境和事物的影响而放弃，否则会活的很纠结。打开心结，释放内心，做一个洒脱的人，一个快乐的人。\n\n`二零一七年五月十四日于北京`\n\n\n\n\n\n","slug":"a-quiet-life","published":1,"updated":"2017-05-14T14:29:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzre000fqxeporp7c7aq","content":"<center><br>定风波/定风波·三月七日<br>【作者】苏轼 【朝代】宋<br>三月七日， 沙湖道中遇雨。 雨具先去， 同行皆狼狈， 余独不觉。 已而遂晴， 故作此。<br>莫听穿林打叶声， 何妨吟啸且徐行。 竹杖芒鞋轻胜马， 谁怕？ 一蓑烟雨任平生。<br>料峭春风吹酒醒， 微冷， 山头斜照却相迎。 回首向来潇瑟处， 归去， 也无风雨也无晴。<br><br></center>\n\n<a id=\"more\"></a>\n<p>用苏轼老先生的一首词来表达我二零一七年上半年的心境。二零一七年上半年去了天津、上海、厦门、东莞、珠海，假装很开心，假装看起来不在乎，其实内心早已如凉水。人生中定的目标不应受环境和事物的影响而放弃，否则会活的很纠结。打开心结，释放内心，做一个洒脱的人，一个快乐的人。</p>\n<p><code>二零一七年五月十四日于北京</code></p>\n","site":{"data":{}},"excerpt":"<center><br>定风波/定风波·三月七日<br>【作者】苏轼 【朝代】宋<br>三月七日， 沙湖道中遇雨。 雨具先去， 同行皆狼狈， 余独不觉。 已而遂晴， 故作此。<br>莫听穿林打叶声， 何妨吟啸且徐行。 竹杖芒鞋轻胜马， 谁怕？ 一蓑烟雨任平生。<br>料峭春风吹酒醒， 微冷， 山头斜照却相迎。 回首向来潇瑟处， 归去， 也无风雨也无晴。<br><br></center>","more":"<p>用苏轼老先生的一首词来表达我二零一七年上半年的心境。二零一七年上半年去了天津、上海、厦门、东莞、珠海，假装很开心，假装看起来不在乎，其实内心早已如凉水。人生中定的目标不应受环境和事物的影响而放弃，否则会活的很纠结。打开心结，释放内心，做一个洒脱的人，一个快乐的人。</p>\n<p><code>二零一七年五月十四日于北京</code></p>"},{"title":"分析 H.265 + AAC 的 FLV 文件","date":"2017-07-01T10:38:19.000Z","_content":"\n常见的 FLV 文件里封装的是 H.264 和 AAC 数据。对于 H.265(HEVC)，FLV 支不支持呢，答案是官方版本不支持。想用 FLV 封装 H.265 数据，那该怎么搞？首先，需要一套 H.265 的编解码器，其次，就是扩展 FLV 的头 header，其实是增加对 H.265 CodecID 的支持。\n\n今年6月6日苹果开发者大会开放了 iOS 平台的 HEVC API，也就是开发者可以调用 iOS 系统的 API 进行 H.265 硬编码了，但是只能在 iOS 11.0 及以上版本使用。目前，iOS 11.0 正式版还未正式发布，需要等到今年的9月份。不建议开发者将自己的 iOS 设备刷到 iOS 11.0 beta 版，因为升级 beta 版后非常卡。经测试，苹果的 H.265 编码出来的图像质量还是可以的，但是消耗码率较高。\n\n苹果开放 H.265 编解码 API 势必会影响到整个 H.265 行业的发展，但 H.265 离真正落地和普及还需要时间。明年（2018年）再看 H.265 对整个音视频行业的影响。\n\n<!-- more -->\n\n去年，我们团队就已经实现 H.265 直播推流和播放了，采用的是 H.265 软编码和软解码器，推流端使用 500K 码率就能推送 24 帧，720P 的视频流，设备的性能消耗在可接受的范围内，播放端画质相当清晰。\n\n言归正传，分析下 H.265+AAC 的 FLV 文件。\n\n![H.265+AAC的FLV](http://images2015.cnblogs.com/blog/719115/201707/719115-20170701195845180-726618432.jpg)\n\n关于 H.265 的 VPS、SPS、PPS 等知识点的解释，可参看文章：  \n[VPS SPS PPS](http://blog.csdn.net/u012868357/article/details/48974967)  \n[HEVC编码结构：序列参数集SPS、图像参数集PPS、视频参数集VPS](http://blog.csdn.net/lin453701006/article/details/52797104)  \n[FFmpeg的HEVC解码器源代码简单分析：解析器（Parser）部分](http://blog.csdn.net/leixiaohua1020/article/details/46412607)  \n[homerHEVC代码阅读（21）——基本流程](http://blog.csdn.net/nb_vol_1/article/details/50210487)  \n[HEVC概念缩写对照表](http://blog.csdn.net/lin453701006/article/details/52797415)\n\n","source":"_posts/analyse-h265-flv.md","raw":"---\ntitle: 分析 H.265 + AAC 的 FLV 文件\ndate: 2017-07-01 18:38:19\ntags:\n- 音视频处理\n---\n\n常见的 FLV 文件里封装的是 H.264 和 AAC 数据。对于 H.265(HEVC)，FLV 支不支持呢，答案是官方版本不支持。想用 FLV 封装 H.265 数据，那该怎么搞？首先，需要一套 H.265 的编解码器，其次，就是扩展 FLV 的头 header，其实是增加对 H.265 CodecID 的支持。\n\n今年6月6日苹果开发者大会开放了 iOS 平台的 HEVC API，也就是开发者可以调用 iOS 系统的 API 进行 H.265 硬编码了，但是只能在 iOS 11.0 及以上版本使用。目前，iOS 11.0 正式版还未正式发布，需要等到今年的9月份。不建议开发者将自己的 iOS 设备刷到 iOS 11.0 beta 版，因为升级 beta 版后非常卡。经测试，苹果的 H.265 编码出来的图像质量还是可以的，但是消耗码率较高。\n\n苹果开放 H.265 编解码 API 势必会影响到整个 H.265 行业的发展，但 H.265 离真正落地和普及还需要时间。明年（2018年）再看 H.265 对整个音视频行业的影响。\n\n<!-- more -->\n\n去年，我们团队就已经实现 H.265 直播推流和播放了，采用的是 H.265 软编码和软解码器，推流端使用 500K 码率就能推送 24 帧，720P 的视频流，设备的性能消耗在可接受的范围内，播放端画质相当清晰。\n\n言归正传，分析下 H.265+AAC 的 FLV 文件。\n\n![H.265+AAC的FLV](http://images2015.cnblogs.com/blog/719115/201707/719115-20170701195845180-726618432.jpg)\n\n关于 H.265 的 VPS、SPS、PPS 等知识点的解释，可参看文章：  \n[VPS SPS PPS](http://blog.csdn.net/u012868357/article/details/48974967)  \n[HEVC编码结构：序列参数集SPS、图像参数集PPS、视频参数集VPS](http://blog.csdn.net/lin453701006/article/details/52797104)  \n[FFmpeg的HEVC解码器源代码简单分析：解析器（Parser）部分](http://blog.csdn.net/leixiaohua1020/article/details/46412607)  \n[homerHEVC代码阅读（21）——基本流程](http://blog.csdn.net/nb_vol_1/article/details/50210487)  \n[HEVC概念缩写对照表](http://blog.csdn.net/lin453701006/article/details/52797415)\n\n","slug":"analyse-h265-flv","published":1,"updated":"2017-07-01T14:51:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzrg000iqxep9mv597e1","content":"<p>常见的 FLV 文件里封装的是 H.264 和 AAC 数据。对于 H.265(HEVC)，FLV 支不支持呢，答案是官方版本不支持。想用 FLV 封装 H.265 数据，那该怎么搞？首先，需要一套 H.265 的编解码器，其次，就是扩展 FLV 的头 header，其实是增加对 H.265 CodecID 的支持。</p>\n<p>今年6月6日苹果开发者大会开放了 iOS 平台的 HEVC API，也就是开发者可以调用 iOS 系统的 API 进行 H.265 硬编码了，但是只能在 iOS 11.0 及以上版本使用。目前，iOS 11.0 正式版还未正式发布，需要等到今年的9月份。不建议开发者将自己的 iOS 设备刷到 iOS 11.0 beta 版，因为升级 beta 版后非常卡。经测试，苹果的 H.265 编码出来的图像质量还是可以的，但是消耗码率较高。</p>\n<p>苹果开放 H.265 编解码 API 势必会影响到整个 H.265 行业的发展，但 H.265 离真正落地和普及还需要时间。明年（2018年）再看 H.265 对整个音视频行业的影响。</p>\n<a id=\"more\"></a>\n<p>去年，我们团队就已经实现 H.265 直播推流和播放了，采用的是 H.265 软编码和软解码器，推流端使用 500K 码率就能推送 24 帧，720P 的视频流，设备的性能消耗在可接受的范围内，播放端画质相当清晰。</p>\n<p>言归正传，分析下 H.265+AAC 的 FLV 文件。</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201707/719115-20170701195845180-726618432.jpg\" alt=\"H.265+AAC的FLV\"></p>\n<p>关于 H.265 的 VPS、SPS、PPS 等知识点的解释，可参看文章：<br><a href=\"http://blog.csdn.net/u012868357/article/details/48974967\" target=\"_blank\" rel=\"external\">VPS SPS PPS</a><br><a href=\"http://blog.csdn.net/lin453701006/article/details/52797104\" target=\"_blank\" rel=\"external\">HEVC编码结构：序列参数集SPS、图像参数集PPS、视频参数集VPS</a><br><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/46412607\" target=\"_blank\" rel=\"external\">FFmpeg的HEVC解码器源代码简单分析：解析器（Parser）部分</a><br><a href=\"http://blog.csdn.net/nb_vol_1/article/details/50210487\" target=\"_blank\" rel=\"external\">homerHEVC代码阅读（21）——基本流程</a><br><a href=\"http://blog.csdn.net/lin453701006/article/details/52797415\" target=\"_blank\" rel=\"external\">HEVC概念缩写对照表</a></p>\n","site":{"data":{}},"excerpt":"<p>常见的 FLV 文件里封装的是 H.264 和 AAC 数据。对于 H.265(HEVC)，FLV 支不支持呢，答案是官方版本不支持。想用 FLV 封装 H.265 数据，那该怎么搞？首先，需要一套 H.265 的编解码器，其次，就是扩展 FLV 的头 header，其实是增加对 H.265 CodecID 的支持。</p>\n<p>今年6月6日苹果开发者大会开放了 iOS 平台的 HEVC API，也就是开发者可以调用 iOS 系统的 API 进行 H.265 硬编码了，但是只能在 iOS 11.0 及以上版本使用。目前，iOS 11.0 正式版还未正式发布，需要等到今年的9月份。不建议开发者将自己的 iOS 设备刷到 iOS 11.0 beta 版，因为升级 beta 版后非常卡。经测试，苹果的 H.265 编码出来的图像质量还是可以的，但是消耗码率较高。</p>\n<p>苹果开放 H.265 编解码 API 势必会影响到整个 H.265 行业的发展，但 H.265 离真正落地和普及还需要时间。明年（2018年）再看 H.265 对整个音视频行业的影响。</p>","more":"<p>去年，我们团队就已经实现 H.265 直播推流和播放了，采用的是 H.265 软编码和软解码器，推流端使用 500K 码率就能推送 24 帧，720P 的视频流，设备的性能消耗在可接受的范围内，播放端画质相当清晰。</p>\n<p>言归正传，分析下 H.265+AAC 的 FLV 文件。</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201707/719115-20170701195845180-726618432.jpg\" alt=\"H.265+AAC的FLV\"></p>\n<p>关于 H.265 的 VPS、SPS、PPS 等知识点的解释，可参看文章：<br><a href=\"http://blog.csdn.net/u012868357/article/details/48974967\" target=\"_blank\" rel=\"external\">VPS SPS PPS</a><br><a href=\"http://blog.csdn.net/lin453701006/article/details/52797104\" target=\"_blank\" rel=\"external\">HEVC编码结构：序列参数集SPS、图像参数集PPS、视频参数集VPS</a><br><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/46412607\" target=\"_blank\" rel=\"external\">FFmpeg的HEVC解码器源代码简单分析：解析器（Parser）部分</a><br><a href=\"http://blog.csdn.net/nb_vol_1/article/details/50210487\" target=\"_blank\" rel=\"external\">homerHEVC代码阅读（21）——基本流程</a><br><a href=\"http://blog.csdn.net/lin453701006/article/details/52797415\" target=\"_blank\" rel=\"external\">HEVC概念缩写对照表</a></p>"},{"title":"换了个博客主题，多说评论无法在博客中显示了","date":"2016-11-01T07:21:02.000Z","_content":"\n　　之前用的 hexo 博客主题不太美观，就想着换个，结果换了个博客主题，多说评论不能在博客中显示，评论只能在多说后台上看到。试着把文章和评论导出来再导入到多说后台，各种方法都试了，没搞成功。　　\n\n　　文章评论不能显示的问题让我心情很不好，大量的评论要想一个不落的跟文章关联起来的可能性不大，内心里对恢复评论不作指望了，能恢复多少算多少吧。\n\n　　想想这个事，真不该折腾，浪费了时间不说，关键是评论数据不能正常恢复显示很影响我的心情。先把评论数据保存，以后得闲，再整这个恢复评论数据显示的事情。说到以后得闲再做，估计这个事可能就被我遗忘了。\n\n<!-- more -->\n`2016年11月1日 写于北京 亲笔`","source":"_posts/duo-shuo-is-poor.md","raw":"---\ntitle: 换了个博客主题，多说评论无法在博客中显示了\ndate: 2016-11-01 15:21:02\ntags: \n- 工作\n- hexo\n---\n\n　　之前用的 hexo 博客主题不太美观，就想着换个，结果换了个博客主题，多说评论不能在博客中显示，评论只能在多说后台上看到。试着把文章和评论导出来再导入到多说后台，各种方法都试了，没搞成功。　　\n\n　　文章评论不能显示的问题让我心情很不好，大量的评论要想一个不落的跟文章关联起来的可能性不大，内心里对恢复评论不作指望了，能恢复多少算多少吧。\n\n　　想想这个事，真不该折腾，浪费了时间不说，关键是评论数据不能正常恢复显示很影响我的心情。先把评论数据保存，以后得闲，再整这个恢复评论数据显示的事情。说到以后得闲再做，估计这个事可能就被我遗忘了。\n\n<!-- more -->\n`2016年11月1日 写于北京 亲笔`","slug":"duo-shuo-is-poor","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzri000kqxep1j7s3z4n","content":"<p>　　之前用的 hexo 博客主题不太美观，就想着换个，结果换了个博客主题，多说评论不能在博客中显示，评论只能在多说后台上看到。试着把文章和评论导出来再导入到多说后台，各种方法都试了，没搞成功。　　</p>\n<p>　　文章评论不能显示的问题让我心情很不好，大量的评论要想一个不落的跟文章关联起来的可能性不大，内心里对恢复评论不作指望了，能恢复多少算多少吧。</p>\n<p>　　想想这个事，真不该折腾，浪费了时间不说，关键是评论数据不能正常恢复显示很影响我的心情。先把评论数据保存，以后得闲，再整这个恢复评论数据显示的事情。说到以后得闲再做，估计这个事可能就被我遗忘了。</p>\n<a id=\"more\"></a>\n<p><code>2016年11月1日 写于北京 亲笔</code></p>\n","site":{"data":{}},"excerpt":"<p>　　之前用的 hexo 博客主题不太美观，就想着换个，结果换了个博客主题，多说评论不能在博客中显示，评论只能在多说后台上看到。试着把文章和评论导出来再导入到多说后台，各种方法都试了，没搞成功。　　</p>\n<p>　　文章评论不能显示的问题让我心情很不好，大量的评论要想一个不落的跟文章关联起来的可能性不大，内心里对恢复评论不作指望了，能恢复多少算多少吧。</p>\n<p>　　想想这个事，真不该折腾，浪费了时间不说，关键是评论数据不能正常恢复显示很影响我的心情。先把评论数据保存，以后得闲，再整这个恢复评论数据显示的事情。说到以后得闲再做，估计这个事可能就被我遗忘了。</p>","more":"<p><code>2016年11月1日 写于北京 亲笔</code></p>"},{"title":"我竟然恐婚了","date":"2016-10-19T03:05:16.000Z","_content":"\n　　在二十岁出头的时候，认为恋爱、结婚是很值得期待、很幸福的一件事。可是到了如今的年龄，很害怕结婚。婚姻不是简简单单两个人的事情，要考虑到婚前两个家庭的关系，结婚时的开销，婚后小孩的培养以及夫妻之间感情生活的问题。分析我现在的这种状态，之所以有害怕结婚的状态是因为我认为未来有太多不可预期的因素，我现阶段能力不足以给予自身强有力的信心。\n\n<!-- more -->\n　　工作年限少，现阶段没什么积蓄，完全凭现阶段的努力给将来一个承诺，我自认为是一个较虚的构想，但未来是值得期待的。未来的不可确定性、现阶段的规划，我相信我能实现人生每个阶段所需要的生活需求。\n\n　　年龄的增长，现在对事对物的看法趋于平和，毕竟不再是以前未经历社会世态的小年青了。以平和的态度，出世入世的心态，去拥有工作的战场，生活的小资情调。人生究竟是怎样的，活过了才知道。和谁一起走过，经历了才知道。\n\n　　生活是不确定性的，但每个阶段的生活需要一个指标去指引，不然就会活的没有尽头，以至于看不到希望。\n\n`2016年10月19号 写于北京市昌平区住宅 亲笔`\n　　\n　　\n　　\n\n\n","source":"_posts/fear-of-marriage.md","raw":"---\ntitle: 我竟然恐婚了\ndate: 2016-10-19 11:05:16\ntags:\n- 生活\n---\n\n　　在二十岁出头的时候，认为恋爱、结婚是很值得期待、很幸福的一件事。可是到了如今的年龄，很害怕结婚。婚姻不是简简单单两个人的事情，要考虑到婚前两个家庭的关系，结婚时的开销，婚后小孩的培养以及夫妻之间感情生活的问题。分析我现在的这种状态，之所以有害怕结婚的状态是因为我认为未来有太多不可预期的因素，我现阶段能力不足以给予自身强有力的信心。\n\n<!-- more -->\n　　工作年限少，现阶段没什么积蓄，完全凭现阶段的努力给将来一个承诺，我自认为是一个较虚的构想，但未来是值得期待的。未来的不可确定性、现阶段的规划，我相信我能实现人生每个阶段所需要的生活需求。\n\n　　年龄的增长，现在对事对物的看法趋于平和，毕竟不再是以前未经历社会世态的小年青了。以平和的态度，出世入世的心态，去拥有工作的战场，生活的小资情调。人生究竟是怎样的，活过了才知道。和谁一起走过，经历了才知道。\n\n　　生活是不确定性的，但每个阶段的生活需要一个指标去指引，不然就会活的没有尽头，以至于看不到希望。\n\n`2016年10月19号 写于北京市昌平区住宅 亲笔`\n　　\n　　\n　　\n\n\n","slug":"fear-of-marriage","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzrl000nqxepolnrcjr4","content":"<p>　　在二十岁出头的时候，认为恋爱、结婚是很值得期待、很幸福的一件事。可是到了如今的年龄，很害怕结婚。婚姻不是简简单单两个人的事情，要考虑到婚前两个家庭的关系，结婚时的开销，婚后小孩的培养以及夫妻之间感情生活的问题。分析我现在的这种状态，之所以有害怕结婚的状态是因为我认为未来有太多不可预期的因素，我现阶段能力不足以给予自身强有力的信心。</p>\n<a id=\"more\"></a>\n<p>　　工作年限少，现阶段没什么积蓄，完全凭现阶段的努力给将来一个承诺，我自认为是一个较虚的构想，但未来是值得期待的。未来的不可确定性、现阶段的规划，我相信我能实现人生每个阶段所需要的生活需求。</p>\n<p>　　年龄的增长，现在对事对物的看法趋于平和，毕竟不再是以前未经历社会世态的小年青了。以平和的态度，出世入世的心态，去拥有工作的战场，生活的小资情调。人生究竟是怎样的，活过了才知道。和谁一起走过，经历了才知道。</p>\n<p>　　生活是不确定性的，但每个阶段的生活需要一个指标去指引，不然就会活的没有尽头，以至于看不到希望。</p>\n<p><code>2016年10月19号 写于北京市昌平区住宅 亲笔</code>\n　　\n　　\n　　</p>\n","site":{"data":{}},"excerpt":"<p>　　在二十岁出头的时候，认为恋爱、结婚是很值得期待、很幸福的一件事。可是到了如今的年龄，很害怕结婚。婚姻不是简简单单两个人的事情，要考虑到婚前两个家庭的关系，结婚时的开销，婚后小孩的培养以及夫妻之间感情生活的问题。分析我现在的这种状态，之所以有害怕结婚的状态是因为我认为未来有太多不可预期的因素，我现阶段能力不足以给予自身强有力的信心。</p>","more":"<p>　　工作年限少，现阶段没什么积蓄，完全凭现阶段的努力给将来一个承诺，我自认为是一个较虚的构想，但未来是值得期待的。未来的不可确定性、现阶段的规划，我相信我能实现人生每个阶段所需要的生活需求。</p>\n<p>　　年龄的增长，现在对事对物的看法趋于平和，毕竟不再是以前未经历社会世态的小年青了。以平和的态度，出世入世的心态，去拥有工作的战场，生活的小资情调。人生究竟是怎样的，活过了才知道。和谁一起走过，经历了才知道。</p>\n<p>　　生活是不确定性的，但每个阶段的生活需要一个指标去指引，不然就会活的没有尽头，以至于看不到希望。</p>\n<p><code>2016年10月19号 写于北京市昌平区住宅 亲笔</code>\n　　\n　　\n　　</p>"},{"title":"硕士毕业2年对现阶段的思考","date":"2016-07-06T05:29:30.000Z","_content":"\n　　目前，鉴于对自己的人生规划，做出了离开深圳去北京发展的决定。为什么去北京？第一是工作赚钱，第二是找个学校读个博士，第三是有了一定物质基础和条件要走出国门。\n\n<!-- more -->\n\n　　首先谈第一点，工作赚钱。毕业前我就在深圳正式工作了，到目前已经2年3个月时间了，做过iOS应用开发工程师，播放器开发工程师，以及如今的编解码工程师。其实，2014年做iOS应用开发工程师，要是坚持做到现在待遇也不会差，但是，我认为一个硕士出身，还是做理论的，要我天天画一些界面简直是羞耻，没前途，那就换方向。对于iOS开发这块，2011年3月，就去北京中关村实习过，本科毕业后，硕士阶段也做过iOS应用开发，内心底是抵触的，是拒绝的。读博士，才是我的真爱。后来发生了很多事情，放下读博的念头到深圳找了份iOS开发的工作，这家公司最后被**互动用6个亿收购了，该公司的1个月的收入顶1个一般互联网公司1年的收入，我在里面做什么，时间过去这么久了不想再多说了。人就是得不到的就会憧憬，说句不好听的话，就是犯贱。但是，骨子里的犯贱从另一方面来讲，这人有激情。2015年年后，找了一家在音视频行业有口碑的工作，正式进入流媒体行业工作，这也是我非常喜欢的一个工作方向，该公司还不错，做过2008年北京奥运会手机端直播，2015年给中国好声音提供终端视频直播平台，还有一些其它的比如什么青运会视频直播什么的。在该公司，是我个人学习和发展最快的时间段，做自己喜欢的事，是一种享受。后来，公司被收购重组，我决定离开了，拿了赔偿走人了。内心深处，挺感谢给我一个机会，一个平台进入流媒体的部门boss的。工作在换，薪资在涨，人心也越来越膨胀，这也符合我的个性，但这也是一大性格弊端。如今的我，在那个人人都欠它一个会员的公司工作着，感觉到了工作方向上遇到了瓶颈，突然间我就有种“你什么都会，其实你什么都不会”的迷失感，以前读博的念头又重新燃起，换工作加薪的想法也随之而来。更多时候，享受这种很变态的痛苦中有快感的感觉。\n\n　　其次，对于读博这件事，其实我本身有兴趣的，也有欲望的。但是，我深入剖析自己后，读博也只是自己赚钱的一个支撑条件。物质基础决定精神世界，精神世界没有物质口粮支撑说什么都会沦为瞎扯淡。拿个博士学历，我敢肯定的说我自己就是为了满足自己的那么点欲望，其实对我赚钱能有多大的帮助作用，其实没什么影响。\n\n　　再次，至于出国这个事，有多少人都是很憧憬的，因为看到了国内的种种乱象。对于搞研究，我是特别喜欢的，但是要我没钱去干自己喜欢的事，我是不情愿的。活都活不起了，喜欢的事能持续多久呢。\n\n　　现在是2016年7月，硕士毕业2年了，2年中发生了很多事情，经历了职场的万象，被人当枪使，经历过裁员风波，经历过家人生病自己无能为力的痛楚。如今，虽然待遇有每月＊万人民币，但是我觉得很少，因为我觉得自身的价值还没有发挥出来，可提升的地方很多，也没有达到我的预期值。我给自己定的规划是工作3年内月薪要超过＊万人民币。我觉得这不是一个口号，是一个可行的，可实现的目标。当一个人的追求，就是为了钱的时候，某种程度上会限制自身更快的发展，这也是一种悲哀。\n\n　　前2天向公司上级提了离职的事情，谈论了自己最真实的最直接的想法。\n\n　　直播项目做了半年多了，自身没什么提升，每天就是各种需求导致各种改代码，时间就这么过去了，可惜。\n\n　　接下去会做视频算法方面，什么编码解码器用现成的玩没什么意思，改进或者搞些新的策略，我喜欢图像这快，嗯，这就是兴趣。为什么不选择音频算法方向，毕竟这个太小众了，到头来在合理的时间内拿不到期望的结果无疑是一种精力的浪费。选择做什么，是关键。\n\n　　明年，也要考虑找个合适的人谈谈人生。\n\n　　明年，我就29岁了。哈哈，时间过的好快，结婚是个什么玩意，婚姻又是个什么玩意。一年后再发表感受。\n\n\n\n\n\n\n\n\n","source":"_posts/feeling-of-TwoYear-after-master-graduation.md","raw":"---\ntitle: 硕士毕业2年对现阶段的思考\ndate: 2016-07-06 13:29:30\ntags:\n- 生活\n- 工作\n---\n\n　　目前，鉴于对自己的人生规划，做出了离开深圳去北京发展的决定。为什么去北京？第一是工作赚钱，第二是找个学校读个博士，第三是有了一定物质基础和条件要走出国门。\n\n<!-- more -->\n\n　　首先谈第一点，工作赚钱。毕业前我就在深圳正式工作了，到目前已经2年3个月时间了，做过iOS应用开发工程师，播放器开发工程师，以及如今的编解码工程师。其实，2014年做iOS应用开发工程师，要是坚持做到现在待遇也不会差，但是，我认为一个硕士出身，还是做理论的，要我天天画一些界面简直是羞耻，没前途，那就换方向。对于iOS开发这块，2011年3月，就去北京中关村实习过，本科毕业后，硕士阶段也做过iOS应用开发，内心底是抵触的，是拒绝的。读博士，才是我的真爱。后来发生了很多事情，放下读博的念头到深圳找了份iOS开发的工作，这家公司最后被**互动用6个亿收购了，该公司的1个月的收入顶1个一般互联网公司1年的收入，我在里面做什么，时间过去这么久了不想再多说了。人就是得不到的就会憧憬，说句不好听的话，就是犯贱。但是，骨子里的犯贱从另一方面来讲，这人有激情。2015年年后，找了一家在音视频行业有口碑的工作，正式进入流媒体行业工作，这也是我非常喜欢的一个工作方向，该公司还不错，做过2008年北京奥运会手机端直播，2015年给中国好声音提供终端视频直播平台，还有一些其它的比如什么青运会视频直播什么的。在该公司，是我个人学习和发展最快的时间段，做自己喜欢的事，是一种享受。后来，公司被收购重组，我决定离开了，拿了赔偿走人了。内心深处，挺感谢给我一个机会，一个平台进入流媒体的部门boss的。工作在换，薪资在涨，人心也越来越膨胀，这也符合我的个性，但这也是一大性格弊端。如今的我，在那个人人都欠它一个会员的公司工作着，感觉到了工作方向上遇到了瓶颈，突然间我就有种“你什么都会，其实你什么都不会”的迷失感，以前读博的念头又重新燃起，换工作加薪的想法也随之而来。更多时候，享受这种很变态的痛苦中有快感的感觉。\n\n　　其次，对于读博这件事，其实我本身有兴趣的，也有欲望的。但是，我深入剖析自己后，读博也只是自己赚钱的一个支撑条件。物质基础决定精神世界，精神世界没有物质口粮支撑说什么都会沦为瞎扯淡。拿个博士学历，我敢肯定的说我自己就是为了满足自己的那么点欲望，其实对我赚钱能有多大的帮助作用，其实没什么影响。\n\n　　再次，至于出国这个事，有多少人都是很憧憬的，因为看到了国内的种种乱象。对于搞研究，我是特别喜欢的，但是要我没钱去干自己喜欢的事，我是不情愿的。活都活不起了，喜欢的事能持续多久呢。\n\n　　现在是2016年7月，硕士毕业2年了，2年中发生了很多事情，经历了职场的万象，被人当枪使，经历过裁员风波，经历过家人生病自己无能为力的痛楚。如今，虽然待遇有每月＊万人民币，但是我觉得很少，因为我觉得自身的价值还没有发挥出来，可提升的地方很多，也没有达到我的预期值。我给自己定的规划是工作3年内月薪要超过＊万人民币。我觉得这不是一个口号，是一个可行的，可实现的目标。当一个人的追求，就是为了钱的时候，某种程度上会限制自身更快的发展，这也是一种悲哀。\n\n　　前2天向公司上级提了离职的事情，谈论了自己最真实的最直接的想法。\n\n　　直播项目做了半年多了，自身没什么提升，每天就是各种需求导致各种改代码，时间就这么过去了，可惜。\n\n　　接下去会做视频算法方面，什么编码解码器用现成的玩没什么意思，改进或者搞些新的策略，我喜欢图像这快，嗯，这就是兴趣。为什么不选择音频算法方向，毕竟这个太小众了，到头来在合理的时间内拿不到期望的结果无疑是一种精力的浪费。选择做什么，是关键。\n\n　　明年，也要考虑找个合适的人谈谈人生。\n\n　　明年，我就29岁了。哈哈，时间过的好快，结婚是个什么玩意，婚姻又是个什么玩意。一年后再发表感受。\n\n\n\n\n\n\n\n\n","slug":"feeling-of-TwoYear-after-master-graduation","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzrn000pqxep4fql2lj2","content":"<p>　　目前，鉴于对自己的人生规划，做出了离开深圳去北京发展的决定。为什么去北京？第一是工作赚钱，第二是找个学校读个博士，第三是有了一定物质基础和条件要走出国门。</p>\n<a id=\"more\"></a>\n<p>　　首先谈第一点，工作赚钱。毕业前我就在深圳正式工作了，到目前已经2年3个月时间了，做过iOS应用开发工程师，播放器开发工程师，以及如今的编解码工程师。其实，2014年做iOS应用开发工程师，要是坚持做到现在待遇也不会差，但是，我认为一个硕士出身，还是做理论的，要我天天画一些界面简直是羞耻，没前途，那就换方向。对于iOS开发这块，2011年3月，就去北京中关村实习过，本科毕业后，硕士阶段也做过iOS应用开发，内心底是抵触的，是拒绝的。读博士，才是我的真爱。后来发生了很多事情，放下读博的念头到深圳找了份iOS开发的工作，这家公司最后被**互动用6个亿收购了，该公司的1个月的收入顶1个一般互联网公司1年的收入，我在里面做什么，时间过去这么久了不想再多说了。人就是得不到的就会憧憬，说句不好听的话，就是犯贱。但是，骨子里的犯贱从另一方面来讲，这人有激情。2015年年后，找了一家在音视频行业有口碑的工作，正式进入流媒体行业工作，这也是我非常喜欢的一个工作方向，该公司还不错，做过2008年北京奥运会手机端直播，2015年给中国好声音提供终端视频直播平台，还有一些其它的比如什么青运会视频直播什么的。在该公司，是我个人学习和发展最快的时间段，做自己喜欢的事，是一种享受。后来，公司被收购重组，我决定离开了，拿了赔偿走人了。内心深处，挺感谢给我一个机会，一个平台进入流媒体的部门boss的。工作在换，薪资在涨，人心也越来越膨胀，这也符合我的个性，但这也是一大性格弊端。如今的我，在那个人人都欠它一个会员的公司工作着，感觉到了工作方向上遇到了瓶颈，突然间我就有种“你什么都会，其实你什么都不会”的迷失感，以前读博的念头又重新燃起，换工作加薪的想法也随之而来。更多时候，享受这种很变态的痛苦中有快感的感觉。</p>\n<p>　　其次，对于读博这件事，其实我本身有兴趣的，也有欲望的。但是，我深入剖析自己后，读博也只是自己赚钱的一个支撑条件。物质基础决定精神世界，精神世界没有物质口粮支撑说什么都会沦为瞎扯淡。拿个博士学历，我敢肯定的说我自己就是为了满足自己的那么点欲望，其实对我赚钱能有多大的帮助作用，其实没什么影响。</p>\n<p>　　再次，至于出国这个事，有多少人都是很憧憬的，因为看到了国内的种种乱象。对于搞研究，我是特别喜欢的，但是要我没钱去干自己喜欢的事，我是不情愿的。活都活不起了，喜欢的事能持续多久呢。</p>\n<p>　　现在是2016年7月，硕士毕业2年了，2年中发生了很多事情，经历了职场的万象，被人当枪使，经历过裁员风波，经历过家人生病自己无能为力的痛楚。如今，虽然待遇有每月＊万人民币，但是我觉得很少，因为我觉得自身的价值还没有发挥出来，可提升的地方很多，也没有达到我的预期值。我给自己定的规划是工作3年内月薪要超过＊万人民币。我觉得这不是一个口号，是一个可行的，可实现的目标。当一个人的追求，就是为了钱的时候，某种程度上会限制自身更快的发展，这也是一种悲哀。</p>\n<p>　　前2天向公司上级提了离职的事情，谈论了自己最真实的最直接的想法。</p>\n<p>　　直播项目做了半年多了，自身没什么提升，每天就是各种需求导致各种改代码，时间就这么过去了，可惜。</p>\n<p>　　接下去会做视频算法方面，什么编码解码器用现成的玩没什么意思，改进或者搞些新的策略，我喜欢图像这快，嗯，这就是兴趣。为什么不选择音频算法方向，毕竟这个太小众了，到头来在合理的时间内拿不到期望的结果无疑是一种精力的浪费。选择做什么，是关键。</p>\n<p>　　明年，也要考虑找个合适的人谈谈人生。</p>\n<p>　　明年，我就29岁了。哈哈，时间过的好快，结婚是个什么玩意，婚姻又是个什么玩意。一年后再发表感受。</p>\n","site":{"data":{}},"excerpt":"<p>　　目前，鉴于对自己的人生规划，做出了离开深圳去北京发展的决定。为什么去北京？第一是工作赚钱，第二是找个学校读个博士，第三是有了一定物质基础和条件要走出国门。</p>","more":"<p>　　首先谈第一点，工作赚钱。毕业前我就在深圳正式工作了，到目前已经2年3个月时间了，做过iOS应用开发工程师，播放器开发工程师，以及如今的编解码工程师。其实，2014年做iOS应用开发工程师，要是坚持做到现在待遇也不会差，但是，我认为一个硕士出身，还是做理论的，要我天天画一些界面简直是羞耻，没前途，那就换方向。对于iOS开发这块，2011年3月，就去北京中关村实习过，本科毕业后，硕士阶段也做过iOS应用开发，内心底是抵触的，是拒绝的。读博士，才是我的真爱。后来发生了很多事情，放下读博的念头到深圳找了份iOS开发的工作，这家公司最后被**互动用6个亿收购了，该公司的1个月的收入顶1个一般互联网公司1年的收入，我在里面做什么，时间过去这么久了不想再多说了。人就是得不到的就会憧憬，说句不好听的话，就是犯贱。但是，骨子里的犯贱从另一方面来讲，这人有激情。2015年年后，找了一家在音视频行业有口碑的工作，正式进入流媒体行业工作，这也是我非常喜欢的一个工作方向，该公司还不错，做过2008年北京奥运会手机端直播，2015年给中国好声音提供终端视频直播平台，还有一些其它的比如什么青运会视频直播什么的。在该公司，是我个人学习和发展最快的时间段，做自己喜欢的事，是一种享受。后来，公司被收购重组，我决定离开了，拿了赔偿走人了。内心深处，挺感谢给我一个机会，一个平台进入流媒体的部门boss的。工作在换，薪资在涨，人心也越来越膨胀，这也符合我的个性，但这也是一大性格弊端。如今的我，在那个人人都欠它一个会员的公司工作着，感觉到了工作方向上遇到了瓶颈，突然间我就有种“你什么都会，其实你什么都不会”的迷失感，以前读博的念头又重新燃起，换工作加薪的想法也随之而来。更多时候，享受这种很变态的痛苦中有快感的感觉。</p>\n<p>　　其次，对于读博这件事，其实我本身有兴趣的，也有欲望的。但是，我深入剖析自己后，读博也只是自己赚钱的一个支撑条件。物质基础决定精神世界，精神世界没有物质口粮支撑说什么都会沦为瞎扯淡。拿个博士学历，我敢肯定的说我自己就是为了满足自己的那么点欲望，其实对我赚钱能有多大的帮助作用，其实没什么影响。</p>\n<p>　　再次，至于出国这个事，有多少人都是很憧憬的，因为看到了国内的种种乱象。对于搞研究，我是特别喜欢的，但是要我没钱去干自己喜欢的事，我是不情愿的。活都活不起了，喜欢的事能持续多久呢。</p>\n<p>　　现在是2016年7月，硕士毕业2年了，2年中发生了很多事情，经历了职场的万象，被人当枪使，经历过裁员风波，经历过家人生病自己无能为力的痛楚。如今，虽然待遇有每月＊万人民币，但是我觉得很少，因为我觉得自身的价值还没有发挥出来，可提升的地方很多，也没有达到我的预期值。我给自己定的规划是工作3年内月薪要超过＊万人民币。我觉得这不是一个口号，是一个可行的，可实现的目标。当一个人的追求，就是为了钱的时候，某种程度上会限制自身更快的发展，这也是一种悲哀。</p>\n<p>　　前2天向公司上级提了离职的事情，谈论了自己最真实的最直接的想法。</p>\n<p>　　直播项目做了半年多了，自身没什么提升，每天就是各种需求导致各种改代码，时间就这么过去了，可惜。</p>\n<p>　　接下去会做视频算法方面，什么编码解码器用现成的玩没什么意思，改进或者搞些新的策略，我喜欢图像这快，嗯，这就是兴趣。为什么不选择音频算法方向，毕竟这个太小众了，到头来在合理的时间内拿不到期望的结果无疑是一种精力的浪费。选择做什么，是关键。</p>\n<p>　　明年，也要考虑找个合适的人谈谈人生。</p>\n<p>　　明年，我就29岁了。哈哈，时间过的好快，结婚是个什么玩意，婚姻又是个什么玩意。一年后再发表感受。</p>"},{"title":"rtmp直播推流（一）－－flv格式解析与封装","date":"2015-11-13T09:35:27.000Z","_content":"\nflv文件格式分析，可参看[RTMP中FLV流到标准h264、aac的转换](http://www.cnblogs.com/chef/archive/2012/07/18/2597279.html)，该文章写的很清晰。\n\nflv封装格式解析，可参看[视音频数据处理入门：FLV封装格式解析](http://blog.csdn.net/leixiaohua1020/article/details/50535082)，文章图文并貌，很直观。\n\nflv文件封装，可参看[将h.264视频流封装成flv格式文件（一.flv格式）](http://blog.csdn.net/yeyumin89/article/details/7932368)\n，    [将h.264视频流封装成flv格式文件（二.开始动手）](http://blog.csdn.net/yeyumin89/article/details/7932431)\n\n使用rtmp协议发送flv文件，可参看[rtmp协议简单解析以及用其发送h264的flv文件](http://blog.csdn.net/yeyumin89/article/details/8011362)\n\n<!-- more -->\n\n通过以上几篇好文，对flv文件格式，封装flv文件以及通过rtmp协议与流媒体服务器交互就有清晰的认识。\n","source":"_posts/flv-analysis-in-rtmp-live-play.md","raw":"---\ntitle: rtmp直播推流（一）－－flv格式解析与封装\ndate: 2015-11-13 17:35:27\ntags:\n- 音视频处理\n---\n\nflv文件格式分析，可参看[RTMP中FLV流到标准h264、aac的转换](http://www.cnblogs.com/chef/archive/2012/07/18/2597279.html)，该文章写的很清晰。\n\nflv封装格式解析，可参看[视音频数据处理入门：FLV封装格式解析](http://blog.csdn.net/leixiaohua1020/article/details/50535082)，文章图文并貌，很直观。\n\nflv文件封装，可参看[将h.264视频流封装成flv格式文件（一.flv格式）](http://blog.csdn.net/yeyumin89/article/details/7932368)\n，    [将h.264视频流封装成flv格式文件（二.开始动手）](http://blog.csdn.net/yeyumin89/article/details/7932431)\n\n使用rtmp协议发送flv文件，可参看[rtmp协议简单解析以及用其发送h264的flv文件](http://blog.csdn.net/yeyumin89/article/details/8011362)\n\n<!-- more -->\n\n通过以上几篇好文，对flv文件格式，封装flv文件以及通过rtmp协议与流媒体服务器交互就有清晰的认识。\n","slug":"flv-analysis-in-rtmp-live-play","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzrr000sqxepgh1vp6y1","content":"<p>flv文件格式分析，可参看<a href=\"http://www.cnblogs.com/chef/archive/2012/07/18/2597279.html\" target=\"_blank\" rel=\"external\">RTMP中FLV流到标准h264、aac的转换</a>，该文章写的很清晰。</p>\n<p>flv封装格式解析，可参看<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/50535082\" target=\"_blank\" rel=\"external\">视音频数据处理入门：FLV封装格式解析</a>，文章图文并貌，很直观。</p>\n<p>flv文件封装，可参看<a href=\"http://blog.csdn.net/yeyumin89/article/details/7932368\" target=\"_blank\" rel=\"external\">将h.264视频流封装成flv格式文件（一.flv格式）</a><br>，    <a href=\"http://blog.csdn.net/yeyumin89/article/details/7932431\" target=\"_blank\" rel=\"external\">将h.264视频流封装成flv格式文件（二.开始动手）</a></p>\n<p>使用rtmp协议发送flv文件，可参看<a href=\"http://blog.csdn.net/yeyumin89/article/details/8011362\" target=\"_blank\" rel=\"external\">rtmp协议简单解析以及用其发送h264的flv文件</a></p>\n<a id=\"more\"></a>\n<p>通过以上几篇好文，对flv文件格式，封装flv文件以及通过rtmp协议与流媒体服务器交互就有清晰的认识。</p>\n","site":{"data":{}},"excerpt":"<p>flv文件格式分析，可参看<a href=\"http://www.cnblogs.com/chef/archive/2012/07/18/2597279.html\" target=\"_blank\" rel=\"external\">RTMP中FLV流到标准h264、aac的转换</a>，该文章写的很清晰。</p>\n<p>flv封装格式解析，可参看<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/50535082\" target=\"_blank\" rel=\"external\">视音频数据处理入门：FLV封装格式解析</a>，文章图文并貌，很直观。</p>\n<p>flv文件封装，可参看<a href=\"http://blog.csdn.net/yeyumin89/article/details/7932368\" target=\"_blank\" rel=\"external\">将h.264视频流封装成flv格式文件（一.flv格式）</a><br>，    <a href=\"http://blog.csdn.net/yeyumin89/article/details/7932431\" target=\"_blank\" rel=\"external\">将h.264视频流封装成flv格式文件（二.开始动手）</a></p>\n<p>使用rtmp协议发送flv文件，可参看<a href=\"http://blog.csdn.net/yeyumin89/article/details/8011362\" target=\"_blank\" rel=\"external\">rtmp协议简单解析以及用其发送h264的flv文件</a></p>","more":"<p>通过以上几篇好文，对flv文件格式，封装flv文件以及通过rtmp协议与流媒体服务器交互就有清晰的认识。</p>"},{"title":"硕士毕业一年的感受","date":"2015-07-01T03:30:51.000Z","_content":"　　时间过的很快，转眼毕业一年了，去年的今天拿到硕士毕业证和庆祝毕业的场景在脑海中清晰可见。可是，时间就这么过去了。\n\n　　在一个北方的城市，待了七年（2007～2014），自己从奔二的年纪跨越到奔三的年纪，想想觉得时间真的好可怕。在自己渴望成长的年龄段，父母变老了，弟弟妹妹们都已到了读大学的年纪，小外甥都上幼儿园了。现在回忆过去，我的感受是处在最美最纯的场景中的时候，却拼命的渴望摆脱这个单纯的生活，追求复杂而且功利的生活，眼前的美好却不曾珍惜。而今，处在自己曾今刻意追赶的生活中，不过是人生阶段必经的过程，可惜的是以往该放慢脚步体验生活的阶段再也回不去了。\n\n　　深处在一个以学习就是为了找一份好工作，拿到高薪的大环境中，作为学生深受这种氛围的影响，变得唯利是图，变得焦躁不安，变得对未来恐慌，而不把握当下和珍惜当下最美的时光。对过去的追忆无外乎两种，一种是结合现在的处境反思以前的人生阶段的遗憾，一种是回想过去美好的记忆。是甜蜜是懊悔，只有当事人知道，毕竟个人的经历是独一无二的。\n\n<!-- more -->\n\n　　2011年本科毕业的时候，我说我不想家，可是自从读研之后，体验到人生滋味，家就是心灵休憩和疗伤的港湾，开始念家了。人生的每个阶段，都有其明显的特点，当明白这些道理的时候，可是已经从时间的长河中走过来了，想回去却再也回不去，明白又能怎样，最多向比自己小的弟弟妹妹们说，或者充当和下一辈人的经验之谈，但是这有什么用呢，他们不曾经历，听过或许就忘了。\n\n　　现在，对于生活已经不做太多指望，最好的奋斗阶段过去了，奋斗的条件也不在。年龄决定了选择生活的范围。这就是为什么工作几年之后的人，激情不在，平平淡淡的原因。\n\n　　对于在大学期间是否找对象这件事，我在学生期间计划是自己要读博士，很多未知的因素，没有生存能力，还是不谈为好。虽然，现在年纪不小了，有基本生存能力了，自己的心态，以及社会的因素，周围环境的变化，我选择顺其自然。我对自己的认识是，不喜欢强求别人，所谓的死缠烂打只会让自己显得无聊，没什么意思，也最烦这样的场面。\n\n　　硕士毕业前就参加工作了，没有体会到一般学生能在暑假休息一段时间才上班的感觉，现在想来，毕业后的一段时间应该是调整心态，做好规划，休整疲惫身躯的好光阴。\n\n　　过往似云烟，珍惜当下。","source":"_posts/feeling-of-OneYear-after-master-graduation.md","raw":"title: 硕士毕业一年的感受\ndate: 2015-07-01 11:30:51\ntags: 生活\n---\n　　时间过的很快，转眼毕业一年了，去年的今天拿到硕士毕业证和庆祝毕业的场景在脑海中清晰可见。可是，时间就这么过去了。\n\n　　在一个北方的城市，待了七年（2007～2014），自己从奔二的年纪跨越到奔三的年纪，想想觉得时间真的好可怕。在自己渴望成长的年龄段，父母变老了，弟弟妹妹们都已到了读大学的年纪，小外甥都上幼儿园了。现在回忆过去，我的感受是处在最美最纯的场景中的时候，却拼命的渴望摆脱这个单纯的生活，追求复杂而且功利的生活，眼前的美好却不曾珍惜。而今，处在自己曾今刻意追赶的生活中，不过是人生阶段必经的过程，可惜的是以往该放慢脚步体验生活的阶段再也回不去了。\n\n　　深处在一个以学习就是为了找一份好工作，拿到高薪的大环境中，作为学生深受这种氛围的影响，变得唯利是图，变得焦躁不安，变得对未来恐慌，而不把握当下和珍惜当下最美的时光。对过去的追忆无外乎两种，一种是结合现在的处境反思以前的人生阶段的遗憾，一种是回想过去美好的记忆。是甜蜜是懊悔，只有当事人知道，毕竟个人的经历是独一无二的。\n\n<!-- more -->\n\n　　2011年本科毕业的时候，我说我不想家，可是自从读研之后，体验到人生滋味，家就是心灵休憩和疗伤的港湾，开始念家了。人生的每个阶段，都有其明显的特点，当明白这些道理的时候，可是已经从时间的长河中走过来了，想回去却再也回不去，明白又能怎样，最多向比自己小的弟弟妹妹们说，或者充当和下一辈人的经验之谈，但是这有什么用呢，他们不曾经历，听过或许就忘了。\n\n　　现在，对于生活已经不做太多指望，最好的奋斗阶段过去了，奋斗的条件也不在。年龄决定了选择生活的范围。这就是为什么工作几年之后的人，激情不在，平平淡淡的原因。\n\n　　对于在大学期间是否找对象这件事，我在学生期间计划是自己要读博士，很多未知的因素，没有生存能力，还是不谈为好。虽然，现在年纪不小了，有基本生存能力了，自己的心态，以及社会的因素，周围环境的变化，我选择顺其自然。我对自己的认识是，不喜欢强求别人，所谓的死缠烂打只会让自己显得无聊，没什么意思，也最烦这样的场面。\n\n　　硕士毕业前就参加工作了，没有体会到一般学生能在暑假休息一段时间才上班的感觉，现在想来，毕业后的一段时间应该是调整心态，做好规划，休整疲惫身躯的好光阴。\n\n　　过往似云烟，珍惜当下。","slug":"feeling-of-OneYear-after-master-graduation","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzrt000uqxepgdozujbt","content":"<p>　　时间过的很快，转眼毕业一年了，去年的今天拿到硕士毕业证和庆祝毕业的场景在脑海中清晰可见。可是，时间就这么过去了。</p>\n<p>　　在一个北方的城市，待了七年（2007～2014），自己从奔二的年纪跨越到奔三的年纪，想想觉得时间真的好可怕。在自己渴望成长的年龄段，父母变老了，弟弟妹妹们都已到了读大学的年纪，小外甥都上幼儿园了。现在回忆过去，我的感受是处在最美最纯的场景中的时候，却拼命的渴望摆脱这个单纯的生活，追求复杂而且功利的生活，眼前的美好却不曾珍惜。而今，处在自己曾今刻意追赶的生活中，不过是人生阶段必经的过程，可惜的是以往该放慢脚步体验生活的阶段再也回不去了。</p>\n<p>　　深处在一个以学习就是为了找一份好工作，拿到高薪的大环境中，作为学生深受这种氛围的影响，变得唯利是图，变得焦躁不安，变得对未来恐慌，而不把握当下和珍惜当下最美的时光。对过去的追忆无外乎两种，一种是结合现在的处境反思以前的人生阶段的遗憾，一种是回想过去美好的记忆。是甜蜜是懊悔，只有当事人知道，毕竟个人的经历是独一无二的。</p>\n<a id=\"more\"></a>\n<p>　　2011年本科毕业的时候，我说我不想家，可是自从读研之后，体验到人生滋味，家就是心灵休憩和疗伤的港湾，开始念家了。人生的每个阶段，都有其明显的特点，当明白这些道理的时候，可是已经从时间的长河中走过来了，想回去却再也回不去，明白又能怎样，最多向比自己小的弟弟妹妹们说，或者充当和下一辈人的经验之谈，但是这有什么用呢，他们不曾经历，听过或许就忘了。</p>\n<p>　　现在，对于生活已经不做太多指望，最好的奋斗阶段过去了，奋斗的条件也不在。年龄决定了选择生活的范围。这就是为什么工作几年之后的人，激情不在，平平淡淡的原因。</p>\n<p>　　对于在大学期间是否找对象这件事，我在学生期间计划是自己要读博士，很多未知的因素，没有生存能力，还是不谈为好。虽然，现在年纪不小了，有基本生存能力了，自己的心态，以及社会的因素，周围环境的变化，我选择顺其自然。我对自己的认识是，不喜欢强求别人，所谓的死缠烂打只会让自己显得无聊，没什么意思，也最烦这样的场面。</p>\n<p>　　硕士毕业前就参加工作了，没有体会到一般学生能在暑假休息一段时间才上班的感觉，现在想来，毕业后的一段时间应该是调整心态，做好规划，休整疲惫身躯的好光阴。</p>\n<p>　　过往似云烟，珍惜当下。</p>\n","site":{"data":{}},"excerpt":"<p>　　时间过的很快，转眼毕业一年了，去年的今天拿到硕士毕业证和庆祝毕业的场景在脑海中清晰可见。可是，时间就这么过去了。</p>\n<p>　　在一个北方的城市，待了七年（2007～2014），自己从奔二的年纪跨越到奔三的年纪，想想觉得时间真的好可怕。在自己渴望成长的年龄段，父母变老了，弟弟妹妹们都已到了读大学的年纪，小外甥都上幼儿园了。现在回忆过去，我的感受是处在最美最纯的场景中的时候，却拼命的渴望摆脱这个单纯的生活，追求复杂而且功利的生活，眼前的美好却不曾珍惜。而今，处在自己曾今刻意追赶的生活中，不过是人生阶段必经的过程，可惜的是以往该放慢脚步体验生活的阶段再也回不去了。</p>\n<p>　　深处在一个以学习就是为了找一份好工作，拿到高薪的大环境中，作为学生深受这种氛围的影响，变得唯利是图，变得焦躁不安，变得对未来恐慌，而不把握当下和珍惜当下最美的时光。对过去的追忆无外乎两种，一种是结合现在的处境反思以前的人生阶段的遗憾，一种是回想过去美好的记忆。是甜蜜是懊悔，只有当事人知道，毕竟个人的经历是独一无二的。</p>","more":"<p>　　2011年本科毕业的时候，我说我不想家，可是自从读研之后，体验到人生滋味，家就是心灵休憩和疗伤的港湾，开始念家了。人生的每个阶段，都有其明显的特点，当明白这些道理的时候，可是已经从时间的长河中走过来了，想回去却再也回不去，明白又能怎样，最多向比自己小的弟弟妹妹们说，或者充当和下一辈人的经验之谈，但是这有什么用呢，他们不曾经历，听过或许就忘了。</p>\n<p>　　现在，对于生活已经不做太多指望，最好的奋斗阶段过去了，奋斗的条件也不在。年龄决定了选择生活的范围。这就是为什么工作几年之后的人，激情不在，平平淡淡的原因。</p>\n<p>　　对于在大学期间是否找对象这件事，我在学生期间计划是自己要读博士，很多未知的因素，没有生存能力，还是不谈为好。虽然，现在年纪不小了，有基本生存能力了，自己的心态，以及社会的因素，周围环境的变化，我选择顺其自然。我对自己的认识是，不喜欢强求别人，所谓的死缠烂打只会让自己显得无聊，没什么意思，也最烦这样的场面。</p>\n<p>　　硕士毕业前就参加工作了，没有体会到一般学生能在暑假休息一段时间才上班的感觉，现在想来，毕业后的一段时间应该是调整心态，做好规划，休整疲惫身躯的好光阴。</p>\n<p>　　过往似云烟，珍惜当下。</p>"},{"title":"音视频编解码中常用的编译脚本","date":"2015-10-29T02:21:47.000Z","_content":"### FFmpeg\niOS：[https://github.com/kewlbear/FFmpeg-iOS-build-script](https://github.com/kewlbear/FFmpeg-iOS-build-script)\n\n### x264\niOS：[https://github.com/kewlbear/x264-ios](https://github.com/kewlbear/x264-ios)\n\n### fdk-aac\niOS：[https://github.com/verybigdog/fdk-aac-ios](https://github.com/verybigdog/fdk-aac-ios)\n\n或 [https://github.com/kewlbear/fdk-aac-build-script-for-iOS](https://github.com/kewlbear/fdk-aac-build-script-for-iOS)，不支持iOS arm64，但是可以借鉴\n\n### librtmp\niOS：[https://github.com/saiten/ios-librtmp](https://github.com/saiten/ios-librtmp)\n\n### OpenSSL\niOS：[https://github.com/x2on/OpenSSL-for-iPhone](https://github.com/x2on/OpenSSL-for-iPhone)\n\n<!-- more -->\n\n\n","source":"_posts/frequently-used-audio-and-video-codec-script.md","raw":"title: 音视频编解码中常用的编译脚本\ndate: 2015-10-29 10:21:47\ntags:\n- 音视频处理\n---\n### FFmpeg\niOS：[https://github.com/kewlbear/FFmpeg-iOS-build-script](https://github.com/kewlbear/FFmpeg-iOS-build-script)\n\n### x264\niOS：[https://github.com/kewlbear/x264-ios](https://github.com/kewlbear/x264-ios)\n\n### fdk-aac\niOS：[https://github.com/verybigdog/fdk-aac-ios](https://github.com/verybigdog/fdk-aac-ios)\n\n或 [https://github.com/kewlbear/fdk-aac-build-script-for-iOS](https://github.com/kewlbear/fdk-aac-build-script-for-iOS)，不支持iOS arm64，但是可以借鉴\n\n### librtmp\niOS：[https://github.com/saiten/ios-librtmp](https://github.com/saiten/ios-librtmp)\n\n### OpenSSL\niOS：[https://github.com/x2on/OpenSSL-for-iPhone](https://github.com/x2on/OpenSSL-for-iPhone)\n\n<!-- more -->\n\n\n","slug":"frequently-used-audio-and-video-codec-script","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzru000xqxepsvdaakls","content":"<h3 id=\"FFmpeg\"><a href=\"#FFmpeg\" class=\"headerlink\" title=\"FFmpeg\"></a>FFmpeg</h3><p>iOS：<a href=\"https://github.com/kewlbear/FFmpeg-iOS-build-script\" target=\"_blank\" rel=\"external\">https://github.com/kewlbear/FFmpeg-iOS-build-script</a></p>\n<h3 id=\"x264\"><a href=\"#x264\" class=\"headerlink\" title=\"x264\"></a>x264</h3><p>iOS：<a href=\"https://github.com/kewlbear/x264-ios\" target=\"_blank\" rel=\"external\">https://github.com/kewlbear/x264-ios</a></p>\n<h3 id=\"fdk-aac\"><a href=\"#fdk-aac\" class=\"headerlink\" title=\"fdk-aac\"></a>fdk-aac</h3><p>iOS：<a href=\"https://github.com/verybigdog/fdk-aac-ios\" target=\"_blank\" rel=\"external\">https://github.com/verybigdog/fdk-aac-ios</a></p>\n<p>或 <a href=\"https://github.com/kewlbear/fdk-aac-build-script-for-iOS\" target=\"_blank\" rel=\"external\">https://github.com/kewlbear/fdk-aac-build-script-for-iOS</a>，不支持iOS arm64，但是可以借鉴</p>\n<h3 id=\"librtmp\"><a href=\"#librtmp\" class=\"headerlink\" title=\"librtmp\"></a>librtmp</h3><p>iOS：<a href=\"https://github.com/saiten/ios-librtmp\" target=\"_blank\" rel=\"external\">https://github.com/saiten/ios-librtmp</a></p>\n<h3 id=\"OpenSSL\"><a href=\"#OpenSSL\" class=\"headerlink\" title=\"OpenSSL\"></a>OpenSSL</h3><p>iOS：<a href=\"https://github.com/x2on/OpenSSL-for-iPhone\" target=\"_blank\" rel=\"external\">https://github.com/x2on/OpenSSL-for-iPhone</a></p>\n<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"<h3 id=\"FFmpeg\"><a href=\"#FFmpeg\" class=\"headerlink\" title=\"FFmpeg\"></a>FFmpeg</h3><p>iOS：<a href=\"https://github.com/kewlbear/FFmpeg-iOS-build-script\" target=\"_blank\" rel=\"external\">https://github.com/kewlbear/FFmpeg-iOS-build-script</a></p>\n<h3 id=\"x264\"><a href=\"#x264\" class=\"headerlink\" title=\"x264\"></a>x264</h3><p>iOS：<a href=\"https://github.com/kewlbear/x264-ios\" target=\"_blank\" rel=\"external\">https://github.com/kewlbear/x264-ios</a></p>\n<h3 id=\"fdk-aac\"><a href=\"#fdk-aac\" class=\"headerlink\" title=\"fdk-aac\"></a>fdk-aac</h3><p>iOS：<a href=\"https://github.com/verybigdog/fdk-aac-ios\" target=\"_blank\" rel=\"external\">https://github.com/verybigdog/fdk-aac-ios</a></p>\n<p>或 <a href=\"https://github.com/kewlbear/fdk-aac-build-script-for-iOS\" target=\"_blank\" rel=\"external\">https://github.com/kewlbear/fdk-aac-build-script-for-iOS</a>，不支持iOS arm64，但是可以借鉴</p>\n<h3 id=\"librtmp\"><a href=\"#librtmp\" class=\"headerlink\" title=\"librtmp\"></a>librtmp</h3><p>iOS：<a href=\"https://github.com/saiten/ios-librtmp\" target=\"_blank\" rel=\"external\">https://github.com/saiten/ios-librtmp</a></p>\n<h3 id=\"OpenSSL\"><a href=\"#OpenSSL\" class=\"headerlink\" title=\"OpenSSL\"></a>OpenSSL</h3><p>iOS：<a href=\"https://github.com/x2on/OpenSSL-for-iPhone\" target=\"_blank\" rel=\"external\">https://github.com/x2on/OpenSSL-for-iPhone</a></p>","more":""},{"title":"启程去上海","date":"2016-08-05T06:40:40.000Z","_content":"\n　　\t今天办完了离职手续。先去上海待一段时间。对于上海之行，我还是很期待的。 \n\n　　\t路线安排是深圳北站到上海虹桥站。我在广州待过近3个月，深圳待过2年多，北京还是2011年3月去过一次，上海我没有去过。不到北上广深看一圈，不足以了解现今的互联网圈。对于此次行程，我有点兴奋。世界那么大，我想出去看看。\n\n<!-- more -->\n　　\t真正到了那里我会有什么样的感受，见后续博文。\n","source":"_posts/go-to-Shanghai.md","raw":"---\ntitle: 启程去上海\ndate: 2016-08-05 14:40:40\ntags:\n- 工作\n- 生活\n---\n\n　　\t今天办完了离职手续。先去上海待一段时间。对于上海之行，我还是很期待的。 \n\n　　\t路线安排是深圳北站到上海虹桥站。我在广州待过近3个月，深圳待过2年多，北京还是2011年3月去过一次，上海我没有去过。不到北上广深看一圈，不足以了解现今的互联网圈。对于此次行程，我有点兴奋。世界那么大，我想出去看看。\n\n<!-- more -->\n　　\t真正到了那里我会有什么样的感受，见后续博文。\n","slug":"go-to-Shanghai","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzrv000zqxepa08tkaf4","content":"<p>　　    今天办完了离职手续。先去上海待一段时间。对于上海之行，我还是很期待的。 </p>\n<p>　　    路线安排是深圳北站到上海虹桥站。我在广州待过近3个月，深圳待过2年多，北京还是2011年3月去过一次，上海我没有去过。不到北上广深看一圈，不足以了解现今的互联网圈。对于此次行程，我有点兴奋。世界那么大，我想出去看看。</p>\n<a id=\"more\"></a>\n<p>　　    真正到了那里我会有什么样的感受，见后续博文。</p>\n","site":{"data":{}},"excerpt":"<p>　　    今天办完了离职手续。先去上海待一段时间。对于上海之行，我还是很期待的。 </p>\n<p>　　    路线安排是深圳北站到上海虹桥站。我在广州待过近3个月，深圳待过2年多，北京还是2011年3月去过一次，上海我没有去过。不到北上广深看一圈，不足以了解现今的互联网圈。对于此次行程，我有点兴奋。世界那么大，我想出去看看。</p>","more":"<p>　　    真正到了那里我会有什么样的感受，见后续博文。</p>"},{"title":"帮助平台部解决重庆项目的bug","date":"2015-06-15T07:16:31.000Z","_content":"\n　　属于网络研发部的我，职位是播放器开发工程师，主要工作是播放器库的开发与维护。今天，收到老大（网络研发部经理）的工作安排，帮助平台部iOS工程师做重庆的项目，为期十五天左右。\n\n　　工作就是修项目的bug，好比接手烂尾工程紧急修复在规定的时间段完工。百分之九十的程序员，是不愿意看别人写的代码的，因为代码不规矩，看一句代码要吐槽N句。\n\n<!-- more -->\n\n　　既然接手了，就要完成工作，花了点时间看了质量部测试技术提交上来的bug反馈单，带着些疑问又与测试技术沟通了下，确定解决这些问题一个星期内可以完成。但是经过我亲自去测试这个项目的时候，bug远不止反馈单上的那么点，只能说写这个项目的人太渣了。\n\n　　维修师傅，is me!\n\n","source":"_posts/help-platform-department-to-solve-the-bug-of-chongqing-project.md","raw":"title: 帮助平台部解决重庆项目的bug\ndate: 2015-06-15 15:16:31\ntags: 工作\n---\n\n　　属于网络研发部的我，职位是播放器开发工程师，主要工作是播放器库的开发与维护。今天，收到老大（网络研发部经理）的工作安排，帮助平台部iOS工程师做重庆的项目，为期十五天左右。\n\n　　工作就是修项目的bug，好比接手烂尾工程紧急修复在规定的时间段完工。百分之九十的程序员，是不愿意看别人写的代码的，因为代码不规矩，看一句代码要吐槽N句。\n\n<!-- more -->\n\n　　既然接手了，就要完成工作，花了点时间看了质量部测试技术提交上来的bug反馈单，带着些疑问又与测试技术沟通了下，确定解决这些问题一个星期内可以完成。但是经过我亲自去测试这个项目的时候，bug远不止反馈单上的那么点，只能说写这个项目的人太渣了。\n\n　　维修师傅，is me!\n\n","slug":"help-platform-department-to-solve-the-bug-of-chongqing-project","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzrx0012qxepkv4n3ppe","content":"<p>　　属于网络研发部的我，职位是播放器开发工程师，主要工作是播放器库的开发与维护。今天，收到老大（网络研发部经理）的工作安排，帮助平台部iOS工程师做重庆的项目，为期十五天左右。</p>\n<p>　　工作就是修项目的bug，好比接手烂尾工程紧急修复在规定的时间段完工。百分之九十的程序员，是不愿意看别人写的代码的，因为代码不规矩，看一句代码要吐槽N句。</p>\n<a id=\"more\"></a>\n<p>　　既然接手了，就要完成工作，花了点时间看了质量部测试技术提交上来的bug反馈单，带着些疑问又与测试技术沟通了下，确定解决这些问题一个星期内可以完成。但是经过我亲自去测试这个项目的时候，bug远不止反馈单上的那么点，只能说写这个项目的人太渣了。</p>\n<p>　　维修师傅，is me!</p>\n","site":{"data":{}},"excerpt":"<p>　　属于网络研发部的我，职位是播放器开发工程师，主要工作是播放器库的开发与维护。今天，收到老大（网络研发部经理）的工作安排，帮助平台部iOS工程师做重庆的项目，为期十五天左右。</p>\n<p>　　工作就是修项目的bug，好比接手烂尾工程紧急修复在规定的时间段完工。百分之九十的程序员，是不愿意看别人写的代码的，因为代码不规矩，看一句代码要吐槽N句。</p>","more":"<p>　　既然接手了，就要完成工作，花了点时间看了质量部测试技术提交上来的bug反馈单，带着些疑问又与测试技术沟通了下，确定解决这些问题一个星期内可以完成。但是经过我亲自去测试这个项目的时候，bug远不止反馈单上的那么点，只能说写这个项目的人太渣了。</p>\n<p>　　维修师傅，is me!</p>"},{"title":"如何去爱","date":"2016-10-12T12:45:05.000Z","_content":"\n　　\t如何去爱？关于这个问题，我想说的是到了一定年纪才会懂得。爱，不是一时情感的寄托，一时的喜好。看着小年轻们，经常上演死去活来的剧情，我内心深处想表达的是这些所谓的爱只是一时的爱慕，只是以后回忆青春年华的一个所谓的美景而已。年纪轻轻，没有太多的经历，自以为是男欢女爱，到底有多少能修到甜蜜与和谐的生活。到了一定年龄，经历过社会的锤炼，对男女之情才会有成熟的看法，对家庭的观念才有全局的认识。\n\n　　\t古有三十而立，四十不惑之说，真的很佩服古人的总结。到三十的年纪，会多角度去看待事物，自身的角度，换位思考的角度。\n\n<!-- more -->\n　　\t在我还在读书生涯的时候，有人问我为什么不交女朋友。对于这个问题，当时考虑的是没有自我生存能力，未来充满太多不可预期的因素，怎么能轻易拉人进坑呢。\n\n　　\t研究生毕业后，一直为了体现自己所学的价值，时间花在了学习和工作上。顿首回看，时间过的好快，两年多就这么过去了。脑中留下的印象就是加班，学习，加班，学习的场景。至于如何去哄女孩子，不会啊。连个对象都没有，怎么操作，哈哈。\n　　\t\n　　\t随着年龄的增长，更加懂得责任，懂得对未来的规划。遇见对的人，一切都是值得期待的，也是值得努力的。\n　　\t\n`2016年10月12号 写于北京市太阳宫中路12号 夜`\n　　\t\n　　\t\n\n\n\n","source":"_posts/how-to-love.md","raw":"---\ntitle: 如何去爱\ndate: 2016-10-12 20:45:05\ntags:\n- 生活\n---\n\n　　\t如何去爱？关于这个问题，我想说的是到了一定年纪才会懂得。爱，不是一时情感的寄托，一时的喜好。看着小年轻们，经常上演死去活来的剧情，我内心深处想表达的是这些所谓的爱只是一时的爱慕，只是以后回忆青春年华的一个所谓的美景而已。年纪轻轻，没有太多的经历，自以为是男欢女爱，到底有多少能修到甜蜜与和谐的生活。到了一定年龄，经历过社会的锤炼，对男女之情才会有成熟的看法，对家庭的观念才有全局的认识。\n\n　　\t古有三十而立，四十不惑之说，真的很佩服古人的总结。到三十的年纪，会多角度去看待事物，自身的角度，换位思考的角度。\n\n<!-- more -->\n　　\t在我还在读书生涯的时候，有人问我为什么不交女朋友。对于这个问题，当时考虑的是没有自我生存能力，未来充满太多不可预期的因素，怎么能轻易拉人进坑呢。\n\n　　\t研究生毕业后，一直为了体现自己所学的价值，时间花在了学习和工作上。顿首回看，时间过的好快，两年多就这么过去了。脑中留下的印象就是加班，学习，加班，学习的场景。至于如何去哄女孩子，不会啊。连个对象都没有，怎么操作，哈哈。\n　　\t\n　　\t随着年龄的增长，更加懂得责任，懂得对未来的规划。遇见对的人，一切都是值得期待的，也是值得努力的。\n　　\t\n`2016年10月12号 写于北京市太阳宫中路12号 夜`\n　　\t\n　　\t\n\n\n\n","slug":"how-to-love","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzry0014qxepcpl4xf22","content":"<p>　　    如何去爱？关于这个问题，我想说的是到了一定年纪才会懂得。爱，不是一时情感的寄托，一时的喜好。看着小年轻们，经常上演死去活来的剧情，我内心深处想表达的是这些所谓的爱只是一时的爱慕，只是以后回忆青春年华的一个所谓的美景而已。年纪轻轻，没有太多的经历，自以为是男欢女爱，到底有多少能修到甜蜜与和谐的生活。到了一定年龄，经历过社会的锤炼，对男女之情才会有成熟的看法，对家庭的观念才有全局的认识。</p>\n<p>　　    古有三十而立，四十不惑之说，真的很佩服古人的总结。到三十的年纪，会多角度去看待事物，自身的角度，换位思考的角度。</p>\n<a id=\"more\"></a>\n<p>　　    在我还在读书生涯的时候，有人问我为什么不交女朋友。对于这个问题，当时考虑的是没有自我生存能力，未来充满太多不可预期的因素，怎么能轻易拉人进坑呢。</p>\n<p>　　    研究生毕业后，一直为了体现自己所学的价值，时间花在了学习和工作上。顿首回看，时间过的好快，两年多就这么过去了。脑中留下的印象就是加班，学习，加班，学习的场景。至于如何去哄女孩子，不会啊。连个对象都没有，怎么操作，哈哈。<br>　　<br>　　    随着年龄的增长，更加懂得责任，懂得对未来的规划。遇见对的人，一切都是值得期待的，也是值得努力的。<br>　　<br><code>2016年10月12号 写于北京市太阳宫中路12号 夜</code>\n　　    \n　　    </p>\n","site":{"data":{}},"excerpt":"<p>　　    如何去爱？关于这个问题，我想说的是到了一定年纪才会懂得。爱，不是一时情感的寄托，一时的喜好。看着小年轻们，经常上演死去活来的剧情，我内心深处想表达的是这些所谓的爱只是一时的爱慕，只是以后回忆青春年华的一个所谓的美景而已。年纪轻轻，没有太多的经历，自以为是男欢女爱，到底有多少能修到甜蜜与和谐的生活。到了一定年龄，经历过社会的锤炼，对男女之情才会有成熟的看法，对家庭的观念才有全局的认识。</p>\n<p>　　    古有三十而立，四十不惑之说，真的很佩服古人的总结。到三十的年纪，会多角度去看待事物，自身的角度，换位思考的角度。</p>","more":"<p>　　    在我还在读书生涯的时候，有人问我为什么不交女朋友。对于这个问题，当时考虑的是没有自我生存能力，未来充满太多不可预期的因素，怎么能轻易拉人进坑呢。</p>\n<p>　　    研究生毕业后，一直为了体现自己所学的价值，时间花在了学习和工作上。顿首回看，时间过的好快，两年多就这么过去了。脑中留下的印象就是加班，学习，加班，学习的场景。至于如何去哄女孩子，不会啊。连个对象都没有，怎么操作，哈哈。<br>　　<br>　　    随着年龄的增长，更加懂得责任，懂得对未来的规划。遇见对的人，一切都是值得期待的，也是值得努力的。<br>　　<br><code>2016年10月12号 写于北京市太阳宫中路12号 夜</code>\n　　    \n　　    </p>"},{"title":"在iOS上硬编码推流－摄像头数据采集（一）","date":"2016-03-17T07:55:53.000Z","_content":"\n该文的内容在我之前的文章中已经实现过，但是为了结构清晰起见，本文将相机控制和采集视频数据功能封装为单独的库。\n\niOS上使用AVFoundation.framework框架来调用系统相机并获取视频数据。视频数据可以根据设定的参数，可采集到RGB或YUV数据，一般使用的是GBRA32，420v，420f，下面演示相机的调用和视频数据的获取。\n\na)引入框架的头文件`#import <AVFoundation/AVFoundation.h>`\n\nb)调用的类遵守协议`AVCaptureVideoDataOutputSampleBufferDelegate`\n\n<!-- more -->\n\nc)声明变量\n\n\tAVCaptureSession            *captureSession;\n\tAVCaptureDevice             *captureDevice;\n\tAVCaptureDeviceInput        *captureDeviceInput;\n\tAVCaptureVideoDataOutput    *captureVdieoDataOutput;\n\nd)实现\n\ne)demo地址 [https://github.com/depthlove/STMCamera](https://github.com/depthlove/STMCamera)\n\n\n\n\n\n\n","source":"_posts/hw-encode-and-transfer-in-ios-platform-camera-part1.md","raw":"---\ntitle: 在iOS上硬编码推流－摄像头数据采集（一）\ndate: 2016-03-17 15:55:53\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n\n该文的内容在我之前的文章中已经实现过，但是为了结构清晰起见，本文将相机控制和采集视频数据功能封装为单独的库。\n\niOS上使用AVFoundation.framework框架来调用系统相机并获取视频数据。视频数据可以根据设定的参数，可采集到RGB或YUV数据，一般使用的是GBRA32，420v，420f，下面演示相机的调用和视频数据的获取。\n\na)引入框架的头文件`#import <AVFoundation/AVFoundation.h>`\n\nb)调用的类遵守协议`AVCaptureVideoDataOutputSampleBufferDelegate`\n\n<!-- more -->\n\nc)声明变量\n\n\tAVCaptureSession            *captureSession;\n\tAVCaptureDevice             *captureDevice;\n\tAVCaptureDeviceInput        *captureDeviceInput;\n\tAVCaptureVideoDataOutput    *captureVdieoDataOutput;\n\nd)实现\n\ne)demo地址 [https://github.com/depthlove/STMCamera](https://github.com/depthlove/STMCamera)\n\n\n\n\n\n\n","slug":"hw-encode-and-transfer-in-ios-platform-camera-part1","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzs10017qxepby01kp97","content":"<p>该文的内容在我之前的文章中已经实现过，但是为了结构清晰起见，本文将相机控制和采集视频数据功能封装为单独的库。</p>\n<p>iOS上使用AVFoundation.framework框架来调用系统相机并获取视频数据。视频数据可以根据设定的参数，可采集到RGB或YUV数据，一般使用的是GBRA32，420v，420f，下面演示相机的调用和视频数据的获取。</p>\n<p>a)引入框架的头文件<code>#import &lt;AVFoundation/AVFoundation.h&gt;</code></p>\n<p>b)调用的类遵守协议<code>AVCaptureVideoDataOutputSampleBufferDelegate</code></p>\n<a id=\"more\"></a>\n<p>c)声明变量</p>\n<pre><code>AVCaptureSession            *captureSession;\nAVCaptureDevice             *captureDevice;\nAVCaptureDeviceInput        *captureDeviceInput;\nAVCaptureVideoDataOutput    *captureVdieoDataOutput;\n</code></pre><p>d)实现</p>\n<p>e)demo地址 <a href=\"https://github.com/depthlove/STMCamera\" target=\"_blank\" rel=\"external\">https://github.com/depthlove/STMCamera</a></p>\n","site":{"data":{}},"excerpt":"<p>该文的内容在我之前的文章中已经实现过，但是为了结构清晰起见，本文将相机控制和采集视频数据功能封装为单独的库。</p>\n<p>iOS上使用AVFoundation.framework框架来调用系统相机并获取视频数据。视频数据可以根据设定的参数，可采集到RGB或YUV数据，一般使用的是GBRA32，420v，420f，下面演示相机的调用和视频数据的获取。</p>\n<p>a)引入框架的头文件<code>#import &lt;AVFoundation/AVFoundation.h&gt;</code></p>\n<p>b)调用的类遵守协议<code>AVCaptureVideoDataOutputSampleBufferDelegate</code></p>","more":"<p>c)声明变量</p>\n<pre><code>AVCaptureSession            *captureSession;\nAVCaptureDevice             *captureDevice;\nAVCaptureDeviceInput        *captureDeviceInput;\nAVCaptureVideoDataOutput    *captureVdieoDataOutput;\n</code></pre><p>d)实现</p>\n<p>e)demo地址 <a href=\"https://github.com/depthlove/STMCamera\" target=\"_blank\" rel=\"external\">https://github.com/depthlove/STMCamera</a></p>"},{"title":"在iOS上硬编码推流－编码aac（六）","date":"2016-03-23T10:03:43.000Z","_content":"","source":"_posts/hw-encode-and-transfer-in-ios-platform-encode-aac-part6.md","raw":"---\ntitle: 在iOS上硬编码推流－编码aac（六）\ndate: 2016-03-23 18:03:43\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n","slug":"hw-encode-and-transfer-in-ios-platform-encode-aac-part6","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzs20019qxepknxis510","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"在iOS上硬编码推流－图像融合（二）","date":"2016-03-18T06:52:50.000Z","_content":"\n采用UIGraphics将两幅图绘制到同一个画布上输出，达到图像融合的简单效果。\n\n<!-- more -->\n\n```\n    UIImage *supermanImage = [UIImage imageNamed:@\"superman.png\"];\n    UIImage *moneyImage = [UIImage imageNamed:@\"money.png\"];\n    \n    CGSize supermanSize = [supermanImage size];\n    CGSize moneySize = [moneyImage size];\n    \n//    NSLog(@\"s : %f,%f \\n m : %f,%f\", supermanSize.width, supermanSize.height, moneySize.width, moneySize.height);\n    \n    UIGraphicsBeginImageContext(supermanSize);\n    \n    [supermanImage drawInRect:CGRectMake(0, 0, supermanSize.width, supermanSize.height)];\n    [moneyImage drawInRect:CGRectMake(0, 0, moneySize.width, moneySize.height)];\n    \n    UIImage *mergeImage = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n    \n    mergeImageView = [[UIImageView alloc] init];\n    mergeImageView.image = mergeImage;\n    mergeImageView.frame = self.view.bounds;\n    [self.view addSubview:mergeImageView];\n```\n\ndemo地址：[https://github.com/depthlove/STMImageMerging](https://github.com/depthlove/STMImageMerging)\n","source":"_posts/hw-encode-and-transfer-in-ios-platform-image-merging-part2.md","raw":"---\ntitle: 在iOS上硬编码推流－图像融合（二）\ndate: 2016-03-18 14:52:50\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n\n采用UIGraphics将两幅图绘制到同一个画布上输出，达到图像融合的简单效果。\n\n<!-- more -->\n\n```\n    UIImage *supermanImage = [UIImage imageNamed:@\"superman.png\"];\n    UIImage *moneyImage = [UIImage imageNamed:@\"money.png\"];\n    \n    CGSize supermanSize = [supermanImage size];\n    CGSize moneySize = [moneyImage size];\n    \n//    NSLog(@\"s : %f,%f \\n m : %f,%f\", supermanSize.width, supermanSize.height, moneySize.width, moneySize.height);\n    \n    UIGraphicsBeginImageContext(supermanSize);\n    \n    [supermanImage drawInRect:CGRectMake(0, 0, supermanSize.width, supermanSize.height)];\n    [moneyImage drawInRect:CGRectMake(0, 0, moneySize.width, moneySize.height)];\n    \n    UIImage *mergeImage = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n    \n    mergeImageView = [[UIImageView alloc] init];\n    mergeImageView.image = mergeImage;\n    mergeImageView.frame = self.view.bounds;\n    [self.view addSubview:mergeImageView];\n```\n\ndemo地址：[https://github.com/depthlove/STMImageMerging](https://github.com/depthlove/STMImageMerging)\n","slug":"hw-encode-and-transfer-in-ios-platform-image-merging-part2","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzs4001cqxep2bmhvoox","content":"<p>采用UIGraphics将两幅图绘制到同一个画布上输出，达到图像融合的简单效果。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">    <span class=\"built_in\">UIImage</span> *supermanImage = [<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"superman.png\"</span>];</div><div class=\"line\">    <span class=\"built_in\">UIImage</span> *moneyImage = [<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"money.png\"</span>];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"built_in\">CGSize</span> supermanSize = [supermanImage size];</div><div class=\"line\">    <span class=\"built_in\">CGSize</span> moneySize = [moneyImage size];</div><div class=\"line\">    </div><div class=\"line\"><span class=\"comment\">//    NSLog(@\"s : %f,%f \\n m : %f,%f\", supermanSize.width, supermanSize.height, moneySize.width, moneySize.height);</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"built_in\">UIGraphicsBeginImageContext</span>(supermanSize);</div><div class=\"line\">    </div><div class=\"line\">    [supermanImage drawInRect:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, supermanSize.width, supermanSize.height)];</div><div class=\"line\">    [moneyImage drawInRect:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, moneySize.width, moneySize.height)];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"built_in\">UIImage</span> *mergeImage = <span class=\"built_in\">UIGraphicsGetImageFromCurrentImageContext</span>();</div><div class=\"line\">    <span class=\"built_in\">UIGraphicsEndImageContext</span>();</div><div class=\"line\">    </div><div class=\"line\">    mergeImageView = [[<span class=\"built_in\">UIImageView</span> alloc] init];</div><div class=\"line\">    mergeImageView.image = mergeImage;</div><div class=\"line\">    mergeImageView.frame = <span class=\"keyword\">self</span>.view.bounds;</div><div class=\"line\">    [<span class=\"keyword\">self</span>.view addSubview:mergeImageView];</div></pre></td></tr></table></figure>\n<p>demo地址：<a href=\"https://github.com/depthlove/STMImageMerging\" target=\"_blank\" rel=\"external\">https://github.com/depthlove/STMImageMerging</a></p>\n","site":{"data":{}},"excerpt":"<p>采用UIGraphics将两幅图绘制到同一个画布上输出，达到图像融合的简单效果。</p>","more":"<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">    <span class=\"built_in\">UIImage</span> *supermanImage = [<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"superman.png\"</span>];</div><div class=\"line\">    <span class=\"built_in\">UIImage</span> *moneyImage = [<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"money.png\"</span>];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"built_in\">CGSize</span> supermanSize = [supermanImage size];</div><div class=\"line\">    <span class=\"built_in\">CGSize</span> moneySize = [moneyImage size];</div><div class=\"line\">    </div><div class=\"line\"><span class=\"comment\">//    NSLog(@\"s : %f,%f \\n m : %f,%f\", supermanSize.width, supermanSize.height, moneySize.width, moneySize.height);</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"built_in\">UIGraphicsBeginImageContext</span>(supermanSize);</div><div class=\"line\">    </div><div class=\"line\">    [supermanImage drawInRect:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, supermanSize.width, supermanSize.height)];</div><div class=\"line\">    [moneyImage drawInRect:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, moneySize.width, moneySize.height)];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"built_in\">UIImage</span> *mergeImage = <span class=\"built_in\">UIGraphicsGetImageFromCurrentImageContext</span>();</div><div class=\"line\">    <span class=\"built_in\">UIGraphicsEndImageContext</span>();</div><div class=\"line\">    </div><div class=\"line\">    mergeImageView = [[<span class=\"built_in\">UIImageView</span> alloc] init];</div><div class=\"line\">    mergeImageView.image = mergeImage;</div><div class=\"line\">    mergeImageView.frame = <span class=\"keyword\">self</span>.view.bounds;</div><div class=\"line\">    [<span class=\"keyword\">self</span>.view addSubview:mergeImageView];</div></pre></td></tr></table></figure>\n<p>demo地址：<a href=\"https://github.com/depthlove/STMImageMerging\" target=\"_blank\" rel=\"external\">https://github.com/depthlove/STMImageMerging</a></p>"},{"title":"在iOS上硬编码推流－麦克风数据采集（五）","date":"2016-03-22T02:53:23.000Z","_content":"","source":"_posts/hw-encode-and-transfer-in-ios-platform-mic-part5.md","raw":"---\ntitle: 在iOS上硬编码推流－麦克风数据采集（五）\ndate: 2016-03-22 10:53:23\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n","slug":"hw-encode-and-transfer-in-ios-platform-mic-part5","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzs9001eqxepwc2e37qh","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"在iOS上硬编码推流－实时图像滤镜（三）","date":"2016-03-19T10:09:09.000Z","_content":"\n","source":"_posts/hw-encode-and-transfer-in-ios-platform-real-time-image-filter-part3.md","raw":"---\ntitle: 在iOS上硬编码推流－实时图像滤镜（三）\ndate: 2016-03-19 18:09:09\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n\n","slug":"hw-encode-and-transfer-in-ios-platform-real-time-image-filter-part3","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzse001gqxepz8uk702y","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"在iOS上硬编码推流－硬编码h264（四）","date":"2016-03-20T11:32:23.000Z","_content":"","source":"_posts/hw-encode-and-transfer-in-ios-platform-videotoolbox-encode-h264-part4.md","raw":"---\ntitle: 在iOS上硬编码推流－硬编码h264（四）\ndate: 2016-03-20 19:32:23\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n","slug":"hw-encode-and-transfer-in-ios-platform-videotoolbox-encode-h264-part4","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzsj001iqxeplwx5urk4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"iOS开发需要掌握的知识点","date":"2015-10-29T07:35:49.000Z","_content":"任何一个方向，都需要基本功扎实。软件开发领域，数据结构与算法，操作系统，网络协议（tcp/ip协议族）是立足的基础。\n\n下面列举iOS开发需要掌握的知识点：\n\n<!-- more -->\n\n## 一、数据结构与算法\n### （一）数据结构\n#### 1. 链表\n\n#### 2. 队列\n\n#### 3. 树（二叉树）\n\n#### 4. 哈希表（即散列表）\n\n\n### （二）算法\n#### 1. 查找算法\n\n#### 2. 排序算法\n\n\n## 二、操作系统\n### （一）缓存\n\n### （二）分页\n\n### （三）生产者与消费者\n\n\n## 三、网络协议（tcp/ip协议族）\n### （一）http协议（http/https）\n\n### （二）tcp协议\n\n### （三）udp协议\n\n### （四）ip协议\n\n\n## 四、Socket、Thread（套接字、线程）\n### （一）Socket（套接字）\n\n### （二）Thread（线程）\n\n\n## 四、iOS方向知识点\n### （一）AutoLayout / SizeClass\n\n### （二）KVO/KVC\n\n### （三）NSNotification\n\n### （四）Block\n\n### （五）Protocol/Delegate\n\n### （六）Grand Central Dispatch\n\n### （七）NSOperation Queue\n\n### （八）NSRunloop\n\n### （九）Runtime\n\n### （十）HTTP Request：Post、Get\n\n### （十一）Json、XML\n\n### （十二）CoreData、Sqlite\n\n### （十三）LLDB\n\n\n\n\n","source":"_posts/iOS-development-need-abilities.md","raw":"title: iOS开发需要掌握的知识点\ndate: 2015-10-29 15:35:49\ntags:\n- iOS中高级开发\n---\n任何一个方向，都需要基本功扎实。软件开发领域，数据结构与算法，操作系统，网络协议（tcp/ip协议族）是立足的基础。\n\n下面列举iOS开发需要掌握的知识点：\n\n<!-- more -->\n\n## 一、数据结构与算法\n### （一）数据结构\n#### 1. 链表\n\n#### 2. 队列\n\n#### 3. 树（二叉树）\n\n#### 4. 哈希表（即散列表）\n\n\n### （二）算法\n#### 1. 查找算法\n\n#### 2. 排序算法\n\n\n## 二、操作系统\n### （一）缓存\n\n### （二）分页\n\n### （三）生产者与消费者\n\n\n## 三、网络协议（tcp/ip协议族）\n### （一）http协议（http/https）\n\n### （二）tcp协议\n\n### （三）udp协议\n\n### （四）ip协议\n\n\n## 四、Socket、Thread（套接字、线程）\n### （一）Socket（套接字）\n\n### （二）Thread（线程）\n\n\n## 四、iOS方向知识点\n### （一）AutoLayout / SizeClass\n\n### （二）KVO/KVC\n\n### （三）NSNotification\n\n### （四）Block\n\n### （五）Protocol/Delegate\n\n### （六）Grand Central Dispatch\n\n### （七）NSOperation Queue\n\n### （八）NSRunloop\n\n### （九）Runtime\n\n### （十）HTTP Request：Post、Get\n\n### （十一）Json、XML\n\n### （十二）CoreData、Sqlite\n\n### （十三）LLDB\n\n\n\n\n","slug":"iOS-development-need-abilities","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzsk001kqxep45oiw20h","content":"<p>任何一个方向，都需要基本功扎实。软件开发领域，数据结构与算法，操作系统，网络协议（tcp/ip协议族）是立足的基础。</p>\n<p>下面列举iOS开发需要掌握的知识点：</p>\n<a id=\"more\"></a>\n<h2 id=\"一、数据结构与算法\"><a href=\"#一、数据结构与算法\" class=\"headerlink\" title=\"一、数据结构与算法\"></a>一、数据结构与算法</h2><h3 id=\"（一）数据结构\"><a href=\"#（一）数据结构\" class=\"headerlink\" title=\"（一）数据结构\"></a>（一）数据结构</h3><h4 id=\"1-链表\"><a href=\"#1-链表\" class=\"headerlink\" title=\"1. 链表\"></a>1. 链表</h4><h4 id=\"2-队列\"><a href=\"#2-队列\" class=\"headerlink\" title=\"2. 队列\"></a>2. 队列</h4><h4 id=\"3-树（二叉树）\"><a href=\"#3-树（二叉树）\" class=\"headerlink\" title=\"3. 树（二叉树）\"></a>3. 树（二叉树）</h4><h4 id=\"4-哈希表（即散列表）\"><a href=\"#4-哈希表（即散列表）\" class=\"headerlink\" title=\"4. 哈希表（即散列表）\"></a>4. 哈希表（即散列表）</h4><h3 id=\"（二）算法\"><a href=\"#（二）算法\" class=\"headerlink\" title=\"（二）算法\"></a>（二）算法</h3><h4 id=\"1-查找算法\"><a href=\"#1-查找算法\" class=\"headerlink\" title=\"1. 查找算法\"></a>1. 查找算法</h4><h4 id=\"2-排序算法\"><a href=\"#2-排序算法\" class=\"headerlink\" title=\"2. 排序算法\"></a>2. 排序算法</h4><h2 id=\"二、操作系统\"><a href=\"#二、操作系统\" class=\"headerlink\" title=\"二、操作系统\"></a>二、操作系统</h2><h3 id=\"（一）缓存\"><a href=\"#（一）缓存\" class=\"headerlink\" title=\"（一）缓存\"></a>（一）缓存</h3><h3 id=\"（二）分页\"><a href=\"#（二）分页\" class=\"headerlink\" title=\"（二）分页\"></a>（二）分页</h3><h3 id=\"（三）生产者与消费者\"><a href=\"#（三）生产者与消费者\" class=\"headerlink\" title=\"（三）生产者与消费者\"></a>（三）生产者与消费者</h3><h2 id=\"三、网络协议（tcp-ip协议族）\"><a href=\"#三、网络协议（tcp-ip协议族）\" class=\"headerlink\" title=\"三、网络协议（tcp/ip协议族）\"></a>三、网络协议（tcp/ip协议族）</h2><h3 id=\"（一）http协议（http-https）\"><a href=\"#（一）http协议（http-https）\" class=\"headerlink\" title=\"（一）http协议（http/https）\"></a>（一）http协议（http/https）</h3><h3 id=\"（二）tcp协议\"><a href=\"#（二）tcp协议\" class=\"headerlink\" title=\"（二）tcp协议\"></a>（二）tcp协议</h3><h3 id=\"（三）udp协议\"><a href=\"#（三）udp协议\" class=\"headerlink\" title=\"（三）udp协议\"></a>（三）udp协议</h3><h3 id=\"（四）ip协议\"><a href=\"#（四）ip协议\" class=\"headerlink\" title=\"（四）ip协议\"></a>（四）ip协议</h3><h2 id=\"四、Socket、Thread（套接字、线程）\"><a href=\"#四、Socket、Thread（套接字、线程）\" class=\"headerlink\" title=\"四、Socket、Thread（套接字、线程）\"></a>四、Socket、Thread（套接字、线程）</h2><h3 id=\"（一）Socket（套接字）\"><a href=\"#（一）Socket（套接字）\" class=\"headerlink\" title=\"（一）Socket（套接字）\"></a>（一）Socket（套接字）</h3><h3 id=\"（二）Thread（线程）\"><a href=\"#（二）Thread（线程）\" class=\"headerlink\" title=\"（二）Thread（线程）\"></a>（二）Thread（线程）</h3><h2 id=\"四、iOS方向知识点\"><a href=\"#四、iOS方向知识点\" class=\"headerlink\" title=\"四、iOS方向知识点\"></a>四、iOS方向知识点</h2><h3 id=\"（一）AutoLayout-SizeClass\"><a href=\"#（一）AutoLayout-SizeClass\" class=\"headerlink\" title=\"（一）AutoLayout / SizeClass\"></a>（一）AutoLayout / SizeClass</h3><h3 id=\"（二）KVO-KVC\"><a href=\"#（二）KVO-KVC\" class=\"headerlink\" title=\"（二）KVO/KVC\"></a>（二）KVO/KVC</h3><h3 id=\"（三）NSNotification\"><a href=\"#（三）NSNotification\" class=\"headerlink\" title=\"（三）NSNotification\"></a>（三）NSNotification</h3><h3 id=\"（四）Block\"><a href=\"#（四）Block\" class=\"headerlink\" title=\"（四）Block\"></a>（四）Block</h3><h3 id=\"（五）Protocol-Delegate\"><a href=\"#（五）Protocol-Delegate\" class=\"headerlink\" title=\"（五）Protocol/Delegate\"></a>（五）Protocol/Delegate</h3><h3 id=\"（六）Grand-Central-Dispatch\"><a href=\"#（六）Grand-Central-Dispatch\" class=\"headerlink\" title=\"（六）Grand Central Dispatch\"></a>（六）Grand Central Dispatch</h3><h3 id=\"（七）NSOperation-Queue\"><a href=\"#（七）NSOperation-Queue\" class=\"headerlink\" title=\"（七）NSOperation Queue\"></a>（七）NSOperation Queue</h3><h3 id=\"（八）NSRunloop\"><a href=\"#（八）NSRunloop\" class=\"headerlink\" title=\"（八）NSRunloop\"></a>（八）NSRunloop</h3><h3 id=\"（九）Runtime\"><a href=\"#（九）Runtime\" class=\"headerlink\" title=\"（九）Runtime\"></a>（九）Runtime</h3><h3 id=\"（十）HTTP-Request：Post、Get\"><a href=\"#（十）HTTP-Request：Post、Get\" class=\"headerlink\" title=\"（十）HTTP Request：Post、Get\"></a>（十）HTTP Request：Post、Get</h3><h3 id=\"（十一）Json、XML\"><a href=\"#（十一）Json、XML\" class=\"headerlink\" title=\"（十一）Json、XML\"></a>（十一）Json、XML</h3><h3 id=\"（十二）CoreData、Sqlite\"><a href=\"#（十二）CoreData、Sqlite\" class=\"headerlink\" title=\"（十二）CoreData、Sqlite\"></a>（十二）CoreData、Sqlite</h3><h3 id=\"（十三）LLDB\"><a href=\"#（十三）LLDB\" class=\"headerlink\" title=\"（十三）LLDB\"></a>（十三）LLDB</h3>","site":{"data":{}},"excerpt":"<p>任何一个方向，都需要基本功扎实。软件开发领域，数据结构与算法，操作系统，网络协议（tcp/ip协议族）是立足的基础。</p>\n<p>下面列举iOS开发需要掌握的知识点：</p>","more":"<h2 id=\"一、数据结构与算法\"><a href=\"#一、数据结构与算法\" class=\"headerlink\" title=\"一、数据结构与算法\"></a>一、数据结构与算法</h2><h3 id=\"（一）数据结构\"><a href=\"#（一）数据结构\" class=\"headerlink\" title=\"（一）数据结构\"></a>（一）数据结构</h3><h4 id=\"1-链表\"><a href=\"#1-链表\" class=\"headerlink\" title=\"1. 链表\"></a>1. 链表</h4><h4 id=\"2-队列\"><a href=\"#2-队列\" class=\"headerlink\" title=\"2. 队列\"></a>2. 队列</h4><h4 id=\"3-树（二叉树）\"><a href=\"#3-树（二叉树）\" class=\"headerlink\" title=\"3. 树（二叉树）\"></a>3. 树（二叉树）</h4><h4 id=\"4-哈希表（即散列表）\"><a href=\"#4-哈希表（即散列表）\" class=\"headerlink\" title=\"4. 哈希表（即散列表）\"></a>4. 哈希表（即散列表）</h4><h3 id=\"（二）算法\"><a href=\"#（二）算法\" class=\"headerlink\" title=\"（二）算法\"></a>（二）算法</h3><h4 id=\"1-查找算法\"><a href=\"#1-查找算法\" class=\"headerlink\" title=\"1. 查找算法\"></a>1. 查找算法</h4><h4 id=\"2-排序算法\"><a href=\"#2-排序算法\" class=\"headerlink\" title=\"2. 排序算法\"></a>2. 排序算法</h4><h2 id=\"二、操作系统\"><a href=\"#二、操作系统\" class=\"headerlink\" title=\"二、操作系统\"></a>二、操作系统</h2><h3 id=\"（一）缓存\"><a href=\"#（一）缓存\" class=\"headerlink\" title=\"（一）缓存\"></a>（一）缓存</h3><h3 id=\"（二）分页\"><a href=\"#（二）分页\" class=\"headerlink\" title=\"（二）分页\"></a>（二）分页</h3><h3 id=\"（三）生产者与消费者\"><a href=\"#（三）生产者与消费者\" class=\"headerlink\" title=\"（三）生产者与消费者\"></a>（三）生产者与消费者</h3><h2 id=\"三、网络协议（tcp-ip协议族）\"><a href=\"#三、网络协议（tcp-ip协议族）\" class=\"headerlink\" title=\"三、网络协议（tcp/ip协议族）\"></a>三、网络协议（tcp/ip协议族）</h2><h3 id=\"（一）http协议（http-https）\"><a href=\"#（一）http协议（http-https）\" class=\"headerlink\" title=\"（一）http协议（http/https）\"></a>（一）http协议（http/https）</h3><h3 id=\"（二）tcp协议\"><a href=\"#（二）tcp协议\" class=\"headerlink\" title=\"（二）tcp协议\"></a>（二）tcp协议</h3><h3 id=\"（三）udp协议\"><a href=\"#（三）udp协议\" class=\"headerlink\" title=\"（三）udp协议\"></a>（三）udp协议</h3><h3 id=\"（四）ip协议\"><a href=\"#（四）ip协议\" class=\"headerlink\" title=\"（四）ip协议\"></a>（四）ip协议</h3><h2 id=\"四、Socket、Thread（套接字、线程）\"><a href=\"#四、Socket、Thread（套接字、线程）\" class=\"headerlink\" title=\"四、Socket、Thread（套接字、线程）\"></a>四、Socket、Thread（套接字、线程）</h2><h3 id=\"（一）Socket（套接字）\"><a href=\"#（一）Socket（套接字）\" class=\"headerlink\" title=\"（一）Socket（套接字）\"></a>（一）Socket（套接字）</h3><h3 id=\"（二）Thread（线程）\"><a href=\"#（二）Thread（线程）\" class=\"headerlink\" title=\"（二）Thread（线程）\"></a>（二）Thread（线程）</h3><h2 id=\"四、iOS方向知识点\"><a href=\"#四、iOS方向知识点\" class=\"headerlink\" title=\"四、iOS方向知识点\"></a>四、iOS方向知识点</h2><h3 id=\"（一）AutoLayout-SizeClass\"><a href=\"#（一）AutoLayout-SizeClass\" class=\"headerlink\" title=\"（一）AutoLayout / SizeClass\"></a>（一）AutoLayout / SizeClass</h3><h3 id=\"（二）KVO-KVC\"><a href=\"#（二）KVO-KVC\" class=\"headerlink\" title=\"（二）KVO/KVC\"></a>（二）KVO/KVC</h3><h3 id=\"（三）NSNotification\"><a href=\"#（三）NSNotification\" class=\"headerlink\" title=\"（三）NSNotification\"></a>（三）NSNotification</h3><h3 id=\"（四）Block\"><a href=\"#（四）Block\" class=\"headerlink\" title=\"（四）Block\"></a>（四）Block</h3><h3 id=\"（五）Protocol-Delegate\"><a href=\"#（五）Protocol-Delegate\" class=\"headerlink\" title=\"（五）Protocol/Delegate\"></a>（五）Protocol/Delegate</h3><h3 id=\"（六）Grand-Central-Dispatch\"><a href=\"#（六）Grand-Central-Dispatch\" class=\"headerlink\" title=\"（六）Grand Central Dispatch\"></a>（六）Grand Central Dispatch</h3><h3 id=\"（七）NSOperation-Queue\"><a href=\"#（七）NSOperation-Queue\" class=\"headerlink\" title=\"（七）NSOperation Queue\"></a>（七）NSOperation Queue</h3><h3 id=\"（八）NSRunloop\"><a href=\"#（八）NSRunloop\" class=\"headerlink\" title=\"（八）NSRunloop\"></a>（八）NSRunloop</h3><h3 id=\"（九）Runtime\"><a href=\"#（九）Runtime\" class=\"headerlink\" title=\"（九）Runtime\"></a>（九）Runtime</h3><h3 id=\"（十）HTTP-Request：Post、Get\"><a href=\"#（十）HTTP-Request：Post、Get\" class=\"headerlink\" title=\"（十）HTTP Request：Post、Get\"></a>（十）HTTP Request：Post、Get</h3><h3 id=\"（十一）Json、XML\"><a href=\"#（十一）Json、XML\" class=\"headerlink\" title=\"（十一）Json、XML\"></a>（十一）Json、XML</h3><h3 id=\"（十二）CoreData、Sqlite\"><a href=\"#（十二）CoreData、Sqlite\" class=\"headerlink\" title=\"（十二）CoreData、Sqlite\"></a>（十二）CoreData、Sqlite</h3><h3 id=\"（十三）LLDB\"><a href=\"#（十三）LLDB\" class=\"headerlink\" title=\"（十三）LLDB\"></a>（十三）LLDB</h3>"},{"title":"Mac上安装Android Studio","date":"2015-10-09T01:48:38.000Z","_content":"\n　　Google在国内被墙，有关android开发的一些工具在Google上下载都需要使用VPN服务。我使用过一些免费与付费的VPN，想使用较好的服务质量就需要花点小钱，付费VPN中 [uuu vpn](http://v.uuu.net/) 很好用，有windows，Mac客户端，使用比较方便，代理服务稳定，快速，比 [green vpn](http://www.greenvpncn.com/) 好用多了，green vpn很烂，买过几次包月的套餐，向其客服吐槽过其VPN简直烂的让人无语，总之，对green vpn 没有什么好印象了。\n\n<!-- more -->\n\n### 一、使用VPN服务\n　　具体使用什么VPN看个人喜好，我使用的是uuu vpn。在Mac上启用 uuu vpn，翻墙。\n　　\n### 二、在Google官网下载Android Studio\n　　Android Studio 的官方下载地址为：[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)。我的系统是Mac，选择Mac版的Android Studio IDE。\n\n　　下载android studio：\n\n![下载进度](http://images2015.cnblogs.com/blog/719115/201510/719115-20151009102102393-1885681577.png)\n\n　　下载后，下载页面出现一下安装提示信息 [Installing Android Studio](http://developer.android.com/sdk/installing/index.html?pkg=studio)，重要信息如下：\n\n![安装步骤提示](http://images2015.cnblogs.com/blog/719115/201510/719115-20151009102135112-514568119.png)\n\n　　在安装android studio 之前，必须安装 JDK 6 或者 JDK 的更高版本，只安装 JRE 是不够的。要开发 android 5.0 或更高的android系统版本程序，就必须安装 JDK 7。要知道自己的Mac系统上是否安装了 JDK ，在Mac终端执行命令 `javac -version`，如下：\n\n![检查jdk安装信息](http://images2015.cnblogs.com/blog/719115/201510/719115-20151009103638831-972699102.png)\n\n从图中的命令执行结果可知，Mac上安装的 JDK 的版本为 JDK 8 Update 40 。\n\n　　如果检查到 JDK 没有安装，或者版本低于6，那么，就需要下载新版本的JDK，并安装。\n\n\n　　\n","source":"_posts/install-android-studio-ide.md","raw":"title: Mac上安装Android Studio\ndate: 2015-10-09 09:48:38\ntags:\n- Android开发\n---\n\n　　Google在国内被墙，有关android开发的一些工具在Google上下载都需要使用VPN服务。我使用过一些免费与付费的VPN，想使用较好的服务质量就需要花点小钱，付费VPN中 [uuu vpn](http://v.uuu.net/) 很好用，有windows，Mac客户端，使用比较方便，代理服务稳定，快速，比 [green vpn](http://www.greenvpncn.com/) 好用多了，green vpn很烂，买过几次包月的套餐，向其客服吐槽过其VPN简直烂的让人无语，总之，对green vpn 没有什么好印象了。\n\n<!-- more -->\n\n### 一、使用VPN服务\n　　具体使用什么VPN看个人喜好，我使用的是uuu vpn。在Mac上启用 uuu vpn，翻墙。\n　　\n### 二、在Google官网下载Android Studio\n　　Android Studio 的官方下载地址为：[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)。我的系统是Mac，选择Mac版的Android Studio IDE。\n\n　　下载android studio：\n\n![下载进度](http://images2015.cnblogs.com/blog/719115/201510/719115-20151009102102393-1885681577.png)\n\n　　下载后，下载页面出现一下安装提示信息 [Installing Android Studio](http://developer.android.com/sdk/installing/index.html?pkg=studio)，重要信息如下：\n\n![安装步骤提示](http://images2015.cnblogs.com/blog/719115/201510/719115-20151009102135112-514568119.png)\n\n　　在安装android studio 之前，必须安装 JDK 6 或者 JDK 的更高版本，只安装 JRE 是不够的。要开发 android 5.0 或更高的android系统版本程序，就必须安装 JDK 7。要知道自己的Mac系统上是否安装了 JDK ，在Mac终端执行命令 `javac -version`，如下：\n\n![检查jdk安装信息](http://images2015.cnblogs.com/blog/719115/201510/719115-20151009103638831-972699102.png)\n\n从图中的命令执行结果可知，Mac上安装的 JDK 的版本为 JDK 8 Update 40 。\n\n　　如果检查到 JDK 没有安装，或者版本低于6，那么，就需要下载新版本的JDK，并安装。\n\n\n　　\n","slug":"install-android-studio-ide","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzsm001mqxepcss50pis","content":"<p>　　Google在国内被墙，有关android开发的一些工具在Google上下载都需要使用VPN服务。我使用过一些免费与付费的VPN，想使用较好的服务质量就需要花点小钱，付费VPN中 <a href=\"http://v.uuu.net/\" target=\"_blank\" rel=\"external\">uuu vpn</a> 很好用，有windows，Mac客户端，使用比较方便，代理服务稳定，快速，比 <a href=\"http://www.greenvpncn.com/\" target=\"_blank\" rel=\"external\">green vpn</a> 好用多了，green vpn很烂，买过几次包月的套餐，向其客服吐槽过其VPN简直烂的让人无语，总之，对green vpn 没有什么好印象了。</p>\n<a id=\"more\"></a>\n<h3 id=\"一、使用VPN服务\"><a href=\"#一、使用VPN服务\" class=\"headerlink\" title=\"一、使用VPN服务\"></a>一、使用VPN服务</h3><p>　　具体使用什么VPN看个人喜好，我使用的是uuu vpn。在Mac上启用 uuu vpn，翻墙。\n　　</p>\n<h3 id=\"二、在Google官网下载Android-Studio\"><a href=\"#二、在Google官网下载Android-Studio\" class=\"headerlink\" title=\"二、在Google官网下载Android Studio\"></a>二、在Google官网下载Android Studio</h3><p>　　Android Studio 的官方下载地址为：<a href=\"http://developer.android.com/sdk/index.html\" target=\"_blank\" rel=\"external\">http://developer.android.com/sdk/index.html</a>。我的系统是Mac，选择Mac版的Android Studio IDE。</p>\n<p>　　下载android studio：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201510/719115-20151009102102393-1885681577.png\" alt=\"下载进度\"></p>\n<p>　　下载后，下载页面出现一下安装提示信息 <a href=\"http://developer.android.com/sdk/installing/index.html?pkg=studio\" target=\"_blank\" rel=\"external\">Installing Android Studio</a>，重要信息如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201510/719115-20151009102135112-514568119.png\" alt=\"安装步骤提示\"></p>\n<p>　　在安装android studio 之前，必须安装 JDK 6 或者 JDK 的更高版本，只安装 JRE 是不够的。要开发 android 5.0 或更高的android系统版本程序，就必须安装 JDK 7。要知道自己的Mac系统上是否安装了 JDK ，在Mac终端执行命令 <code>javac -version</code>，如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201510/719115-20151009103638831-972699102.png\" alt=\"检查jdk安装信息\"></p>\n<p>从图中的命令执行结果可知，Mac上安装的 JDK 的版本为 JDK 8 Update 40 。</p>\n<p>　　如果检查到 JDK 没有安装，或者版本低于6，那么，就需要下载新版本的JDK，并安装。</p>\n<p>　　</p>\n","site":{"data":{}},"excerpt":"<p>　　Google在国内被墙，有关android开发的一些工具在Google上下载都需要使用VPN服务。我使用过一些免费与付费的VPN，想使用较好的服务质量就需要花点小钱，付费VPN中 <a href=\"http://v.uuu.net/\" target=\"_blank\" rel=\"external\">uuu vpn</a> 很好用，有windows，Mac客户端，使用比较方便，代理服务稳定，快速，比 <a href=\"http://www.greenvpncn.com/\" target=\"_blank\" rel=\"external\">green vpn</a> 好用多了，green vpn很烂，买过几次包月的套餐，向其客服吐槽过其VPN简直烂的让人无语，总之，对green vpn 没有什么好印象了。</p>","more":"<h3 id=\"一、使用VPN服务\"><a href=\"#一、使用VPN服务\" class=\"headerlink\" title=\"一、使用VPN服务\"></a>一、使用VPN服务</h3><p>　　具体使用什么VPN看个人喜好，我使用的是uuu vpn。在Mac上启用 uuu vpn，翻墙。\n　　</p>\n<h3 id=\"二、在Google官网下载Android-Studio\"><a href=\"#二、在Google官网下载Android-Studio\" class=\"headerlink\" title=\"二、在Google官网下载Android Studio\"></a>二、在Google官网下载Android Studio</h3><p>　　Android Studio 的官方下载地址为：<a href=\"http://developer.android.com/sdk/index.html\" target=\"_blank\" rel=\"external\">http://developer.android.com/sdk/index.html</a>。我的系统是Mac，选择Mac版的Android Studio IDE。</p>\n<p>　　下载android studio：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201510/719115-20151009102102393-1885681577.png\" alt=\"下载进度\"></p>\n<p>　　下载后，下载页面出现一下安装提示信息 <a href=\"http://developer.android.com/sdk/installing/index.html?pkg=studio\" target=\"_blank\" rel=\"external\">Installing Android Studio</a>，重要信息如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201510/719115-20151009102135112-514568119.png\" alt=\"安装步骤提示\"></p>\n<p>　　在安装android studio 之前，必须安装 JDK 6 或者 JDK 的更高版本，只安装 JRE 是不够的。要开发 android 5.0 或更高的android系统版本程序，就必须安装 JDK 7。要知道自己的Mac系统上是否安装了 JDK ，在Mac终端执行命令 <code>javac -version</code>，如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201510/719115-20151009103638831-972699102.png\" alt=\"检查jdk安装信息\"></p>\n<p>从图中的命令执行结果可知，Mac上安装的 JDK 的版本为 JDK 8 Update 40 。</p>\n<p>　　如果检查到 JDK 没有安装，或者版本低于6，那么，就需要下载新版本的JDK，并安装。</p>\n<p>　　</p>"},{"title":"在Mac OSX上安装ffmpeg && ffmpeg命令行将h264封装为mp4","date":"2015-09-24T05:09:39.000Z","_content":"ffmpeg功能强大，可以通过命令行来对音视频进行处理。为了使用其功能，我在Mac上对其进行了安装。\n\n我的Mac OS X 系统版本：OS X Yosemite, 10.10.14\n\n<!-- more -->\n\n关于ffmpeg在Mac OS X上的编译，FFmpeg上有官方文档说明：[https://trac.ffmpeg.org/wiki/CompilationGuide/MacOSX](https://trac.ffmpeg.org/wiki/CompilationGuide/MacOSX)。该文档给出了3种方法：\n\n* ffmpeg through Homebrew\n* Compiling FFmpeg yourself\n* Manual install of the dependencies without Homebrew\n\n看了这三种方法的官方说明后，我选择了第一种，因为最简单。\n\n### 首先，Mac上要安装Homebrew\n\n在终端执行命令，**ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"**\n\n```\ndevtemobideMac-mini:~ sunminmin$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n==> This script will install:\n\n/usr/local/bin/brew\n\n/usr/local/Library/...\n\n/usr/local/share/man/man1/brew.1\n\n \n\nPress RETURN to continue or any other key to abort\n\n==> /usr/bin/sudo /bin/chmod g+rwx /Library/Caches/Homebrew\n\nPassword:\n\n==> Downloading and installing Homebrew...\n\n \n\n \n\n \n\nremote: Counting objects: 225571, done.\n\nremote: Compressing objects: 100% (59354/59354), done.\n\nremote: Total 225571 (delta 165037), reused 225482 (delta 164969)\n\nReceiving objects: 100% (225571/225571), 51.57 MiB | 1.19 MiB/s, done.\n\nResolving deltas: 100% (165037/165037), done.\n\nFrom https://github.com/Homebrew/homebrew\n\n * [new branch]      master     -> origin/master\n\nHEAD is now at 82d7dc4 tomcat: update 8.0.17 bottle.\n\n==> Installation successful!\n\n==> Next steps\n\nRun `brew doctor` before you install anything\n\nRun `brew help` to get started\n\n```\n\n\n### 其次，安装ffmpeg\n\n在终端执行命令，**brew install ffmpeg**\n\n\n```\ndevtemobideMac-mini:~ sunminmin$ brew install ffmpeg\n==> Installing dependencies for ffmpeg: x264, lame, libvo-aacenc, xvid\n==> Installing ffmpeg dependency: x264\n==> Downloading https://homebrew.bintray.com/bottles/x264-r2533.yosemite.bottle.\n######################################################################## 100.0%\n==> Pouring x264-r2533.yosemite.bottle.tar.gz\n🍺  /usr/local/Cellar/x264/r2533: 9 files, 3.4M\n==> Installing ffmpeg dependency: lame\n==> Downloading https://homebrew.bintray.com/bottles/lame-3.99.5.yosemite.bottle\n######################################################################## 100.0%\n==> Pouring lame-3.99.5.yosemite.bottle.1.tar.gz\n🍺  /usr/local/Cellar/lame/3.99.5: 25 files, 2.1M\n==> Installing ffmpeg dependency: libvo-aacenc\n==> Downloading https://homebrew.bintray.com/bottles/libvo-aacenc-0.1.3.yosemite\n######################################################################## 100.0%\n==> Pouring libvo-aacenc-0.1.3.yosemite.bottle.tar.gz\n🍺  /usr/local/Cellar/libvo-aacenc/0.1.3: 15 files, 336K\n==> Installing ffmpeg dependency: xvid\n==> Downloading https://homebrew.bintray.com/bottles/xvid-1.3.3.yosemite.bottle.\n######################################################################## 100.0%\n==> Pouring xvid-1.3.3.yosemite.bottle.2.tar.gz\n🍺  /usr/local/Cellar/xvid/1.3.3: 9 files, 1.3M\n==> Installing ffmpeg\n==> Downloading https://homebrew.bintray.com/bottles/ffmpeg-2.6.3.yosemite.bottle.ta\n######################################################################## 100.0%\n==> Pouring ffmpeg-2.6.3.yosemite.bottle.tar.gz\n==> Caveats\nFFmpeg has been built without libfaac for licensing reasons;\nlibvo-aacenc is used by default.\nTo install with libfaac, you can:\n  brew reinstall ffmpeg --with-faac\n\nYou can also use the experimental FFmpeg encoder, libfdk-aac, or\nlibvo_aacenc to encode AAC audio:\n  ffmpeg -i input.wav -c:a aac -strict experimental output.m4a\nOr:\n  brew reinstall ffmpeg --with-fdk-aac\n  ffmpeg -i input.wav -c:a libfdk_aac output.m4a\n==> Summary\n🍺  /usr/local/Cellar/ffmpeg/2.6.3: 204 files, 42M\n\n```\n\n### 再次，查看ffmpeg info\n\n在终端执行命令，**brew info ffmpeg**\n\n\n```\ndevtemobideMac-mini:~ sunminmin$ brew info ffmpeg\nffmpeg: stable 2.6.3 (bottled), HEAD\nPlay, record, convert, and stream audio and video\nhttps://ffmpeg.org/\n/usr/local/Cellar/ffmpeg/2.6.3 (204 files, 42M) *\n  Poured from bottle\nFrom: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/ffmpeg.rb\n==> Dependencies\nBuild: pkg-config ✘, texi2html ✘, yasm ✘\nRecommended: x264 ✔, lame ✔, libvo-aacenc ✔, xvid ✔\nOptional: faac ✘, fontconfig ✘, freetype ✘, theora ✘, libvorbis ✘, libvpx ✘, rtmpdump ✘, opencore-amr ✘, libass ✘, openjpeg ✘, speex ✘, schroedinger ✘, fdk-aac ✘, opus ✘, frei0r ✘, libcaca ✘, libbluray ✘, libsoxr ✘, libquvi ✘, libvidstab ✘, x265 ✘, openssl ✘, libssh ✘, webp ✘\n==> Options\n--with-faac\n\tBuild with faac support\n--with-fdk-aac\n\tEnable the Fraunhofer FDK AAC library\n--with-ffplay\n\tEnable FFplay media player\n--with-fontconfig\n\tBuild with fontconfig support\n--with-freetype\n\tBuild with freetype support\n--with-frei0r\n\tBuild with frei0r support\n--with-libass\n\tEnable ASS/SSA subtitle format\n--with-libbluray\n\tBuild with libbluray support\n--with-libcaca\n\tBuild with libcaca support\n--with-libquvi\n\tBuild with libquvi support\n--with-libsoxr\n\tEnable the soxr resample library\n--with-libssh\n\tEnable SFTP protocol via libssh\n--with-libvidstab\n\tEnable vid.stab support for video stabilization\n--with-libvorbis\n\tBuild with libvorbis support\n--with-libvpx\n\tBuild with libvpx support\n--with-opencore-amr\n\tEnable Opencore AMR NR/WB audio format\n--with-openjpeg\n\tEnable JPEG 2000 image format\n--with-openssl\n\tEnable SSL support\n--with-opus\n\tBuild with opus support\n--with-rtmpdump\n\tEnable RTMP protocol\n--with-schroedinger\n\tEnable Dirac video format\n--with-speex\n\tBuild with speex support\n--with-theora\n\tBuild with theora support\n--with-tools\n\tEnable additional FFmpeg tools\n--with-webp\n\tEnable using libwebp to encode WEBP images\n--with-x265\n\tEnable x265 encoder\n--without-lame\n\tDisable MP3 encoder\n--without-libvo-aacenc\n\tDisable VisualOn AAC encoder\n--without-qtkit\n\tDisable deprecated QuickTime framework\n--without-x264\n\tDisable H.264 encoder\n--without-xvid\n\tDisable Xvid MPEG-4 video encoder\n--HEAD\n\tInstall HEAD version\n==> Caveats\nFFmpeg has been built without libfaac for licensing reasons;\nlibvo-aacenc is used by default.\nTo install with libfaac, you can:\n  brew reinstall ffmpeg --with-faac\n\nYou can also use the experimental FFmpeg encoder, libfdk-aac, or\nlibvo_aacenc to encode AAC audio:\n  ffmpeg -i input.wav -c:a aac -strict experimental output.m4a\nOr:\n  brew reinstall ffmpeg --with-fdk-aac\n  ffmpeg -i input.wav -c:a libfdk_aac output.m4a\n  \n```\n\n经过这3步，现在就可以使用ffmpeg的强大功能了。\n\n现在ffmpeg的版本更新很快，今年3月份发布了 FFmpeg 2.6.1，7月份发布了 FFmpeg 2.7.2，中间还有一些其它版本，比如2.7，2.7.1，这些版本我都在iOS平台上编译使用过，今年9月份，FFmpeg 的版本更新到了2.8。今年，我见证了FFmpeg更新最频繁的的时刻。\n\n经过前面的3步，在Mac上安装了 ffmpeg 2.6.3 的版本，过段时间，homebrew上ffmpeg 的安装源就会更新，若想升级ffmpeg，就需要执行下面的第4步操作了。\n\n### 最后，升级ffmpeg的版本\n\n若想升级ffmpeg的版本，可以在终端执行命令，**brew update && brew upgrade ffmpeg**\n\n\n## 实例\n\n安装好了ffmpeg，就要试试其功能了。采用文章[利用x264将iOS摄像头实时视频流编码为h264文件](http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/)配套工程[X264-Encode-for-iOS](https://github.com/depthlove/X264-Encode-for-iOS)中的**h264文件**，该文件地址为[2015-09-17 18:05:20.h264](https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264)，使用ffmpeg 命令将其打包为 **.mp4容器格式的文件**\n\n将该h264文件下载，在终端上，执行命令进入存放该文件的目录\n\n```\ndevtemobideMac-mini:~ sunminmin$ cd /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_Z_Github_clone\n\n```\n\n进入到该目录后，执行命令，**ffmpeg -i 2015-09-17\\ 18_05_20.h264  2015-09-17.mp4**\n\n```\ndevtemobideMac-mini:ZZ_Z_Github_clone sunminmin$ ffmpeg -i 2015-09-17\\ 18_05_20.h264  2015-09-17.mp4\nffmpeg version 2.6.3 Copyright (c) 2000-2015 the FFmpeg developers\n  built with Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)\n  configuration: --prefix=/usr/local/Cellar/ffmpeg/2.6.3 --enable-shared --enable-pthreads --enable-gpl --enable-version3 --enable-hardcoded-tables --enable-avresample --cc=clang --host-cflags= --host-ldflags= --enable-libx264 --enable-libmp3lame --enable-libvo-aacenc --enable-libxvid --enable-vda\n  libavutil      54. 20.100 / 54. 20.100\n  libavcodec     56. 26.100 / 56. 26.100\n  libavformat    56. 25.101 / 56. 25.101\n  libavdevice    56.  4.100 / 56.  4.100\n  libavfilter     5. 11.102 /  5. 11.102\n  libavresample   2.  1.  0 /  2.  1.  0\n  libswscale      3.  1.101 /  3.  1.101\n  libswresample   1.  1.100 /  1.  1.100\n  libpostproc    53.  3.100 / 53.  3.100\nInput #0, h264, from '2015-09-17 18_05_20.h264':\n  Duration: N/A, bitrate: N/A\n    Stream #0:0: Video: h264 (Constrained Baseline), yuv420p, 480x360, 15 fps, 15 tbr, 1200k tbn, 30 tbc\n[libx264 @ 0x7fada2818000] using cpu capabilities: MMX2 SSE2Fast SSSE3 SSE4.2 AVX\n[libx264 @ 0x7fada2818000] profile High, level 2.1\n[libx264 @ 0x7fada2818000] 264 - core 144 r2533 c8a773e - H.264/MPEG-4 AVC codec - Copyleft 2003-2015 - http://www.videolan.org/x264.html - options: cabac=1 ref=3 deblock=1:0:0 analyse=0x3:0x113 me=hex subme=7 psy=1 psy_rd=1.00:0.00 mixed_ref=1 me_range=16 chroma_me=1 trellis=1 8x8dct=1 cqm=0 deadzone=21,11 fast_pskip=1 chroma_qp_offset=-2 threads=6 lookahead_threads=1 sliced_threads=0 nr=0 decimate=1 interlaced=0 bluray_compat=0 constrained_intra=0 bframes=3 b_pyramid=2 b_adapt=1 b_bias=0 direct=1 weightb=1 open_gop=0 weightp=2 keyint=250 keyint_min=15 scenecut=40 intra_refresh=0 rc_lookahead=40 rc=crf mbtree=1 crf=23.0 qcomp=0.60 qpmin=0 qpmax=69 qpstep=4 ip_ratio=1.40 aq=1:1.00\nOutput #0, mp4, to '2015-09-17.mp4':\n  Metadata:\n    encoder         : Lavf56.25.101\n    Stream #0:0: Video: h264 (libx264) ([33][0][0][0] / 0x0021), yuv420p, 480x360, q=-1--1, 15 fps, 15360 tbn, 15 tbc\n    Metadata:\n      encoder         : Lavc56.26.100 libx264\nStream mapping:\n  Stream #0:0 -> #0:0 (h264 (native) -> h264 (libx264))\nPress [q] to stop, [?] for help\nframe=   64 fps=0.0 q=27.0 size=      60kB time=00:00:00.80 bitrate= 609.7kbits/s   frame=   87 fps= 85 q=27.0 size=     187kB time=00:00:02.33 bitrate= 655.2kbits/s   frame=  120 fps= 77 q=27.0 size=     366kB time=00:00:04.53 bitrate= 661.5kbits/s   frame=  149 fps= 72 q=27.0 size=     444kB time=00:00:06.46 bitrate= 562.4kbits/s   frame=  178 fps= 69 q=27.0 size=     508kB time=00:00:08.40 bitrate= 495.4kbits/s   frame=  196 fps= 56 q=-1.0 Lsize=     651kB time=00:00:12.93 bitrate= 412.2kbits/s    \nvideo:648kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 0.389284%\n[libx264 @ 0x7fada2818000] frame I:2     Avg QP:20.10  size:  5888\n[libx264 @ 0x7fada2818000] frame P:126   Avg QP:22.22  size:  4340\n[libx264 @ 0x7fada2818000] frame B:68    Avg QP:23.94  size:  1537\n[libx264 @ 0x7fada2818000] consecutive B-frames: 43.9% 27.6%  6.1% 22.4%\n[libx264 @ 0x7fada2818000] mb I  I16..4: 31.4% 51.4% 17.2%\n[libx264 @ 0x7fada2818000] mb P  I16..4:  8.6% 10.2%  4.6%  P16..4: 46.2% 11.9%  4.2%  0.0%  0.0%    skip:14.2%\n[libx264 @ 0x7fada2818000] mb B  I16..4:  1.1%  0.6%  0.6%  B16..8: 52.3%  4.9%  0.8%  direct: 3.2%  skip:36.5%  L0:51.0% L1:45.1% BI: 3.9%\n[libx264 @ 0x7fada2818000] 8x8 transform intra:43.2% inter:63.2%\n[libx264 @ 0x7fada2818000] coded y,uvDC,uvAC intra: 42.6% 57.1% 10.4% inter: 19.2% 28.2% 0.7%\n[libx264 @ 0x7fada2818000] i16 v,h,dc,p: 20% 51% 10% 19%\n[libx264 @ 0x7fada2818000] i8 v,h,dc,ddl,ddr,vr,hd,vl,hu: 24% 38% 22%  2%  2%  2%  4%  2%  5%\n[libx264 @ 0x7fada2818000] i4 v,h,dc,ddl,ddr,vr,hd,vl,hu: 21% 43% 12%  3%  3%  3%  6%  4%  5%\n[libx264 @ 0x7fada2818000] i8c dc,h,v,p: 51% 32% 14%  3%\n[libx264 @ 0x7fada2818000] Weighted P-Frames: Y:7.1% UV:5.6%\n[libx264 @ 0x7fada2818000] ref P L0: 78.9% 10.4%  8.3%  2.3%  0.1%\n[libx264 @ 0x7fada2818000] ref B L0: 93.9%  5.6%  0.5%\n[libx264 @ 0x7fada2818000] ref B L1: 96.2%  3.8%\n[libx264 @ 0x7fada2818000] kb/s:405.98\n\n```\n\n到此，h264文件封装为.mp4格式的过程结束。\n\n查看2015-09-17.mp4 文件，如图\n\n![mp4文件详情](http://images2015.cnblogs.com/blog/719115/201509/719115-20150924200951959-1409932132.png)\n\n2015-09-17.mp4 文件可以使用Quick Time Player，VLC 正常播放。\n\n* 2015-09-17.mp4 文件的下载地址为：[2015-09-17.mp4](https://github.com/depthlove/test-files/blob/master/2015-09-17.mp4)\n* 2015-09-17 18:05:20.h264 文件的下载地址为：[2015-09-17 18:05:20.h264](https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264)\n\n","source":"_posts/install-ffmpeg-to-MacOSX-and-use-ffmpeg-to-transform-h264-to-mp4.md","raw":"title: 在Mac OSX上安装ffmpeg && ffmpeg命令行将h264封装为mp4\ndate: 2015-09-24 13:09:39\ntags:\n- 音视频处理\n---\nffmpeg功能强大，可以通过命令行来对音视频进行处理。为了使用其功能，我在Mac上对其进行了安装。\n\n我的Mac OS X 系统版本：OS X Yosemite, 10.10.14\n\n<!-- more -->\n\n关于ffmpeg在Mac OS X上的编译，FFmpeg上有官方文档说明：[https://trac.ffmpeg.org/wiki/CompilationGuide/MacOSX](https://trac.ffmpeg.org/wiki/CompilationGuide/MacOSX)。该文档给出了3种方法：\n\n* ffmpeg through Homebrew\n* Compiling FFmpeg yourself\n* Manual install of the dependencies without Homebrew\n\n看了这三种方法的官方说明后，我选择了第一种，因为最简单。\n\n### 首先，Mac上要安装Homebrew\n\n在终端执行命令，**ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"**\n\n```\ndevtemobideMac-mini:~ sunminmin$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n==> This script will install:\n\n/usr/local/bin/brew\n\n/usr/local/Library/...\n\n/usr/local/share/man/man1/brew.1\n\n \n\nPress RETURN to continue or any other key to abort\n\n==> /usr/bin/sudo /bin/chmod g+rwx /Library/Caches/Homebrew\n\nPassword:\n\n==> Downloading and installing Homebrew...\n\n \n\n \n\n \n\nremote: Counting objects: 225571, done.\n\nremote: Compressing objects: 100% (59354/59354), done.\n\nremote: Total 225571 (delta 165037), reused 225482 (delta 164969)\n\nReceiving objects: 100% (225571/225571), 51.57 MiB | 1.19 MiB/s, done.\n\nResolving deltas: 100% (165037/165037), done.\n\nFrom https://github.com/Homebrew/homebrew\n\n * [new branch]      master     -> origin/master\n\nHEAD is now at 82d7dc4 tomcat: update 8.0.17 bottle.\n\n==> Installation successful!\n\n==> Next steps\n\nRun `brew doctor` before you install anything\n\nRun `brew help` to get started\n\n```\n\n\n### 其次，安装ffmpeg\n\n在终端执行命令，**brew install ffmpeg**\n\n\n```\ndevtemobideMac-mini:~ sunminmin$ brew install ffmpeg\n==> Installing dependencies for ffmpeg: x264, lame, libvo-aacenc, xvid\n==> Installing ffmpeg dependency: x264\n==> Downloading https://homebrew.bintray.com/bottles/x264-r2533.yosemite.bottle.\n######################################################################## 100.0%\n==> Pouring x264-r2533.yosemite.bottle.tar.gz\n🍺  /usr/local/Cellar/x264/r2533: 9 files, 3.4M\n==> Installing ffmpeg dependency: lame\n==> Downloading https://homebrew.bintray.com/bottles/lame-3.99.5.yosemite.bottle\n######################################################################## 100.0%\n==> Pouring lame-3.99.5.yosemite.bottle.1.tar.gz\n🍺  /usr/local/Cellar/lame/3.99.5: 25 files, 2.1M\n==> Installing ffmpeg dependency: libvo-aacenc\n==> Downloading https://homebrew.bintray.com/bottles/libvo-aacenc-0.1.3.yosemite\n######################################################################## 100.0%\n==> Pouring libvo-aacenc-0.1.3.yosemite.bottle.tar.gz\n🍺  /usr/local/Cellar/libvo-aacenc/0.1.3: 15 files, 336K\n==> Installing ffmpeg dependency: xvid\n==> Downloading https://homebrew.bintray.com/bottles/xvid-1.3.3.yosemite.bottle.\n######################################################################## 100.0%\n==> Pouring xvid-1.3.3.yosemite.bottle.2.tar.gz\n🍺  /usr/local/Cellar/xvid/1.3.3: 9 files, 1.3M\n==> Installing ffmpeg\n==> Downloading https://homebrew.bintray.com/bottles/ffmpeg-2.6.3.yosemite.bottle.ta\n######################################################################## 100.0%\n==> Pouring ffmpeg-2.6.3.yosemite.bottle.tar.gz\n==> Caveats\nFFmpeg has been built without libfaac for licensing reasons;\nlibvo-aacenc is used by default.\nTo install with libfaac, you can:\n  brew reinstall ffmpeg --with-faac\n\nYou can also use the experimental FFmpeg encoder, libfdk-aac, or\nlibvo_aacenc to encode AAC audio:\n  ffmpeg -i input.wav -c:a aac -strict experimental output.m4a\nOr:\n  brew reinstall ffmpeg --with-fdk-aac\n  ffmpeg -i input.wav -c:a libfdk_aac output.m4a\n==> Summary\n🍺  /usr/local/Cellar/ffmpeg/2.6.3: 204 files, 42M\n\n```\n\n### 再次，查看ffmpeg info\n\n在终端执行命令，**brew info ffmpeg**\n\n\n```\ndevtemobideMac-mini:~ sunminmin$ brew info ffmpeg\nffmpeg: stable 2.6.3 (bottled), HEAD\nPlay, record, convert, and stream audio and video\nhttps://ffmpeg.org/\n/usr/local/Cellar/ffmpeg/2.6.3 (204 files, 42M) *\n  Poured from bottle\nFrom: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/ffmpeg.rb\n==> Dependencies\nBuild: pkg-config ✘, texi2html ✘, yasm ✘\nRecommended: x264 ✔, lame ✔, libvo-aacenc ✔, xvid ✔\nOptional: faac ✘, fontconfig ✘, freetype ✘, theora ✘, libvorbis ✘, libvpx ✘, rtmpdump ✘, opencore-amr ✘, libass ✘, openjpeg ✘, speex ✘, schroedinger ✘, fdk-aac ✘, opus ✘, frei0r ✘, libcaca ✘, libbluray ✘, libsoxr ✘, libquvi ✘, libvidstab ✘, x265 ✘, openssl ✘, libssh ✘, webp ✘\n==> Options\n--with-faac\n\tBuild with faac support\n--with-fdk-aac\n\tEnable the Fraunhofer FDK AAC library\n--with-ffplay\n\tEnable FFplay media player\n--with-fontconfig\n\tBuild with fontconfig support\n--with-freetype\n\tBuild with freetype support\n--with-frei0r\n\tBuild with frei0r support\n--with-libass\n\tEnable ASS/SSA subtitle format\n--with-libbluray\n\tBuild with libbluray support\n--with-libcaca\n\tBuild with libcaca support\n--with-libquvi\n\tBuild with libquvi support\n--with-libsoxr\n\tEnable the soxr resample library\n--with-libssh\n\tEnable SFTP protocol via libssh\n--with-libvidstab\n\tEnable vid.stab support for video stabilization\n--with-libvorbis\n\tBuild with libvorbis support\n--with-libvpx\n\tBuild with libvpx support\n--with-opencore-amr\n\tEnable Opencore AMR NR/WB audio format\n--with-openjpeg\n\tEnable JPEG 2000 image format\n--with-openssl\n\tEnable SSL support\n--with-opus\n\tBuild with opus support\n--with-rtmpdump\n\tEnable RTMP protocol\n--with-schroedinger\n\tEnable Dirac video format\n--with-speex\n\tBuild with speex support\n--with-theora\n\tBuild with theora support\n--with-tools\n\tEnable additional FFmpeg tools\n--with-webp\n\tEnable using libwebp to encode WEBP images\n--with-x265\n\tEnable x265 encoder\n--without-lame\n\tDisable MP3 encoder\n--without-libvo-aacenc\n\tDisable VisualOn AAC encoder\n--without-qtkit\n\tDisable deprecated QuickTime framework\n--without-x264\n\tDisable H.264 encoder\n--without-xvid\n\tDisable Xvid MPEG-4 video encoder\n--HEAD\n\tInstall HEAD version\n==> Caveats\nFFmpeg has been built without libfaac for licensing reasons;\nlibvo-aacenc is used by default.\nTo install with libfaac, you can:\n  brew reinstall ffmpeg --with-faac\n\nYou can also use the experimental FFmpeg encoder, libfdk-aac, or\nlibvo_aacenc to encode AAC audio:\n  ffmpeg -i input.wav -c:a aac -strict experimental output.m4a\nOr:\n  brew reinstall ffmpeg --with-fdk-aac\n  ffmpeg -i input.wav -c:a libfdk_aac output.m4a\n  \n```\n\n经过这3步，现在就可以使用ffmpeg的强大功能了。\n\n现在ffmpeg的版本更新很快，今年3月份发布了 FFmpeg 2.6.1，7月份发布了 FFmpeg 2.7.2，中间还有一些其它版本，比如2.7，2.7.1，这些版本我都在iOS平台上编译使用过，今年9月份，FFmpeg 的版本更新到了2.8。今年，我见证了FFmpeg更新最频繁的的时刻。\n\n经过前面的3步，在Mac上安装了 ffmpeg 2.6.3 的版本，过段时间，homebrew上ffmpeg 的安装源就会更新，若想升级ffmpeg，就需要执行下面的第4步操作了。\n\n### 最后，升级ffmpeg的版本\n\n若想升级ffmpeg的版本，可以在终端执行命令，**brew update && brew upgrade ffmpeg**\n\n\n## 实例\n\n安装好了ffmpeg，就要试试其功能了。采用文章[利用x264将iOS摄像头实时视频流编码为h264文件](http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/)配套工程[X264-Encode-for-iOS](https://github.com/depthlove/X264-Encode-for-iOS)中的**h264文件**，该文件地址为[2015-09-17 18:05:20.h264](https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264)，使用ffmpeg 命令将其打包为 **.mp4容器格式的文件**\n\n将该h264文件下载，在终端上，执行命令进入存放该文件的目录\n\n```\ndevtemobideMac-mini:~ sunminmin$ cd /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_Z_Github_clone\n\n```\n\n进入到该目录后，执行命令，**ffmpeg -i 2015-09-17\\ 18_05_20.h264  2015-09-17.mp4**\n\n```\ndevtemobideMac-mini:ZZ_Z_Github_clone sunminmin$ ffmpeg -i 2015-09-17\\ 18_05_20.h264  2015-09-17.mp4\nffmpeg version 2.6.3 Copyright (c) 2000-2015 the FFmpeg developers\n  built with Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)\n  configuration: --prefix=/usr/local/Cellar/ffmpeg/2.6.3 --enable-shared --enable-pthreads --enable-gpl --enable-version3 --enable-hardcoded-tables --enable-avresample --cc=clang --host-cflags= --host-ldflags= --enable-libx264 --enable-libmp3lame --enable-libvo-aacenc --enable-libxvid --enable-vda\n  libavutil      54. 20.100 / 54. 20.100\n  libavcodec     56. 26.100 / 56. 26.100\n  libavformat    56. 25.101 / 56. 25.101\n  libavdevice    56.  4.100 / 56.  4.100\n  libavfilter     5. 11.102 /  5. 11.102\n  libavresample   2.  1.  0 /  2.  1.  0\n  libswscale      3.  1.101 /  3.  1.101\n  libswresample   1.  1.100 /  1.  1.100\n  libpostproc    53.  3.100 / 53.  3.100\nInput #0, h264, from '2015-09-17 18_05_20.h264':\n  Duration: N/A, bitrate: N/A\n    Stream #0:0: Video: h264 (Constrained Baseline), yuv420p, 480x360, 15 fps, 15 tbr, 1200k tbn, 30 tbc\n[libx264 @ 0x7fada2818000] using cpu capabilities: MMX2 SSE2Fast SSSE3 SSE4.2 AVX\n[libx264 @ 0x7fada2818000] profile High, level 2.1\n[libx264 @ 0x7fada2818000] 264 - core 144 r2533 c8a773e - H.264/MPEG-4 AVC codec - Copyleft 2003-2015 - http://www.videolan.org/x264.html - options: cabac=1 ref=3 deblock=1:0:0 analyse=0x3:0x113 me=hex subme=7 psy=1 psy_rd=1.00:0.00 mixed_ref=1 me_range=16 chroma_me=1 trellis=1 8x8dct=1 cqm=0 deadzone=21,11 fast_pskip=1 chroma_qp_offset=-2 threads=6 lookahead_threads=1 sliced_threads=0 nr=0 decimate=1 interlaced=0 bluray_compat=0 constrained_intra=0 bframes=3 b_pyramid=2 b_adapt=1 b_bias=0 direct=1 weightb=1 open_gop=0 weightp=2 keyint=250 keyint_min=15 scenecut=40 intra_refresh=0 rc_lookahead=40 rc=crf mbtree=1 crf=23.0 qcomp=0.60 qpmin=0 qpmax=69 qpstep=4 ip_ratio=1.40 aq=1:1.00\nOutput #0, mp4, to '2015-09-17.mp4':\n  Metadata:\n    encoder         : Lavf56.25.101\n    Stream #0:0: Video: h264 (libx264) ([33][0][0][0] / 0x0021), yuv420p, 480x360, q=-1--1, 15 fps, 15360 tbn, 15 tbc\n    Metadata:\n      encoder         : Lavc56.26.100 libx264\nStream mapping:\n  Stream #0:0 -> #0:0 (h264 (native) -> h264 (libx264))\nPress [q] to stop, [?] for help\nframe=   64 fps=0.0 q=27.0 size=      60kB time=00:00:00.80 bitrate= 609.7kbits/s   frame=   87 fps= 85 q=27.0 size=     187kB time=00:00:02.33 bitrate= 655.2kbits/s   frame=  120 fps= 77 q=27.0 size=     366kB time=00:00:04.53 bitrate= 661.5kbits/s   frame=  149 fps= 72 q=27.0 size=     444kB time=00:00:06.46 bitrate= 562.4kbits/s   frame=  178 fps= 69 q=27.0 size=     508kB time=00:00:08.40 bitrate= 495.4kbits/s   frame=  196 fps= 56 q=-1.0 Lsize=     651kB time=00:00:12.93 bitrate= 412.2kbits/s    \nvideo:648kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 0.389284%\n[libx264 @ 0x7fada2818000] frame I:2     Avg QP:20.10  size:  5888\n[libx264 @ 0x7fada2818000] frame P:126   Avg QP:22.22  size:  4340\n[libx264 @ 0x7fada2818000] frame B:68    Avg QP:23.94  size:  1537\n[libx264 @ 0x7fada2818000] consecutive B-frames: 43.9% 27.6%  6.1% 22.4%\n[libx264 @ 0x7fada2818000] mb I  I16..4: 31.4% 51.4% 17.2%\n[libx264 @ 0x7fada2818000] mb P  I16..4:  8.6% 10.2%  4.6%  P16..4: 46.2% 11.9%  4.2%  0.0%  0.0%    skip:14.2%\n[libx264 @ 0x7fada2818000] mb B  I16..4:  1.1%  0.6%  0.6%  B16..8: 52.3%  4.9%  0.8%  direct: 3.2%  skip:36.5%  L0:51.0% L1:45.1% BI: 3.9%\n[libx264 @ 0x7fada2818000] 8x8 transform intra:43.2% inter:63.2%\n[libx264 @ 0x7fada2818000] coded y,uvDC,uvAC intra: 42.6% 57.1% 10.4% inter: 19.2% 28.2% 0.7%\n[libx264 @ 0x7fada2818000] i16 v,h,dc,p: 20% 51% 10% 19%\n[libx264 @ 0x7fada2818000] i8 v,h,dc,ddl,ddr,vr,hd,vl,hu: 24% 38% 22%  2%  2%  2%  4%  2%  5%\n[libx264 @ 0x7fada2818000] i4 v,h,dc,ddl,ddr,vr,hd,vl,hu: 21% 43% 12%  3%  3%  3%  6%  4%  5%\n[libx264 @ 0x7fada2818000] i8c dc,h,v,p: 51% 32% 14%  3%\n[libx264 @ 0x7fada2818000] Weighted P-Frames: Y:7.1% UV:5.6%\n[libx264 @ 0x7fada2818000] ref P L0: 78.9% 10.4%  8.3%  2.3%  0.1%\n[libx264 @ 0x7fada2818000] ref B L0: 93.9%  5.6%  0.5%\n[libx264 @ 0x7fada2818000] ref B L1: 96.2%  3.8%\n[libx264 @ 0x7fada2818000] kb/s:405.98\n\n```\n\n到此，h264文件封装为.mp4格式的过程结束。\n\n查看2015-09-17.mp4 文件，如图\n\n![mp4文件详情](http://images2015.cnblogs.com/blog/719115/201509/719115-20150924200951959-1409932132.png)\n\n2015-09-17.mp4 文件可以使用Quick Time Player，VLC 正常播放。\n\n* 2015-09-17.mp4 文件的下载地址为：[2015-09-17.mp4](https://github.com/depthlove/test-files/blob/master/2015-09-17.mp4)\n* 2015-09-17 18:05:20.h264 文件的下载地址为：[2015-09-17 18:05:20.h264](https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264)\n\n","slug":"install-ffmpeg-to-MacOSX-and-use-ffmpeg-to-transform-h264-to-mp4","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzso001oqxepvxi5ohaa","content":"<p>ffmpeg功能强大，可以通过命令行来对音视频进行处理。为了使用其功能，我在Mac上对其进行了安装。</p>\n<p>我的Mac OS X 系统版本：OS X Yosemite, 10.10.14</p>\n<a id=\"more\"></a>\n<p>关于ffmpeg在Mac OS X上的编译，FFmpeg上有官方文档说明：<a href=\"https://trac.ffmpeg.org/wiki/CompilationGuide/MacOSX\" target=\"_blank\" rel=\"external\">https://trac.ffmpeg.org/wiki/CompilationGuide/MacOSX</a>。该文档给出了3种方法：</p>\n<ul>\n<li>ffmpeg through Homebrew</li>\n<li>Compiling FFmpeg yourself</li>\n<li>Manual install of the dependencies without Homebrew</li>\n</ul>\n<p>看了这三种方法的官方说明后，我选择了第一种，因为最简单。</p>\n<h3 id=\"首先，Mac上要安装Homebrew\"><a href=\"#首先，Mac上要安装Homebrew\" class=\"headerlink\" title=\"首先，Mac上要安装Homebrew\"></a>首先，Mac上要安装Homebrew</h3><p>在终端执行命令，<strong>ruby -e “$(curl -fsSL <a href=\"https://raw.githubusercontent.com/Homebrew/install/master/install\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/Homebrew/install/master/install</a>)”</strong></p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\">devtemobideMac-<span class=\"string\">mini:</span>~ sunminmin$ ruby -e <span class=\"string\">\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"</span></div><div class=\"line\"></div><div class=\"line\">==&gt; This script will <span class=\"string\">install:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/bin/</span>brew</div><div class=\"line\"></div><div class=\"line\"><span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/Library/</span>...</div><div class=\"line\"></div><div class=\"line\"><span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/share/</span>man<span class=\"regexp\">/man1/</span>brew<span class=\"number\">.1</span></div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">Press RETURN to <span class=\"keyword\">continue</span> or any other key to abort</div><div class=\"line\"></div><div class=\"line\">==&gt; <span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/sudo /</span>bin<span class=\"regexp\">/chmod g+rwx /</span>Library<span class=\"regexp\">/Caches/</span>Homebrew</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">Password:</div><div class=\"line\"></div><div class=\"line\">==&gt; Downloading and installing Homebrew...</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">remote: Counting <span class=\"string\">objects:</span> <span class=\"number\">225571</span>, done.</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">remote: Compressing <span class=\"string\">objects:</span> <span class=\"number\">100</span>% (<span class=\"number\">59354</span>/<span class=\"number\">59354</span>), done.</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">remote: Total <span class=\"number\">225571</span> (delta <span class=\"number\">165037</span>), reused <span class=\"number\">225482</span> (delta <span class=\"number\">164969</span>)</div><div class=\"line\"></div><div class=\"line\">Receiving <span class=\"string\">objects:</span> <span class=\"number\">100</span>% (<span class=\"number\">225571</span><span class=\"regexp\">/225571), 51.57 MiB | 1.19 MiB/</span>s, done.</div><div class=\"line\"></div><div class=\"line\">Resolving <span class=\"string\">deltas:</span> <span class=\"number\">100</span>% (<span class=\"number\">165037</span>/<span class=\"number\">165037</span>), done.</div><div class=\"line\"></div><div class=\"line\">From <span class=\"string\">https:</span><span class=\"comment\">//github.com/Homebrew/homebrew</span></div><div class=\"line\"></div><div class=\"line\"> * [<span class=\"keyword\">new</span> branch]      master     -&gt; origin/master</div><div class=\"line\"></div><div class=\"line\">HEAD is now at <span class=\"number\">82</span>d7dc4 <span class=\"string\">tomcat:</span> update <span class=\"number\">8.0</span><span class=\"number\">.17</span> bottle.</div><div class=\"line\"></div><div class=\"line\">==&gt; Installation successful!</div><div class=\"line\"></div><div class=\"line\">==&gt; Next steps</div><div class=\"line\"></div><div class=\"line\">Run `brew doctor` before you install anything</div><div class=\"line\"></div><div class=\"line\">Run `brew help` to get started</div></pre></td></tr></table></figure>\n<h3 id=\"其次，安装ffmpeg\"><a href=\"#其次，安装ffmpeg\" class=\"headerlink\" title=\"其次，安装ffmpeg\"></a>其次，安装ffmpeg</h3><p>在终端执行命令，<strong>brew install ffmpeg</strong></p>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">devtemobideMac-mini:~ sunminmin$ brew install ffmpeg</div><div class=\"line\">==&gt; Installing dependencies for ffmpeg: x264, lame, libvo-aacenc, xvid</div><div class=\"line\">==&gt; Installing ffmpeg dependency: x264</div><div class=\"line\">==&gt; Downloading https:<span class=\"comment\">//homebrew.bintray.com/bottles/x264-r2533.yosemite.bottle.</span></div><div class=\"line\">######################################################################## <span class=\"number\">100.0</span>%</div><div class=\"line\">==&gt; Pouring x264-r2533.yosemite.bottle.tar.gz</div><div class=\"line\">🍺  /usr/local/Cellar/x264/r2533: <span class=\"number\">9</span> files, <span class=\"number\">3.4</span>M</div><div class=\"line\">==&gt; Installing ffmpeg dependency: lame</div><div class=\"line\">==&gt; Downloading https:<span class=\"comment\">//homebrew.bintray.com/bottles/lame-3.99.5.yosemite.bottle</span></div><div class=\"line\">######################################################################## <span class=\"number\">100.0</span>%</div><div class=\"line\">==&gt; Pouring lame<span class=\"number\">-3.99</span><span class=\"number\">.5</span>.yosemite.bottle<span class=\"number\">.1</span>.tar.gz</div><div class=\"line\">🍺  /usr/local/Cellar/lame/<span class=\"number\">3.99</span><span class=\"number\">.5</span>: <span class=\"number\">25</span> files, <span class=\"number\">2.1</span>M</div><div class=\"line\">==&gt; Installing ffmpeg dependency: libvo-aacenc</div><div class=\"line\">==&gt; Downloading https:<span class=\"comment\">//homebrew.bintray.com/bottles/libvo-aacenc-0.1.3.yosemite</span></div><div class=\"line\">######################################################################## <span class=\"number\">100.0</span>%</div><div class=\"line\">==&gt; Pouring libvo-aacenc<span class=\"number\">-0.1</span><span class=\"number\">.3</span>.yosemite.bottle.tar.gz</div><div class=\"line\">🍺  /usr/local/Cellar/libvo-aacenc/<span class=\"number\">0.1</span><span class=\"number\">.3</span>: <span class=\"number\">15</span> files, <span class=\"number\">336</span>K</div><div class=\"line\">==&gt; Installing ffmpeg dependency: xvid</div><div class=\"line\">==&gt; Downloading https:<span class=\"comment\">//homebrew.bintray.com/bottles/xvid-1.3.3.yosemite.bottle.</span></div><div class=\"line\">######################################################################## <span class=\"number\">100.0</span>%</div><div class=\"line\">==&gt; Pouring xvid<span class=\"number\">-1.3</span><span class=\"number\">.3</span>.yosemite.bottle<span class=\"number\">.2</span>.tar.gz</div><div class=\"line\">🍺  /usr/local/Cellar/xvid/<span class=\"number\">1.3</span><span class=\"number\">.3</span>: <span class=\"number\">9</span> files, <span class=\"number\">1.3</span>M</div><div class=\"line\">==&gt; Installing ffmpeg</div><div class=\"line\">==&gt; Downloading https:<span class=\"comment\">//homebrew.bintray.com/bottles/ffmpeg-2.6.3.yosemite.bottle.ta</span></div><div class=\"line\">######################################################################## <span class=\"number\">100.0</span>%</div><div class=\"line\">==&gt; Pouring ffmpeg<span class=\"number\">-2.6</span><span class=\"number\">.3</span>.yosemite.bottle.tar.gz</div><div class=\"line\">==&gt; Caveats</div><div class=\"line\">FFmpeg has been built without libfaac for licensing reasons;</div><div class=\"line\">libvo-aacenc is used by default.</div><div class=\"line\">To install <span class=\"keyword\">with</span> libfaac, you can:</div><div class=\"line\">  brew reinstall ffmpeg --<span class=\"keyword\">with</span>-faac</div><div class=\"line\"></div><div class=\"line\">You can also use the experimental FFmpeg encoder, libfdk-aac, or</div><div class=\"line\">libvo_aacenc to encode AAC audio:</div><div class=\"line\">  ffmpeg -i input.wav -c:a aac -strict experimental output.m4a</div><div class=\"line\">Or:</div><div class=\"line\">  brew reinstall ffmpeg --<span class=\"keyword\">with</span>-fdk-aac</div><div class=\"line\">  ffmpeg -i input.wav -c:a libfdk_aac output.m4a</div><div class=\"line\">==&gt; Summary</div><div class=\"line\">🍺  /usr/local/Cellar/ffmpeg/<span class=\"number\">2.6</span><span class=\"number\">.3</span>: <span class=\"number\">204</span> files, <span class=\"number\">42</span>M</div></pre></td></tr></table></figure>\n<h3 id=\"再次，查看ffmpeg-info\"><a href=\"#再次，查看ffmpeg-info\" class=\"headerlink\" title=\"再次，查看ffmpeg info\"></a>再次，查看ffmpeg info</h3><p>在终端执行命令，<strong>brew info ffmpeg</strong></p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\">devtemobideMac-mini:~ sunminmin$ brew info ffmpeg</div><div class=\"line\">ffmpeg: stable 2.6.3 (bottled), HEAD</div><div class=\"line\">Play, record, convert, and stream audio and video</div><div class=\"line\">https://ffmpeg.org/</div><div class=\"line\"><span class=\"comment\">/usr/local/Cellar/ffmpeg/2.6.3 (204 files, 42M) *</span></div><div class=\"line\">  Poured from bottle</div><div class=\"line\">From: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/ffmpeg.rb</div><div class=\"line\">=<span class=\"ruby\">=&gt; Dependencies</span></div><div class=\"line\">Build: pkg-config ✘, texi2html ✘, yasm ✘</div><div class=\"line\">Recommended: x264 ✔, lame ✔, libvo-aacenc ✔, xvid ✔</div><div class=\"line\">Optional: faac ✘, fontconfig ✘, freetype ✘, theora ✘, libvorbis ✘, libvpx ✘, rtmpdump ✘, opencore-amr ✘, libass ✘, openjpeg ✘, speex ✘, schroedinger ✘, fdk-aac ✘, opus ✘, frei0r ✘, libcaca ✘, libbluray ✘, libsoxr ✘, libquvi ✘, libvidstab ✘, x265 ✘, openssl ✘, libssh ✘, webp ✘</div><div class=\"line\">=<span class=\"ruby\">=&gt; Options</span></div><div class=\"line\">-<span class=\"ruby\">-with-faac</span></div><div class=\"line\">\tBuild with faac support</div><div class=\"line\">-<span class=\"ruby\">-with-fdk-aac</span></div><div class=\"line\">\tEnable the Fraunhofer FDK AAC library</div><div class=\"line\">-<span class=\"ruby\">-with-ffplay</span></div><div class=\"line\">\tEnable FFplay media player</div><div class=\"line\">-<span class=\"ruby\">-with-fontconfig</span></div><div class=\"line\">\tBuild with fontconfig support</div><div class=\"line\">-<span class=\"ruby\">-with-freetype</span></div><div class=\"line\">\tBuild with freetype support</div><div class=\"line\">-<span class=\"ruby\">-with-frei0r</span></div><div class=\"line\">\tBuild with frei0r support</div><div class=\"line\">-<span class=\"ruby\">-with-libass</span></div><div class=\"line\">\tEnable ASS/SSA subtitle format</div><div class=\"line\">-<span class=\"ruby\">-with-libbluray</span></div><div class=\"line\">\tBuild with libbluray support</div><div class=\"line\">-<span class=\"ruby\">-with-libcaca</span></div><div class=\"line\">\tBuild with libcaca support</div><div class=\"line\">-<span class=\"ruby\">-with-libquvi</span></div><div class=\"line\">\tBuild with libquvi support</div><div class=\"line\">-<span class=\"ruby\">-with-libsoxr</span></div><div class=\"line\">\tEnable the soxr resample library</div><div class=\"line\">-<span class=\"ruby\">-with-libssh</span></div><div class=\"line\">\tEnable SFTP protocol via libssh</div><div class=\"line\">-<span class=\"ruby\">-with-libvidstab</span></div><div class=\"line\">\tEnable vid.stab support for video stabilization</div><div class=\"line\">-<span class=\"ruby\">-with-libvorbis</span></div><div class=\"line\">\tBuild with libvorbis support</div><div class=\"line\">-<span class=\"ruby\">-with-libvpx</span></div><div class=\"line\">\tBuild with libvpx support</div><div class=\"line\">-<span class=\"ruby\">-with-opencore-amr</span></div><div class=\"line\">\tEnable Opencore AMR NR/WB audio format</div><div class=\"line\">-<span class=\"ruby\">-with-openjpeg</span></div><div class=\"line\">\tEnable JPEG 2000 image format</div><div class=\"line\">-<span class=\"ruby\">-with-openssl</span></div><div class=\"line\">\tEnable SSL support</div><div class=\"line\">-<span class=\"ruby\">-with-opus</span></div><div class=\"line\">\tBuild with opus support</div><div class=\"line\">-<span class=\"ruby\">-with-rtmpdump</span></div><div class=\"line\">\tEnable RTMP protocol</div><div class=\"line\">-<span class=\"ruby\">-with-schroedinger</span></div><div class=\"line\">\tEnable Dirac video format</div><div class=\"line\">-<span class=\"ruby\">-with-speex</span></div><div class=\"line\">\tBuild with speex support</div><div class=\"line\">-<span class=\"ruby\">-with-theora</span></div><div class=\"line\">\tBuild with theora support</div><div class=\"line\">-<span class=\"ruby\">-with-tools</span></div><div class=\"line\">\tEnable additional FFmpeg tools</div><div class=\"line\">-<span class=\"ruby\">-with-webp</span></div><div class=\"line\">\tEnable using libwebp to encode WEBP images</div><div class=\"line\">-<span class=\"ruby\">-with-x265</span></div><div class=\"line\">\tEnable x265 encoder</div><div class=\"line\">-<span class=\"ruby\">-without-lame</span></div><div class=\"line\">\tDisable MP3 encoder</div><div class=\"line\">-<span class=\"ruby\">-without-libvo-aacenc</span></div><div class=\"line\">\tDisable VisualOn AAC encoder</div><div class=\"line\">-<span class=\"ruby\">-without-qtkit</span></div><div class=\"line\">\tDisable deprecated QuickTime framework</div><div class=\"line\">-<span class=\"ruby\">-without-x264</span></div><div class=\"line\">\tDisable H.264 encoder</div><div class=\"line\">-<span class=\"ruby\">-without-xvid</span></div><div class=\"line\">\tDisable Xvid MPEG-4 video encoder</div><div class=\"line\">-<span class=\"ruby\">-HEAD</span></div><div class=\"line\">\tInstall HEAD version</div><div class=\"line\">=<span class=\"ruby\">=&gt; Caveats</span></div><div class=\"line\">FFmpeg has been built without libfaac for licensing reasons;</div><div class=\"line\">libvo-aacenc is used by default.</div><div class=\"line\">To install with libfaac, you can:</div><div class=\"line\">  brew reinstall ffmpeg --with-faac</div><div class=\"line\"></div><div class=\"line\">You can also use the experimental FFmpeg encoder, libfdk-aac, or</div><div class=\"line\">libvo_aacenc to encode AAC audio:</div><div class=\"line\">  ffmpeg -i input.wav -c:a aac -strict experimental output.m4a</div><div class=\"line\">Or:</div><div class=\"line\">  brew reinstall ffmpeg --with-fdk-aac</div><div class=\"line\">  ffmpeg -i input.wav -c:a libfdk_aac output.m4a</div></pre></td></tr></table></figure>\n<p>经过这3步，现在就可以使用ffmpeg的强大功能了。</p>\n<p>现在ffmpeg的版本更新很快，今年3月份发布了 FFmpeg 2.6.1，7月份发布了 FFmpeg 2.7.2，中间还有一些其它版本，比如2.7，2.7.1，这些版本我都在iOS平台上编译使用过，今年9月份，FFmpeg 的版本更新到了2.8。今年，我见证了FFmpeg更新最频繁的的时刻。</p>\n<p>经过前面的3步，在Mac上安装了 ffmpeg 2.6.3 的版本，过段时间，homebrew上ffmpeg 的安装源就会更新，若想升级ffmpeg，就需要执行下面的第4步操作了。</p>\n<h3 id=\"最后，升级ffmpeg的版本\"><a href=\"#最后，升级ffmpeg的版本\" class=\"headerlink\" title=\"最后，升级ffmpeg的版本\"></a>最后，升级ffmpeg的版本</h3><p>若想升级ffmpeg的版本，可以在终端执行命令，<strong>brew update &amp;&amp; brew upgrade ffmpeg</strong></p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><p>安装好了ffmpeg，就要试试其功能了。采用文章<a href=\"http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/\">利用x264将iOS摄像头实时视频流编码为h264文件</a>配套工程<a href=\"https://github.com/depthlove/X264-Encode-for-iOS\" target=\"_blank\" rel=\"external\">X264-Encode-for-iOS</a>中的<strong>h264文件</strong>，该文件地址为<a href=\"https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264\" target=\"_blank\" rel=\"external\">2015-09-17 18:05:20.h264</a>，使用ffmpeg 命令将其打包为 <strong>.mp4容器格式的文件</strong></p>\n<p>将该h264文件下载，在终端上，执行命令进入存放该文件的目录</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">devtemobideMac-<span class=\"string\">mini:</span>~ sunminmin$ cd <span class=\"regexp\">/Users/</span>dev.temobi<span class=\"regexp\">/Desktop/</span>sunmmMainPrj/ZZ_Z_Github_clone</div></pre></td></tr></table></figure>\n<p>进入到该目录后，执行命令，<strong>ffmpeg -i 2015-09-17\\ 18_05_20.h264  2015-09-17.mp4</strong></p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">devtemobideMac-mini:ZZ_Z_Github_clone sunminmin$ ffmpeg -i <span class=\"number\">2015</span>-<span class=\"number\">09</span>-<span class=\"number\">17</span>\\ <span class=\"number\">18</span>_05_20.h264  <span class=\"number\">2015</span>-<span class=\"number\">09</span>-<span class=\"number\">17</span>.mp4</div><div class=\"line\">ffmpeg version <span class=\"number\">2.6</span>.<span class=\"number\">3</span> Copyright (c) <span class=\"number\">2000</span>-<span class=\"number\">2015</span> the FFmpeg developers</div><div class=\"line\">  built <span class=\"keyword\">with</span> Apple LLVM version <span class=\"number\">6.1</span>.<span class=\"number\">0</span> (clang-<span class=\"number\">602.0</span>.<span class=\"number\">53</span>) (based on LLVM <span class=\"number\">3.6</span>.<span class=\"number\">0</span>svn)</div><div class=\"line\">  configuration: <span class=\"attr\">--prefix=/usr/local/Cellar/ffmpeg/2.6.3</span> --enable-shared --enable-pthreads --enable-gpl --enable-version3 --enable-hardcoded-tables --enable-avresample <span class=\"attr\">--cc=clang</span> <span class=\"attr\">--host-cflags=</span> <span class=\"attr\">--host-ldflags=</span> --enable-libx264 --enable-libmp3lame --enable-libvo-aacenc --enable-libxvid --enable-vda</div><div class=\"line\">  libavutil      <span class=\"number\">54</span>. <span class=\"number\">20.100</span> / <span class=\"number\">54</span>. <span class=\"number\">20.100</span></div><div class=\"line\">  libavcodec     <span class=\"number\">56</span>. <span class=\"number\">26.100</span> / <span class=\"number\">56</span>. <span class=\"number\">26.100</span></div><div class=\"line\">  libavformat    <span class=\"number\">56</span>. <span class=\"number\">25.101</span> / <span class=\"number\">56</span>. <span class=\"number\">25.101</span></div><div class=\"line\">  libavdevice    <span class=\"number\">56</span>.  <span class=\"number\">4.100</span> / <span class=\"number\">56</span>.  <span class=\"number\">4.100</span></div><div class=\"line\">  libavfilter     <span class=\"number\">5</span>. <span class=\"number\">11.102</span> /  <span class=\"number\">5</span>. <span class=\"number\">11.102</span></div><div class=\"line\">  libavresample   <span class=\"number\">2</span>.  <span class=\"number\">1</span>.  <span class=\"number\">0</span> /  <span class=\"number\">2</span>.  <span class=\"number\">1</span>.  <span class=\"number\">0</span></div><div class=\"line\">  libswscale      <span class=\"number\">3</span>.  <span class=\"number\">1.101</span> /  <span class=\"number\">3</span>.  <span class=\"number\">1.101</span></div><div class=\"line\">  libswresample   <span class=\"number\">1</span>.  <span class=\"number\">1.100</span> /  <span class=\"number\">1</span>.  <span class=\"number\">1.100</span></div><div class=\"line\">  libpostproc    <span class=\"number\">53</span>.  <span class=\"number\">3.100</span> / <span class=\"number\">53</span>.  <span class=\"number\">3.100</span></div><div class=\"line\">Input <span class=\"comment\">#0, h264, from '2015-09-17 18_05_20.h264':</span></div><div class=\"line\">  Duration: N/A, bitrate: N/A</div><div class=\"line\">    Stream <span class=\"comment\">#0:0: Video: h264 (Constrained Baseline), yuv420p, 480x360, 15 fps, 15 tbr, 1200k tbn, 30 tbc</span></div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] using cpu capabilities: MMX2 SSE2Fast SSSE3 SSE4.<span class=\"number\">2</span> AVX</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] profile High, level <span class=\"number\">2.1</span></div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] <span class=\"number\">264</span> - core <span class=\"number\">144</span> r2533 c8a773e - H.<span class=\"number\">264</span>/MPEG-<span class=\"number\">4</span> AVC codec - Copyleft <span class=\"number\">2003</span>-<span class=\"number\">2015</span> - http://www.videolan.org/x264.html - options: <span class=\"attr\">cabac=1</span> <span class=\"attr\">ref=3</span> <span class=\"attr\">deblock=1:0:0</span> <span class=\"attr\">analyse=0x3:0x113</span> <span class=\"attr\">me=hex</span> <span class=\"attr\">subme=7</span> <span class=\"attr\">psy=1</span> <span class=\"attr\">psy_rd=1.00:0.00</span> <span class=\"attr\">mixed_ref=1</span> <span class=\"attr\">me_range=16</span> <span class=\"attr\">chroma_me=1</span> <span class=\"attr\">trellis=1</span> <span class=\"number\">8</span><span class=\"attr\">x8dct=1</span> <span class=\"attr\">cqm=0</span> <span class=\"attr\">deadzone=21,11</span> <span class=\"attr\">fast_pskip=1</span> <span class=\"attr\">chroma_qp_offset=-2</span> <span class=\"attr\">threads=6</span> <span class=\"attr\">lookahead_threads=1</span> <span class=\"attr\">sliced_threads=0</span> <span class=\"attr\">nr=0</span> <span class=\"attr\">decimate=1</span> <span class=\"attr\">interlaced=0</span> <span class=\"attr\">bluray_compat=0</span> <span class=\"attr\">constrained_intra=0</span> <span class=\"attr\">bframes=3</span> <span class=\"attr\">b_pyramid=2</span> <span class=\"attr\">b_adapt=1</span> <span class=\"attr\">b_bias=0</span> <span class=\"attr\">direct=1</span> <span class=\"attr\">weightb=1</span> <span class=\"attr\">open_gop=0</span> <span class=\"attr\">weightp=2</span> <span class=\"attr\">keyint=250</span> <span class=\"attr\">keyint_min=15</span> <span class=\"attr\">scenecut=40</span> <span class=\"attr\">intra_refresh=0</span> <span class=\"attr\">rc_lookahead=40</span> <span class=\"attr\">rc=crf</span> <span class=\"attr\">mbtree=1</span> <span class=\"attr\">crf=23.0</span> <span class=\"attr\">qcomp=0.60</span> <span class=\"attr\">qpmin=0</span> <span class=\"attr\">qpmax=69</span> <span class=\"attr\">qpstep=4</span> <span class=\"attr\">ip_ratio=1.40</span> <span class=\"attr\">aq=1:1.00</span></div><div class=\"line\">Output <span class=\"comment\">#0, mp4, to '2015-09-17.mp4':</span></div><div class=\"line\">  Metadata:</div><div class=\"line\">    encoder         : Lavf56.<span class=\"number\">25.101</span></div><div class=\"line\">    Stream <span class=\"comment\">#0:0: Video: h264 (libx264) ([33][0][0][0] / 0x0021), yuv420p, 480x360, q=-1--1, 15 fps, 15360 tbn, 15 tbc</span></div><div class=\"line\">    Metadata:</div><div class=\"line\">      encoder         : Lavc56.<span class=\"number\">26.100</span> libx264</div><div class=\"line\">Stream mapping:</div><div class=\"line\">  Stream <span class=\"comment\">#0:0 -&gt; #0:0 (h264 (native) -&gt; h264 (libx264))</span></div><div class=\"line\">Press [q] to stop, [?] for help</div><div class=\"line\"><span class=\"attr\">frame=</span>   <span class=\"number\">64</span> <span class=\"attr\">fps=0.0</span> <span class=\"attr\">q=27.0</span> <span class=\"attr\">size=</span>      <span class=\"number\">60</span>kB <span class=\"attr\">time=00:00:00.80</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">609.7</span>kbits/s   <span class=\"attr\">frame=</span>   <span class=\"number\">87</span> <span class=\"attr\">fps=</span> <span class=\"number\">85</span> <span class=\"attr\">q=27.0</span> <span class=\"attr\">size=</span>     <span class=\"number\">187</span>kB <span class=\"attr\">time=00:00:02.33</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">655.2</span>kbits/s   <span class=\"attr\">frame=</span>  <span class=\"number\">120</span> <span class=\"attr\">fps=</span> <span class=\"number\">77</span> <span class=\"attr\">q=27.0</span> <span class=\"attr\">size=</span>     <span class=\"number\">366</span>kB <span class=\"attr\">time=00:00:04.53</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">661.5</span>kbits/s   <span class=\"attr\">frame=</span>  <span class=\"number\">149</span> <span class=\"attr\">fps=</span> <span class=\"number\">72</span> <span class=\"attr\">q=27.0</span> <span class=\"attr\">size=</span>     <span class=\"number\">444</span>kB <span class=\"attr\">time=00:00:06.46</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">562.4</span>kbits/s   <span class=\"attr\">frame=</span>  <span class=\"number\">178</span> <span class=\"attr\">fps=</span> <span class=\"number\">69</span> <span class=\"attr\">q=27.0</span> <span class=\"attr\">size=</span>     <span class=\"number\">508</span>kB <span class=\"attr\">time=00:00:08.40</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">495.4</span>kbits/s   <span class=\"attr\">frame=</span>  <span class=\"number\">196</span> <span class=\"attr\">fps=</span> <span class=\"number\">56</span> <span class=\"attr\">q=-1.0</span> <span class=\"attr\">Lsize=</span>     <span class=\"number\">651</span>kB <span class=\"attr\">time=00:00:12.93</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">412.2</span>kbits/s    </div><div class=\"line\">video:<span class=\"number\">648</span>kB audio:<span class=\"number\">0</span>kB subtitle:<span class=\"number\">0</span>kB other streams:<span class=\"number\">0</span>kB global headers:<span class=\"number\">0</span>kB muxing overhead: <span class=\"number\">0.389284</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] frame I:<span class=\"number\">2</span>     Avg QP:<span class=\"number\">20.10</span>  size:  <span class=\"number\">5888</span></div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] frame P:<span class=\"number\">126</span>   Avg QP:<span class=\"number\">22.22</span>  size:  <span class=\"number\">4340</span></div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] frame B:<span class=\"number\">68</span>    Avg QP:<span class=\"number\">23.94</span>  size:  <span class=\"number\">1537</span></div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] consecutive B-frames: <span class=\"number\">43.9</span>% <span class=\"number\">27.6</span>%  <span class=\"number\">6.1</span>% <span class=\"number\">22.4</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] mb I  I16..<span class=\"number\">4</span>: <span class=\"number\">31.4</span>% <span class=\"number\">51.4</span>% <span class=\"number\">17.2</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] mb P  I16..<span class=\"number\">4</span>:  <span class=\"number\">8.6</span>% <span class=\"number\">10.2</span>%  <span class=\"number\">4.6</span>%  P16..<span class=\"number\">4</span>: <span class=\"number\">46.2</span>% <span class=\"number\">11.9</span>%  <span class=\"number\">4.2</span>%  <span class=\"number\">0.0</span>%  <span class=\"number\">0.0</span>%    skip:<span class=\"number\">14.2</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] mb B  I16..<span class=\"number\">4</span>:  <span class=\"number\">1.1</span>%  <span class=\"number\">0.6</span>%  <span class=\"number\">0.6</span>%  B16..<span class=\"number\">8</span>: <span class=\"number\">52.3</span>%  <span class=\"number\">4.9</span>%  <span class=\"number\">0.8</span>%  direct: <span class=\"number\">3.2</span>%  skip:<span class=\"number\">36.5</span>%  L0:<span class=\"number\">51.0</span>% L1:<span class=\"number\">45.1</span>% BI: <span class=\"number\">3.9</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] <span class=\"number\">8</span>x8 transform intra:<span class=\"number\">43.2</span>% inter:<span class=\"number\">63.2</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] coded y,uvDC,uvAC intra: <span class=\"number\">42.6</span>% <span class=\"number\">57.1</span>% <span class=\"number\">10.4</span>% inter: <span class=\"number\">19.2</span>% <span class=\"number\">28.2</span>% <span class=\"number\">0.7</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] i16 v,h,dc,p: <span class=\"number\">20</span>% <span class=\"number\">51</span>% <span class=\"number\">10</span>% <span class=\"number\">19</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] i8 v,h,dc,ddl,ddr,vr,hd,vl,hu: <span class=\"number\">24</span>% <span class=\"number\">38</span>% <span class=\"number\">22</span>%  <span class=\"number\">2</span>%  <span class=\"number\">2</span>%  <span class=\"number\">2</span>%  <span class=\"number\">4</span>%  <span class=\"number\">2</span>%  <span class=\"number\">5</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] i4 v,h,dc,ddl,ddr,vr,hd,vl,hu: <span class=\"number\">21</span>% <span class=\"number\">43</span>% <span class=\"number\">12</span>%  <span class=\"number\">3</span>%  <span class=\"number\">3</span>%  <span class=\"number\">3</span>%  <span class=\"number\">6</span>%  <span class=\"number\">4</span>%  <span class=\"number\">5</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] i8c dc,h,v,p: <span class=\"number\">51</span>% <span class=\"number\">32</span>% <span class=\"number\">14</span>%  <span class=\"number\">3</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] Weighted P-Frames: Y:<span class=\"number\">7.1</span>% UV:<span class=\"number\">5.6</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] ref P L0: <span class=\"number\">78.9</span>% <span class=\"number\">10.4</span>%  <span class=\"number\">8.3</span>%  <span class=\"number\">2.3</span>%  <span class=\"number\">0.1</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] ref B L0: <span class=\"number\">93.9</span>%  <span class=\"number\">5.6</span>%  <span class=\"number\">0.5</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] ref B L1: <span class=\"number\">96.2</span>%  <span class=\"number\">3.8</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] kb/s:<span class=\"number\">405.98</span></div></pre></td></tr></table></figure>\n<p>到此，h264文件封装为.mp4格式的过程结束。</p>\n<p>查看2015-09-17.mp4 文件，如图</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150924200951959-1409932132.png\" alt=\"mp4文件详情\"></p>\n<p>2015-09-17.mp4 文件可以使用Quick Time Player，VLC 正常播放。</p>\n<ul>\n<li>2015-09-17.mp4 文件的下载地址为：<a href=\"https://github.com/depthlove/test-files/blob/master/2015-09-17.mp4\" target=\"_blank\" rel=\"external\">2015-09-17.mp4</a></li>\n<li>2015-09-17 18:05:20.h264 文件的下载地址为：<a href=\"https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264\" target=\"_blank\" rel=\"external\">2015-09-17 18:05:20.h264</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>ffmpeg功能强大，可以通过命令行来对音视频进行处理。为了使用其功能，我在Mac上对其进行了安装。</p>\n<p>我的Mac OS X 系统版本：OS X Yosemite, 10.10.14</p>","more":"<p>关于ffmpeg在Mac OS X上的编译，FFmpeg上有官方文档说明：<a href=\"https://trac.ffmpeg.org/wiki/CompilationGuide/MacOSX\" target=\"_blank\" rel=\"external\">https://trac.ffmpeg.org/wiki/CompilationGuide/MacOSX</a>。该文档给出了3种方法：</p>\n<ul>\n<li>ffmpeg through Homebrew</li>\n<li>Compiling FFmpeg yourself</li>\n<li>Manual install of the dependencies without Homebrew</li>\n</ul>\n<p>看了这三种方法的官方说明后，我选择了第一种，因为最简单。</p>\n<h3 id=\"首先，Mac上要安装Homebrew\"><a href=\"#首先，Mac上要安装Homebrew\" class=\"headerlink\" title=\"首先，Mac上要安装Homebrew\"></a>首先，Mac上要安装Homebrew</h3><p>在终端执行命令，<strong>ruby -e “$(curl -fsSL <a href=\"https://raw.githubusercontent.com/Homebrew/install/master/install\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/Homebrew/install/master/install</a>)”</strong></p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\">devtemobideMac-<span class=\"string\">mini:</span>~ sunminmin$ ruby -e <span class=\"string\">\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"</span></div><div class=\"line\"></div><div class=\"line\">==&gt; This script will <span class=\"string\">install:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/bin/</span>brew</div><div class=\"line\"></div><div class=\"line\"><span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/Library/</span>...</div><div class=\"line\"></div><div class=\"line\"><span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/share/</span>man<span class=\"regexp\">/man1/</span>brew<span class=\"number\">.1</span></div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">Press RETURN to <span class=\"keyword\">continue</span> or any other key to abort</div><div class=\"line\"></div><div class=\"line\">==&gt; <span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/sudo /</span>bin<span class=\"regexp\">/chmod g+rwx /</span>Library<span class=\"regexp\">/Caches/</span>Homebrew</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">Password:</div><div class=\"line\"></div><div class=\"line\">==&gt; Downloading and installing Homebrew...</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">remote: Counting <span class=\"string\">objects:</span> <span class=\"number\">225571</span>, done.</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">remote: Compressing <span class=\"string\">objects:</span> <span class=\"number\">100</span>% (<span class=\"number\">59354</span>/<span class=\"number\">59354</span>), done.</div><div class=\"line\"><span class=\"symbol\"></span></div><div class=\"line\">remote: Total <span class=\"number\">225571</span> (delta <span class=\"number\">165037</span>), reused <span class=\"number\">225482</span> (delta <span class=\"number\">164969</span>)</div><div class=\"line\"></div><div class=\"line\">Receiving <span class=\"string\">objects:</span> <span class=\"number\">100</span>% (<span class=\"number\">225571</span><span class=\"regexp\">/225571), 51.57 MiB | 1.19 MiB/</span>s, done.</div><div class=\"line\"></div><div class=\"line\">Resolving <span class=\"string\">deltas:</span> <span class=\"number\">100</span>% (<span class=\"number\">165037</span>/<span class=\"number\">165037</span>), done.</div><div class=\"line\"></div><div class=\"line\">From <span class=\"string\">https:</span><span class=\"comment\">//github.com/Homebrew/homebrew</span></div><div class=\"line\"></div><div class=\"line\"> * [<span class=\"keyword\">new</span> branch]      master     -&gt; origin/master</div><div class=\"line\"></div><div class=\"line\">HEAD is now at <span class=\"number\">82</span>d7dc4 <span class=\"string\">tomcat:</span> update <span class=\"number\">8.0</span><span class=\"number\">.17</span> bottle.</div><div class=\"line\"></div><div class=\"line\">==&gt; Installation successful!</div><div class=\"line\"></div><div class=\"line\">==&gt; Next steps</div><div class=\"line\"></div><div class=\"line\">Run `brew doctor` before you install anything</div><div class=\"line\"></div><div class=\"line\">Run `brew help` to get started</div></pre></td></tr></table></figure>\n<h3 id=\"其次，安装ffmpeg\"><a href=\"#其次，安装ffmpeg\" class=\"headerlink\" title=\"其次，安装ffmpeg\"></a>其次，安装ffmpeg</h3><p>在终端执行命令，<strong>brew install ffmpeg</strong></p>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">devtemobideMac-mini:~ sunminmin$ brew install ffmpeg</div><div class=\"line\">==&gt; Installing dependencies for ffmpeg: x264, lame, libvo-aacenc, xvid</div><div class=\"line\">==&gt; Installing ffmpeg dependency: x264</div><div class=\"line\">==&gt; Downloading https:<span class=\"comment\">//homebrew.bintray.com/bottles/x264-r2533.yosemite.bottle.</span></div><div class=\"line\">######################################################################## <span class=\"number\">100.0</span>%</div><div class=\"line\">==&gt; Pouring x264-r2533.yosemite.bottle.tar.gz</div><div class=\"line\">🍺  /usr/local/Cellar/x264/r2533: <span class=\"number\">9</span> files, <span class=\"number\">3.4</span>M</div><div class=\"line\">==&gt; Installing ffmpeg dependency: lame</div><div class=\"line\">==&gt; Downloading https:<span class=\"comment\">//homebrew.bintray.com/bottles/lame-3.99.5.yosemite.bottle</span></div><div class=\"line\">######################################################################## <span class=\"number\">100.0</span>%</div><div class=\"line\">==&gt; Pouring lame<span class=\"number\">-3.99</span><span class=\"number\">.5</span>.yosemite.bottle<span class=\"number\">.1</span>.tar.gz</div><div class=\"line\">🍺  /usr/local/Cellar/lame/<span class=\"number\">3.99</span><span class=\"number\">.5</span>: <span class=\"number\">25</span> files, <span class=\"number\">2.1</span>M</div><div class=\"line\">==&gt; Installing ffmpeg dependency: libvo-aacenc</div><div class=\"line\">==&gt; Downloading https:<span class=\"comment\">//homebrew.bintray.com/bottles/libvo-aacenc-0.1.3.yosemite</span></div><div class=\"line\">######################################################################## <span class=\"number\">100.0</span>%</div><div class=\"line\">==&gt; Pouring libvo-aacenc<span class=\"number\">-0.1</span><span class=\"number\">.3</span>.yosemite.bottle.tar.gz</div><div class=\"line\">🍺  /usr/local/Cellar/libvo-aacenc/<span class=\"number\">0.1</span><span class=\"number\">.3</span>: <span class=\"number\">15</span> files, <span class=\"number\">336</span>K</div><div class=\"line\">==&gt; Installing ffmpeg dependency: xvid</div><div class=\"line\">==&gt; Downloading https:<span class=\"comment\">//homebrew.bintray.com/bottles/xvid-1.3.3.yosemite.bottle.</span></div><div class=\"line\">######################################################################## <span class=\"number\">100.0</span>%</div><div class=\"line\">==&gt; Pouring xvid<span class=\"number\">-1.3</span><span class=\"number\">.3</span>.yosemite.bottle<span class=\"number\">.2</span>.tar.gz</div><div class=\"line\">🍺  /usr/local/Cellar/xvid/<span class=\"number\">1.3</span><span class=\"number\">.3</span>: <span class=\"number\">9</span> files, <span class=\"number\">1.3</span>M</div><div class=\"line\">==&gt; Installing ffmpeg</div><div class=\"line\">==&gt; Downloading https:<span class=\"comment\">//homebrew.bintray.com/bottles/ffmpeg-2.6.3.yosemite.bottle.ta</span></div><div class=\"line\">######################################################################## <span class=\"number\">100.0</span>%</div><div class=\"line\">==&gt; Pouring ffmpeg<span class=\"number\">-2.6</span><span class=\"number\">.3</span>.yosemite.bottle.tar.gz</div><div class=\"line\">==&gt; Caveats</div><div class=\"line\">FFmpeg has been built without libfaac for licensing reasons;</div><div class=\"line\">libvo-aacenc is used by default.</div><div class=\"line\">To install <span class=\"keyword\">with</span> libfaac, you can:</div><div class=\"line\">  brew reinstall ffmpeg --<span class=\"keyword\">with</span>-faac</div><div class=\"line\"></div><div class=\"line\">You can also use the experimental FFmpeg encoder, libfdk-aac, or</div><div class=\"line\">libvo_aacenc to encode AAC audio:</div><div class=\"line\">  ffmpeg -i input.wav -c:a aac -strict experimental output.m4a</div><div class=\"line\">Or:</div><div class=\"line\">  brew reinstall ffmpeg --<span class=\"keyword\">with</span>-fdk-aac</div><div class=\"line\">  ffmpeg -i input.wav -c:a libfdk_aac output.m4a</div><div class=\"line\">==&gt; Summary</div><div class=\"line\">🍺  /usr/local/Cellar/ffmpeg/<span class=\"number\">2.6</span><span class=\"number\">.3</span>: <span class=\"number\">204</span> files, <span class=\"number\">42</span>M</div></pre></td></tr></table></figure>\n<h3 id=\"再次，查看ffmpeg-info\"><a href=\"#再次，查看ffmpeg-info\" class=\"headerlink\" title=\"再次，查看ffmpeg info\"></a>再次，查看ffmpeg info</h3><p>在终端执行命令，<strong>brew info ffmpeg</strong></p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\">devtemobideMac-mini:~ sunminmin$ brew info ffmpeg</div><div class=\"line\">ffmpeg: stable 2.6.3 (bottled), HEAD</div><div class=\"line\">Play, record, convert, and stream audio and video</div><div class=\"line\">https://ffmpeg.org/</div><div class=\"line\"><span class=\"comment\">/usr/local/Cellar/ffmpeg/2.6.3 (204 files, 42M) *</span></div><div class=\"line\">  Poured from bottle</div><div class=\"line\">From: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/ffmpeg.rb</div><div class=\"line\">=<span class=\"ruby\">=&gt; Dependencies</span></div><div class=\"line\">Build: pkg-config ✘, texi2html ✘, yasm ✘</div><div class=\"line\">Recommended: x264 ✔, lame ✔, libvo-aacenc ✔, xvid ✔</div><div class=\"line\">Optional: faac ✘, fontconfig ✘, freetype ✘, theora ✘, libvorbis ✘, libvpx ✘, rtmpdump ✘, opencore-amr ✘, libass ✘, openjpeg ✘, speex ✘, schroedinger ✘, fdk-aac ✘, opus ✘, frei0r ✘, libcaca ✘, libbluray ✘, libsoxr ✘, libquvi ✘, libvidstab ✘, x265 ✘, openssl ✘, libssh ✘, webp ✘</div><div class=\"line\">=<span class=\"ruby\">=&gt; Options</span></div><div class=\"line\">-<span class=\"ruby\">-with-faac</span></div><div class=\"line\">\tBuild with faac support</div><div class=\"line\">-<span class=\"ruby\">-with-fdk-aac</span></div><div class=\"line\">\tEnable the Fraunhofer FDK AAC library</div><div class=\"line\">-<span class=\"ruby\">-with-ffplay</span></div><div class=\"line\">\tEnable FFplay media player</div><div class=\"line\">-<span class=\"ruby\">-with-fontconfig</span></div><div class=\"line\">\tBuild with fontconfig support</div><div class=\"line\">-<span class=\"ruby\">-with-freetype</span></div><div class=\"line\">\tBuild with freetype support</div><div class=\"line\">-<span class=\"ruby\">-with-frei0r</span></div><div class=\"line\">\tBuild with frei0r support</div><div class=\"line\">-<span class=\"ruby\">-with-libass</span></div><div class=\"line\">\tEnable ASS/SSA subtitle format</div><div class=\"line\">-<span class=\"ruby\">-with-libbluray</span></div><div class=\"line\">\tBuild with libbluray support</div><div class=\"line\">-<span class=\"ruby\">-with-libcaca</span></div><div class=\"line\">\tBuild with libcaca support</div><div class=\"line\">-<span class=\"ruby\">-with-libquvi</span></div><div class=\"line\">\tBuild with libquvi support</div><div class=\"line\">-<span class=\"ruby\">-with-libsoxr</span></div><div class=\"line\">\tEnable the soxr resample library</div><div class=\"line\">-<span class=\"ruby\">-with-libssh</span></div><div class=\"line\">\tEnable SFTP protocol via libssh</div><div class=\"line\">-<span class=\"ruby\">-with-libvidstab</span></div><div class=\"line\">\tEnable vid.stab support for video stabilization</div><div class=\"line\">-<span class=\"ruby\">-with-libvorbis</span></div><div class=\"line\">\tBuild with libvorbis support</div><div class=\"line\">-<span class=\"ruby\">-with-libvpx</span></div><div class=\"line\">\tBuild with libvpx support</div><div class=\"line\">-<span class=\"ruby\">-with-opencore-amr</span></div><div class=\"line\">\tEnable Opencore AMR NR/WB audio format</div><div class=\"line\">-<span class=\"ruby\">-with-openjpeg</span></div><div class=\"line\">\tEnable JPEG 2000 image format</div><div class=\"line\">-<span class=\"ruby\">-with-openssl</span></div><div class=\"line\">\tEnable SSL support</div><div class=\"line\">-<span class=\"ruby\">-with-opus</span></div><div class=\"line\">\tBuild with opus support</div><div class=\"line\">-<span class=\"ruby\">-with-rtmpdump</span></div><div class=\"line\">\tEnable RTMP protocol</div><div class=\"line\">-<span class=\"ruby\">-with-schroedinger</span></div><div class=\"line\">\tEnable Dirac video format</div><div class=\"line\">-<span class=\"ruby\">-with-speex</span></div><div class=\"line\">\tBuild with speex support</div><div class=\"line\">-<span class=\"ruby\">-with-theora</span></div><div class=\"line\">\tBuild with theora support</div><div class=\"line\">-<span class=\"ruby\">-with-tools</span></div><div class=\"line\">\tEnable additional FFmpeg tools</div><div class=\"line\">-<span class=\"ruby\">-with-webp</span></div><div class=\"line\">\tEnable using libwebp to encode WEBP images</div><div class=\"line\">-<span class=\"ruby\">-with-x265</span></div><div class=\"line\">\tEnable x265 encoder</div><div class=\"line\">-<span class=\"ruby\">-without-lame</span></div><div class=\"line\">\tDisable MP3 encoder</div><div class=\"line\">-<span class=\"ruby\">-without-libvo-aacenc</span></div><div class=\"line\">\tDisable VisualOn AAC encoder</div><div class=\"line\">-<span class=\"ruby\">-without-qtkit</span></div><div class=\"line\">\tDisable deprecated QuickTime framework</div><div class=\"line\">-<span class=\"ruby\">-without-x264</span></div><div class=\"line\">\tDisable H.264 encoder</div><div class=\"line\">-<span class=\"ruby\">-without-xvid</span></div><div class=\"line\">\tDisable Xvid MPEG-4 video encoder</div><div class=\"line\">-<span class=\"ruby\">-HEAD</span></div><div class=\"line\">\tInstall HEAD version</div><div class=\"line\">=<span class=\"ruby\">=&gt; Caveats</span></div><div class=\"line\">FFmpeg has been built without libfaac for licensing reasons;</div><div class=\"line\">libvo-aacenc is used by default.</div><div class=\"line\">To install with libfaac, you can:</div><div class=\"line\">  brew reinstall ffmpeg --with-faac</div><div class=\"line\"></div><div class=\"line\">You can also use the experimental FFmpeg encoder, libfdk-aac, or</div><div class=\"line\">libvo_aacenc to encode AAC audio:</div><div class=\"line\">  ffmpeg -i input.wav -c:a aac -strict experimental output.m4a</div><div class=\"line\">Or:</div><div class=\"line\">  brew reinstall ffmpeg --with-fdk-aac</div><div class=\"line\">  ffmpeg -i input.wav -c:a libfdk_aac output.m4a</div></pre></td></tr></table></figure>\n<p>经过这3步，现在就可以使用ffmpeg的强大功能了。</p>\n<p>现在ffmpeg的版本更新很快，今年3月份发布了 FFmpeg 2.6.1，7月份发布了 FFmpeg 2.7.2，中间还有一些其它版本，比如2.7，2.7.1，这些版本我都在iOS平台上编译使用过，今年9月份，FFmpeg 的版本更新到了2.8。今年，我见证了FFmpeg更新最频繁的的时刻。</p>\n<p>经过前面的3步，在Mac上安装了 ffmpeg 2.6.3 的版本，过段时间，homebrew上ffmpeg 的安装源就会更新，若想升级ffmpeg，就需要执行下面的第4步操作了。</p>\n<h3 id=\"最后，升级ffmpeg的版本\"><a href=\"#最后，升级ffmpeg的版本\" class=\"headerlink\" title=\"最后，升级ffmpeg的版本\"></a>最后，升级ffmpeg的版本</h3><p>若想升级ffmpeg的版本，可以在终端执行命令，<strong>brew update &amp;&amp; brew upgrade ffmpeg</strong></p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><p>安装好了ffmpeg，就要试试其功能了。采用文章<a href=\"http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/\">利用x264将iOS摄像头实时视频流编码为h264文件</a>配套工程<a href=\"https://github.com/depthlove/X264-Encode-for-iOS\" target=\"_blank\" rel=\"external\">X264-Encode-for-iOS</a>中的<strong>h264文件</strong>，该文件地址为<a href=\"https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264\" target=\"_blank\" rel=\"external\">2015-09-17 18:05:20.h264</a>，使用ffmpeg 命令将其打包为 <strong>.mp4容器格式的文件</strong></p>\n<p>将该h264文件下载，在终端上，执行命令进入存放该文件的目录</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">devtemobideMac-<span class=\"string\">mini:</span>~ sunminmin$ cd <span class=\"regexp\">/Users/</span>dev.temobi<span class=\"regexp\">/Desktop/</span>sunmmMainPrj/ZZ_Z_Github_clone</div></pre></td></tr></table></figure>\n<p>进入到该目录后，执行命令，<strong>ffmpeg -i 2015-09-17\\ 18_05_20.h264  2015-09-17.mp4</strong></p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">devtemobideMac-mini:ZZ_Z_Github_clone sunminmin$ ffmpeg -i <span class=\"number\">2015</span>-<span class=\"number\">09</span>-<span class=\"number\">17</span>\\ <span class=\"number\">18</span>_05_20.h264  <span class=\"number\">2015</span>-<span class=\"number\">09</span>-<span class=\"number\">17</span>.mp4</div><div class=\"line\">ffmpeg version <span class=\"number\">2.6</span>.<span class=\"number\">3</span> Copyright (c) <span class=\"number\">2000</span>-<span class=\"number\">2015</span> the FFmpeg developers</div><div class=\"line\">  built <span class=\"keyword\">with</span> Apple LLVM version <span class=\"number\">6.1</span>.<span class=\"number\">0</span> (clang-<span class=\"number\">602.0</span>.<span class=\"number\">53</span>) (based on LLVM <span class=\"number\">3.6</span>.<span class=\"number\">0</span>svn)</div><div class=\"line\">  configuration: <span class=\"attr\">--prefix=/usr/local/Cellar/ffmpeg/2.6.3</span> --enable-shared --enable-pthreads --enable-gpl --enable-version3 --enable-hardcoded-tables --enable-avresample <span class=\"attr\">--cc=clang</span> <span class=\"attr\">--host-cflags=</span> <span class=\"attr\">--host-ldflags=</span> --enable-libx264 --enable-libmp3lame --enable-libvo-aacenc --enable-libxvid --enable-vda</div><div class=\"line\">  libavutil      <span class=\"number\">54</span>. <span class=\"number\">20.100</span> / <span class=\"number\">54</span>. <span class=\"number\">20.100</span></div><div class=\"line\">  libavcodec     <span class=\"number\">56</span>. <span class=\"number\">26.100</span> / <span class=\"number\">56</span>. <span class=\"number\">26.100</span></div><div class=\"line\">  libavformat    <span class=\"number\">56</span>. <span class=\"number\">25.101</span> / <span class=\"number\">56</span>. <span class=\"number\">25.101</span></div><div class=\"line\">  libavdevice    <span class=\"number\">56</span>.  <span class=\"number\">4.100</span> / <span class=\"number\">56</span>.  <span class=\"number\">4.100</span></div><div class=\"line\">  libavfilter     <span class=\"number\">5</span>. <span class=\"number\">11.102</span> /  <span class=\"number\">5</span>. <span class=\"number\">11.102</span></div><div class=\"line\">  libavresample   <span class=\"number\">2</span>.  <span class=\"number\">1</span>.  <span class=\"number\">0</span> /  <span class=\"number\">2</span>.  <span class=\"number\">1</span>.  <span class=\"number\">0</span></div><div class=\"line\">  libswscale      <span class=\"number\">3</span>.  <span class=\"number\">1.101</span> /  <span class=\"number\">3</span>.  <span class=\"number\">1.101</span></div><div class=\"line\">  libswresample   <span class=\"number\">1</span>.  <span class=\"number\">1.100</span> /  <span class=\"number\">1</span>.  <span class=\"number\">1.100</span></div><div class=\"line\">  libpostproc    <span class=\"number\">53</span>.  <span class=\"number\">3.100</span> / <span class=\"number\">53</span>.  <span class=\"number\">3.100</span></div><div class=\"line\">Input <span class=\"comment\">#0, h264, from '2015-09-17 18_05_20.h264':</span></div><div class=\"line\">  Duration: N/A, bitrate: N/A</div><div class=\"line\">    Stream <span class=\"comment\">#0:0: Video: h264 (Constrained Baseline), yuv420p, 480x360, 15 fps, 15 tbr, 1200k tbn, 30 tbc</span></div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] using cpu capabilities: MMX2 SSE2Fast SSSE3 SSE4.<span class=\"number\">2</span> AVX</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] profile High, level <span class=\"number\">2.1</span></div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] <span class=\"number\">264</span> - core <span class=\"number\">144</span> r2533 c8a773e - H.<span class=\"number\">264</span>/MPEG-<span class=\"number\">4</span> AVC codec - Copyleft <span class=\"number\">2003</span>-<span class=\"number\">2015</span> - http://www.videolan.org/x264.html - options: <span class=\"attr\">cabac=1</span> <span class=\"attr\">ref=3</span> <span class=\"attr\">deblock=1:0:0</span> <span class=\"attr\">analyse=0x3:0x113</span> <span class=\"attr\">me=hex</span> <span class=\"attr\">subme=7</span> <span class=\"attr\">psy=1</span> <span class=\"attr\">psy_rd=1.00:0.00</span> <span class=\"attr\">mixed_ref=1</span> <span class=\"attr\">me_range=16</span> <span class=\"attr\">chroma_me=1</span> <span class=\"attr\">trellis=1</span> <span class=\"number\">8</span><span class=\"attr\">x8dct=1</span> <span class=\"attr\">cqm=0</span> <span class=\"attr\">deadzone=21,11</span> <span class=\"attr\">fast_pskip=1</span> <span class=\"attr\">chroma_qp_offset=-2</span> <span class=\"attr\">threads=6</span> <span class=\"attr\">lookahead_threads=1</span> <span class=\"attr\">sliced_threads=0</span> <span class=\"attr\">nr=0</span> <span class=\"attr\">decimate=1</span> <span class=\"attr\">interlaced=0</span> <span class=\"attr\">bluray_compat=0</span> <span class=\"attr\">constrained_intra=0</span> <span class=\"attr\">bframes=3</span> <span class=\"attr\">b_pyramid=2</span> <span class=\"attr\">b_adapt=1</span> <span class=\"attr\">b_bias=0</span> <span class=\"attr\">direct=1</span> <span class=\"attr\">weightb=1</span> <span class=\"attr\">open_gop=0</span> <span class=\"attr\">weightp=2</span> <span class=\"attr\">keyint=250</span> <span class=\"attr\">keyint_min=15</span> <span class=\"attr\">scenecut=40</span> <span class=\"attr\">intra_refresh=0</span> <span class=\"attr\">rc_lookahead=40</span> <span class=\"attr\">rc=crf</span> <span class=\"attr\">mbtree=1</span> <span class=\"attr\">crf=23.0</span> <span class=\"attr\">qcomp=0.60</span> <span class=\"attr\">qpmin=0</span> <span class=\"attr\">qpmax=69</span> <span class=\"attr\">qpstep=4</span> <span class=\"attr\">ip_ratio=1.40</span> <span class=\"attr\">aq=1:1.00</span></div><div class=\"line\">Output <span class=\"comment\">#0, mp4, to '2015-09-17.mp4':</span></div><div class=\"line\">  Metadata:</div><div class=\"line\">    encoder         : Lavf56.<span class=\"number\">25.101</span></div><div class=\"line\">    Stream <span class=\"comment\">#0:0: Video: h264 (libx264) ([33][0][0][0] / 0x0021), yuv420p, 480x360, q=-1--1, 15 fps, 15360 tbn, 15 tbc</span></div><div class=\"line\">    Metadata:</div><div class=\"line\">      encoder         : Lavc56.<span class=\"number\">26.100</span> libx264</div><div class=\"line\">Stream mapping:</div><div class=\"line\">  Stream <span class=\"comment\">#0:0 -&gt; #0:0 (h264 (native) -&gt; h264 (libx264))</span></div><div class=\"line\">Press [q] to stop, [?] for help</div><div class=\"line\"><span class=\"attr\">frame=</span>   <span class=\"number\">64</span> <span class=\"attr\">fps=0.0</span> <span class=\"attr\">q=27.0</span> <span class=\"attr\">size=</span>      <span class=\"number\">60</span>kB <span class=\"attr\">time=00:00:00.80</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">609.7</span>kbits/s   <span class=\"attr\">frame=</span>   <span class=\"number\">87</span> <span class=\"attr\">fps=</span> <span class=\"number\">85</span> <span class=\"attr\">q=27.0</span> <span class=\"attr\">size=</span>     <span class=\"number\">187</span>kB <span class=\"attr\">time=00:00:02.33</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">655.2</span>kbits/s   <span class=\"attr\">frame=</span>  <span class=\"number\">120</span> <span class=\"attr\">fps=</span> <span class=\"number\">77</span> <span class=\"attr\">q=27.0</span> <span class=\"attr\">size=</span>     <span class=\"number\">366</span>kB <span class=\"attr\">time=00:00:04.53</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">661.5</span>kbits/s   <span class=\"attr\">frame=</span>  <span class=\"number\">149</span> <span class=\"attr\">fps=</span> <span class=\"number\">72</span> <span class=\"attr\">q=27.0</span> <span class=\"attr\">size=</span>     <span class=\"number\">444</span>kB <span class=\"attr\">time=00:00:06.46</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">562.4</span>kbits/s   <span class=\"attr\">frame=</span>  <span class=\"number\">178</span> <span class=\"attr\">fps=</span> <span class=\"number\">69</span> <span class=\"attr\">q=27.0</span> <span class=\"attr\">size=</span>     <span class=\"number\">508</span>kB <span class=\"attr\">time=00:00:08.40</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">495.4</span>kbits/s   <span class=\"attr\">frame=</span>  <span class=\"number\">196</span> <span class=\"attr\">fps=</span> <span class=\"number\">56</span> <span class=\"attr\">q=-1.0</span> <span class=\"attr\">Lsize=</span>     <span class=\"number\">651</span>kB <span class=\"attr\">time=00:00:12.93</span> <span class=\"attr\">bitrate=</span> <span class=\"number\">412.2</span>kbits/s    </div><div class=\"line\">video:<span class=\"number\">648</span>kB audio:<span class=\"number\">0</span>kB subtitle:<span class=\"number\">0</span>kB other streams:<span class=\"number\">0</span>kB global headers:<span class=\"number\">0</span>kB muxing overhead: <span class=\"number\">0.389284</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] frame I:<span class=\"number\">2</span>     Avg QP:<span class=\"number\">20.10</span>  size:  <span class=\"number\">5888</span></div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] frame P:<span class=\"number\">126</span>   Avg QP:<span class=\"number\">22.22</span>  size:  <span class=\"number\">4340</span></div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] frame B:<span class=\"number\">68</span>    Avg QP:<span class=\"number\">23.94</span>  size:  <span class=\"number\">1537</span></div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] consecutive B-frames: <span class=\"number\">43.9</span>% <span class=\"number\">27.6</span>%  <span class=\"number\">6.1</span>% <span class=\"number\">22.4</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] mb I  I16..<span class=\"number\">4</span>: <span class=\"number\">31.4</span>% <span class=\"number\">51.4</span>% <span class=\"number\">17.2</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] mb P  I16..<span class=\"number\">4</span>:  <span class=\"number\">8.6</span>% <span class=\"number\">10.2</span>%  <span class=\"number\">4.6</span>%  P16..<span class=\"number\">4</span>: <span class=\"number\">46.2</span>% <span class=\"number\">11.9</span>%  <span class=\"number\">4.2</span>%  <span class=\"number\">0.0</span>%  <span class=\"number\">0.0</span>%    skip:<span class=\"number\">14.2</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] mb B  I16..<span class=\"number\">4</span>:  <span class=\"number\">1.1</span>%  <span class=\"number\">0.6</span>%  <span class=\"number\">0.6</span>%  B16..<span class=\"number\">8</span>: <span class=\"number\">52.3</span>%  <span class=\"number\">4.9</span>%  <span class=\"number\">0.8</span>%  direct: <span class=\"number\">3.2</span>%  skip:<span class=\"number\">36.5</span>%  L0:<span class=\"number\">51.0</span>% L1:<span class=\"number\">45.1</span>% BI: <span class=\"number\">3.9</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] <span class=\"number\">8</span>x8 transform intra:<span class=\"number\">43.2</span>% inter:<span class=\"number\">63.2</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] coded y,uvDC,uvAC intra: <span class=\"number\">42.6</span>% <span class=\"number\">57.1</span>% <span class=\"number\">10.4</span>% inter: <span class=\"number\">19.2</span>% <span class=\"number\">28.2</span>% <span class=\"number\">0.7</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] i16 v,h,dc,p: <span class=\"number\">20</span>% <span class=\"number\">51</span>% <span class=\"number\">10</span>% <span class=\"number\">19</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] i8 v,h,dc,ddl,ddr,vr,hd,vl,hu: <span class=\"number\">24</span>% <span class=\"number\">38</span>% <span class=\"number\">22</span>%  <span class=\"number\">2</span>%  <span class=\"number\">2</span>%  <span class=\"number\">2</span>%  <span class=\"number\">4</span>%  <span class=\"number\">2</span>%  <span class=\"number\">5</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] i4 v,h,dc,ddl,ddr,vr,hd,vl,hu: <span class=\"number\">21</span>% <span class=\"number\">43</span>% <span class=\"number\">12</span>%  <span class=\"number\">3</span>%  <span class=\"number\">3</span>%  <span class=\"number\">3</span>%  <span class=\"number\">6</span>%  <span class=\"number\">4</span>%  <span class=\"number\">5</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] i8c dc,h,v,p: <span class=\"number\">51</span>% <span class=\"number\">32</span>% <span class=\"number\">14</span>%  <span class=\"number\">3</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] Weighted P-Frames: Y:<span class=\"number\">7.1</span>% UV:<span class=\"number\">5.6</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] ref P L0: <span class=\"number\">78.9</span>% <span class=\"number\">10.4</span>%  <span class=\"number\">8.3</span>%  <span class=\"number\">2.3</span>%  <span class=\"number\">0.1</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] ref B L0: <span class=\"number\">93.9</span>%  <span class=\"number\">5.6</span>%  <span class=\"number\">0.5</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] ref B L1: <span class=\"number\">96.2</span>%  <span class=\"number\">3.8</span>%</div><div class=\"line\">[libx264 @ <span class=\"number\">0</span>x7fada2818000] kb/s:<span class=\"number\">405.98</span></div></pre></td></tr></table></figure>\n<p>到此，h264文件封装为.mp4格式的过程结束。</p>\n<p>查看2015-09-17.mp4 文件，如图</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150924200951959-1409932132.png\" alt=\"mp4文件详情\"></p>\n<p>2015-09-17.mp4 文件可以使用Quick Time Player，VLC 正常播放。</p>\n<ul>\n<li>2015-09-17.mp4 文件的下载地址为：<a href=\"https://github.com/depthlove/test-files/blob/master/2015-09-17.mp4\" target=\"_blank\" rel=\"external\">2015-09-17.mp4</a></li>\n<li>2015-09-17 18:05:20.h264 文件的下载地址为：<a href=\"https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264\" target=\"_blank\" rel=\"external\">2015-09-17 18:05:20.h264</a></li>\n</ul>"},{"title":"离开深圳去北京","date":"2016-08-03T03:08:11.000Z","_content":"\n　　\t工作近3年，在深圳这个地方也待了2年半了。从毕业前对深圳的憧憬，到如今的匆匆离开，最终会被尘封到记忆深处。\n\n<!-- more -->\n\n　　\t在深圳的这几年，担任过iOS应用开发工程师，播放器开发工程师，编解码工程师，个人的职业经历比大部分it职场人士丰富些。经历过飘在眼前的大额金钱，源于自己初入社会被人带偏离，其中也有自己个人的原因，浮华之物本能入进口袋却失之交臂，但是看清了社会的一角；经历过给很多公司接入所在公司业务的技术支持，看到了形形色色、层次不齐的it职场人士，自己的提升非常之快；经历过公司被上市公司收购之后的资产重组和裁员；经历过一个人干一个平台底层开发，从无到有，到线上版本迭代多次。在深圳的2年多时间里，自己收获了什么？\n　　\t第一，个人的价值得到了提升。衡量自己价值最直接的标准是市场的薪资待遇。\n　　\t第二，个人的身体状况欠佳。这对于it人士来说，精力充沛和身体状况佳才能走的更高。\n　　\t第三，经历的事情太多，发现自己对人不那么热情了，受第一份工作的影响很大。\n　　\t人生所到之处，有爱、有恨、有悔、有悟。如何让自己活的更有价值，更有意义才是自己存于世的根本。\n　　\t\t\t\t\t\n　　\t            －－2016年8月3日，写于广东省深圳市南山区科技园。\n　　\t                                    亲笔\n\n\n","source":"_posts/leave-Shenzhen-for-Beijing.md","raw":"---\ntitle: 离开深圳去北京\ndate: 2016-08-03 11:08:11\ntags:\n- 工作\n- 生活\n---\n\n　　\t工作近3年，在深圳这个地方也待了2年半了。从毕业前对深圳的憧憬，到如今的匆匆离开，最终会被尘封到记忆深处。\n\n<!-- more -->\n\n　　\t在深圳的这几年，担任过iOS应用开发工程师，播放器开发工程师，编解码工程师，个人的职业经历比大部分it职场人士丰富些。经历过飘在眼前的大额金钱，源于自己初入社会被人带偏离，其中也有自己个人的原因，浮华之物本能入进口袋却失之交臂，但是看清了社会的一角；经历过给很多公司接入所在公司业务的技术支持，看到了形形色色、层次不齐的it职场人士，自己的提升非常之快；经历过公司被上市公司收购之后的资产重组和裁员；经历过一个人干一个平台底层开发，从无到有，到线上版本迭代多次。在深圳的2年多时间里，自己收获了什么？\n　　\t第一，个人的价值得到了提升。衡量自己价值最直接的标准是市场的薪资待遇。\n　　\t第二，个人的身体状况欠佳。这对于it人士来说，精力充沛和身体状况佳才能走的更高。\n　　\t第三，经历的事情太多，发现自己对人不那么热情了，受第一份工作的影响很大。\n　　\t人生所到之处，有爱、有恨、有悔、有悟。如何让自己活的更有价值，更有意义才是自己存于世的根本。\n　　\t\t\t\t\t\n　　\t            －－2016年8月3日，写于广东省深圳市南山区科技园。\n　　\t                                    亲笔\n\n\n","slug":"leave-Shenzhen-for-Beijing","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzsq001rqxeps8zj8vnc","content":"<p>　　    工作近3年，在深圳这个地方也待了2年半了。从毕业前对深圳的憧憬，到如今的匆匆离开，最终会被尘封到记忆深处。</p>\n<a id=\"more\"></a>\n<p>　　    在深圳的这几年，担任过iOS应用开发工程师，播放器开发工程师，编解码工程师，个人的职业经历比大部分it职场人士丰富些。经历过飘在眼前的大额金钱，源于自己初入社会被人带偏离，其中也有自己个人的原因，浮华之物本能入进口袋却失之交臂，但是看清了社会的一角；经历过给很多公司接入所在公司业务的技术支持，看到了形形色色、层次不齐的it职场人士，自己的提升非常之快；经历过公司被上市公司收购之后的资产重组和裁员；经历过一个人干一个平台底层开发，从无到有，到线上版本迭代多次。在深圳的2年多时间里，自己收获了什么？<br>　　    第一，个人的价值得到了提升。衡量自己价值最直接的标准是市场的薪资待遇。<br>　　    第二，个人的身体状况欠佳。这对于it人士来说，精力充沛和身体状况佳才能走的更高。<br>　　    第三，经历的事情太多，发现自己对人不那么热情了，受第一份工作的影响很大。<br>　　    人生所到之处，有爱、有恨、有悔、有悟。如何让自己活的更有价值，更有意义才是自己存于世的根本。<br>　　<br>　　                －－2016年8月3日，写于广东省深圳市南山区科技园。<br>　　                                        亲笔</p>\n","site":{"data":{}},"excerpt":"<p>　　    工作近3年，在深圳这个地方也待了2年半了。从毕业前对深圳的憧憬，到如今的匆匆离开，最终会被尘封到记忆深处。</p>","more":"<p>　　    在深圳的这几年，担任过iOS应用开发工程师，播放器开发工程师，编解码工程师，个人的职业经历比大部分it职场人士丰富些。经历过飘在眼前的大额金钱，源于自己初入社会被人带偏离，其中也有自己个人的原因，浮华之物本能入进口袋却失之交臂，但是看清了社会的一角；经历过给很多公司接入所在公司业务的技术支持，看到了形形色色、层次不齐的it职场人士，自己的提升非常之快；经历过公司被上市公司收购之后的资产重组和裁员；经历过一个人干一个平台底层开发，从无到有，到线上版本迭代多次。在深圳的2年多时间里，自己收获了什么？<br>　　    第一，个人的价值得到了提升。衡量自己价值最直接的标准是市场的薪资待遇。<br>　　    第二，个人的身体状况欠佳。这对于it人士来说，精力充沛和身体状况佳才能走的更高。<br>　　    第三，经历的事情太多，发现自己对人不那么热情了，受第一份工作的影响很大。<br>　　    人生所到之处，有爱、有恨、有悔、有悟。如何让自己活的更有价值，更有意义才是自己存于世的根本。<br>　　<br>　　                －－2016年8月3日，写于广东省深圳市南山区科技园。<br>　　                                        亲笔</p>"},{"title":"关于雷霄骅离世的思考","date":"2016-08-04T01:36:55.000Z","_content":"\n　　8月3号晚上6点多，坐在我旁边的同事说“网上有新闻说雷霄骅过世了”，听到这个消息，我的看法是这肯定是假消息，雷博士被人黑了。后来，各大门户网站包括凤凰网，人民日报官微都有报道雷神过世了。当确认这个消息时，我感觉到身边缺少了点东西，就是那种亲近事物忽然不在的痛楚。不想说雷神是人才，这个是事实，不用我多说。说天妒英才，我认为没有表达出一种更真诚更真切的惋惜。\n\n<!-- more -->\n　　雷神在流媒体行业做出的贡献很大，因为有很多做音视频技术的人员都有拜读过他写过的文章，博客中的文章在流媒体技术方面有广度和深度，条理清晰，易懂。作为音视频行业中的一员，曾经我从他的文章中获益匪浅。\n\n　　网上的报道和音视频技术qq群中，都说到雷博是一个认真负责，谦逊，好学的人，这些毫无争议。昨天，也就是8月3号，从晚上6点多一直到凌晨1点，雷博创建的音视频技术群，以及其它音视频技术开发群都表达了对这位年仅25岁即将博三的大神的不幸离世的可惜。谈论的焦点有以下几点：\n\n　　第一，募捐。对于募捐，有跟雷博父母沟通过的人说雷博父母不需要捐助。\n\n　　第二，创立基金。对于基金，有人表示成立有难度，有人同意。根据网上的消息以及跟雷博父母交流过人的说法，创立基金帮助一些学生是雷博父母的意愿，雷博父母将孩子的存款和学校的赔偿都用于这个基金。对于父母的这种做法，我非常敬佩。斯坦福大学的创建，不也是内心强大的父母为了孩子创立的吗。\n\n　　第三，完成雷博未完成的项目。雷博创建的音视频技术qq群中不乏音视频技术大牛，提议共同维护和开发雷博未完成的项目。对于这种做法，在项目方许可情形下，我是认同的，可以聊以慰藉离开的雷博，也可以让雷博的导师以及学校通过这件事能够深刻认识到学校研究生培养中的问题。\n\n　　第四，继续维护雷博创建的音视频技术论坛。雷博的音视频技术论坛，上线没多久，需要后期完善，我相信在广大音视频技术人才和IT开发人员的努力下，能够将雷博的精神延续下去。这种精神，是一种无偿分享技术心得的奉献。\n\n　　第五，工作和身体的权衡。身体是革命的本钱，但是很多时候我们身不由己，不得不为了工作，学习，生活去做损害自身身体健康的事情。有人说，遇到这种事博士不念了、换导师，经历过研究生学习生涯的人都会觉得这种说法是不靠谱的。说出这种看法的人，有没有身临其境，有没有经历过真正的高压科研，有没有从事过为老板卖命做项目的事。如果没有，我只想说你是幸运的，但同时你的看法是粗浅的。\n\n　　网上消息说中国传媒大学说雷博是酗酒死亡，还说雷博家属没有做尸检无法确认死因。对于国内这种遇事就撇清责任的做法，只有畜生可苟同。出事前在实验室工作，而且过世在实验室所在楼宇，学校有脸说没有责任。也没见雷博的导师发声，遇事躲闪，恐怕是深谙厚黑之学、中庸之道，却有违师德、良知。\n\n　　不谈论国家体制，不谈论高校体制，不谈论高校研究生培养方式，不谈论道德良知，不谈论法制，我真不知道该谈什么了，我不知道在我们这个国有什么是不能干的了。当博导硕导变身为老板，当学生变为被奴役被压榨的打工仔，我们所谓的师生之礼仪，传道解惑是不是都被现实的金钱和权欲吞噬了。\n\n\n\t写于深圳市南山区科技园，2016年8月4号，周四\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/lei-xiao-hua-passed-away.md","raw":"---\ntitle: 关于雷霄骅离世的思考\ndate: 2016-08-04 09:36:55\ntags:\n- 工作\n- 生活\n---\n\n　　8月3号晚上6点多，坐在我旁边的同事说“网上有新闻说雷霄骅过世了”，听到这个消息，我的看法是这肯定是假消息，雷博士被人黑了。后来，各大门户网站包括凤凰网，人民日报官微都有报道雷神过世了。当确认这个消息时，我感觉到身边缺少了点东西，就是那种亲近事物忽然不在的痛楚。不想说雷神是人才，这个是事实，不用我多说。说天妒英才，我认为没有表达出一种更真诚更真切的惋惜。\n\n<!-- more -->\n　　雷神在流媒体行业做出的贡献很大，因为有很多做音视频技术的人员都有拜读过他写过的文章，博客中的文章在流媒体技术方面有广度和深度，条理清晰，易懂。作为音视频行业中的一员，曾经我从他的文章中获益匪浅。\n\n　　网上的报道和音视频技术qq群中，都说到雷博是一个认真负责，谦逊，好学的人，这些毫无争议。昨天，也就是8月3号，从晚上6点多一直到凌晨1点，雷博创建的音视频技术群，以及其它音视频技术开发群都表达了对这位年仅25岁即将博三的大神的不幸离世的可惜。谈论的焦点有以下几点：\n\n　　第一，募捐。对于募捐，有跟雷博父母沟通过的人说雷博父母不需要捐助。\n\n　　第二，创立基金。对于基金，有人表示成立有难度，有人同意。根据网上的消息以及跟雷博父母交流过人的说法，创立基金帮助一些学生是雷博父母的意愿，雷博父母将孩子的存款和学校的赔偿都用于这个基金。对于父母的这种做法，我非常敬佩。斯坦福大学的创建，不也是内心强大的父母为了孩子创立的吗。\n\n　　第三，完成雷博未完成的项目。雷博创建的音视频技术qq群中不乏音视频技术大牛，提议共同维护和开发雷博未完成的项目。对于这种做法，在项目方许可情形下，我是认同的，可以聊以慰藉离开的雷博，也可以让雷博的导师以及学校通过这件事能够深刻认识到学校研究生培养中的问题。\n\n　　第四，继续维护雷博创建的音视频技术论坛。雷博的音视频技术论坛，上线没多久，需要后期完善，我相信在广大音视频技术人才和IT开发人员的努力下，能够将雷博的精神延续下去。这种精神，是一种无偿分享技术心得的奉献。\n\n　　第五，工作和身体的权衡。身体是革命的本钱，但是很多时候我们身不由己，不得不为了工作，学习，生活去做损害自身身体健康的事情。有人说，遇到这种事博士不念了、换导师，经历过研究生学习生涯的人都会觉得这种说法是不靠谱的。说出这种看法的人，有没有身临其境，有没有经历过真正的高压科研，有没有从事过为老板卖命做项目的事。如果没有，我只想说你是幸运的，但同时你的看法是粗浅的。\n\n　　网上消息说中国传媒大学说雷博是酗酒死亡，还说雷博家属没有做尸检无法确认死因。对于国内这种遇事就撇清责任的做法，只有畜生可苟同。出事前在实验室工作，而且过世在实验室所在楼宇，学校有脸说没有责任。也没见雷博的导师发声，遇事躲闪，恐怕是深谙厚黑之学、中庸之道，却有违师德、良知。\n\n　　不谈论国家体制，不谈论高校体制，不谈论高校研究生培养方式，不谈论道德良知，不谈论法制，我真不知道该谈什么了，我不知道在我们这个国有什么是不能干的了。当博导硕导变身为老板，当学生变为被奴役被压榨的打工仔，我们所谓的师生之礼仪，传道解惑是不是都被现实的金钱和权欲吞噬了。\n\n\n\t写于深圳市南山区科技园，2016年8月4号，周四\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"lei-xiao-hua-passed-away","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzss001tqxep58fn2lam","content":"<p>　　8月3号晚上6点多，坐在我旁边的同事说“网上有新闻说雷霄骅过世了”，听到这个消息，我的看法是这肯定是假消息，雷博士被人黑了。后来，各大门户网站包括凤凰网，人民日报官微都有报道雷神过世了。当确认这个消息时，我感觉到身边缺少了点东西，就是那种亲近事物忽然不在的痛楚。不想说雷神是人才，这个是事实，不用我多说。说天妒英才，我认为没有表达出一种更真诚更真切的惋惜。</p>\n<a id=\"more\"></a>\n<p>　　雷神在流媒体行业做出的贡献很大，因为有很多做音视频技术的人员都有拜读过他写过的文章，博客中的文章在流媒体技术方面有广度和深度，条理清晰，易懂。作为音视频行业中的一员，曾经我从他的文章中获益匪浅。</p>\n<p>　　网上的报道和音视频技术qq群中，都说到雷博是一个认真负责，谦逊，好学的人，这些毫无争议。昨天，也就是8月3号，从晚上6点多一直到凌晨1点，雷博创建的音视频技术群，以及其它音视频技术开发群都表达了对这位年仅25岁即将博三的大神的不幸离世的可惜。谈论的焦点有以下几点：</p>\n<p>　　第一，募捐。对于募捐，有跟雷博父母沟通过的人说雷博父母不需要捐助。</p>\n<p>　　第二，创立基金。对于基金，有人表示成立有难度，有人同意。根据网上的消息以及跟雷博父母交流过人的说法，创立基金帮助一些学生是雷博父母的意愿，雷博父母将孩子的存款和学校的赔偿都用于这个基金。对于父母的这种做法，我非常敬佩。斯坦福大学的创建，不也是内心强大的父母为了孩子创立的吗。</p>\n<p>　　第三，完成雷博未完成的项目。雷博创建的音视频技术qq群中不乏音视频技术大牛，提议共同维护和开发雷博未完成的项目。对于这种做法，在项目方许可情形下，我是认同的，可以聊以慰藉离开的雷博，也可以让雷博的导师以及学校通过这件事能够深刻认识到学校研究生培养中的问题。</p>\n<p>　　第四，继续维护雷博创建的音视频技术论坛。雷博的音视频技术论坛，上线没多久，需要后期完善，我相信在广大音视频技术人才和IT开发人员的努力下，能够将雷博的精神延续下去。这种精神，是一种无偿分享技术心得的奉献。</p>\n<p>　　第五，工作和身体的权衡。身体是革命的本钱，但是很多时候我们身不由己，不得不为了工作，学习，生活去做损害自身身体健康的事情。有人说，遇到这种事博士不念了、换导师，经历过研究生学习生涯的人都会觉得这种说法是不靠谱的。说出这种看法的人，有没有身临其境，有没有经历过真正的高压科研，有没有从事过为老板卖命做项目的事。如果没有，我只想说你是幸运的，但同时你的看法是粗浅的。</p>\n<p>　　网上消息说中国传媒大学说雷博是酗酒死亡，还说雷博家属没有做尸检无法确认死因。对于国内这种遇事就撇清责任的做法，只有畜生可苟同。出事前在实验室工作，而且过世在实验室所在楼宇，学校有脸说没有责任。也没见雷博的导师发声，遇事躲闪，恐怕是深谙厚黑之学、中庸之道，却有违师德、良知。</p>\n<p>　　不谈论国家体制，不谈论高校体制，不谈论高校研究生培养方式，不谈论道德良知，不谈论法制，我真不知道该谈什么了，我不知道在我们这个国有什么是不能干的了。当博导硕导变身为老板，当学生变为被奴役被压榨的打工仔，我们所谓的师生之礼仪，传道解惑是不是都被现实的金钱和权欲吞噬了。</p>\n<pre><code>写于深圳市南山区科技园，2016年8月4号，周四\n</code></pre>","site":{"data":{}},"excerpt":"<p>　　8月3号晚上6点多，坐在我旁边的同事说“网上有新闻说雷霄骅过世了”，听到这个消息，我的看法是这肯定是假消息，雷博士被人黑了。后来，各大门户网站包括凤凰网，人民日报官微都有报道雷神过世了。当确认这个消息时，我感觉到身边缺少了点东西，就是那种亲近事物忽然不在的痛楚。不想说雷神是人才，这个是事实，不用我多说。说天妒英才，我认为没有表达出一种更真诚更真切的惋惜。</p>","more":"<p>　　雷神在流媒体行业做出的贡献很大，因为有很多做音视频技术的人员都有拜读过他写过的文章，博客中的文章在流媒体技术方面有广度和深度，条理清晰，易懂。作为音视频行业中的一员，曾经我从他的文章中获益匪浅。</p>\n<p>　　网上的报道和音视频技术qq群中，都说到雷博是一个认真负责，谦逊，好学的人，这些毫无争议。昨天，也就是8月3号，从晚上6点多一直到凌晨1点，雷博创建的音视频技术群，以及其它音视频技术开发群都表达了对这位年仅25岁即将博三的大神的不幸离世的可惜。谈论的焦点有以下几点：</p>\n<p>　　第一，募捐。对于募捐，有跟雷博父母沟通过的人说雷博父母不需要捐助。</p>\n<p>　　第二，创立基金。对于基金，有人表示成立有难度，有人同意。根据网上的消息以及跟雷博父母交流过人的说法，创立基金帮助一些学生是雷博父母的意愿，雷博父母将孩子的存款和学校的赔偿都用于这个基金。对于父母的这种做法，我非常敬佩。斯坦福大学的创建，不也是内心强大的父母为了孩子创立的吗。</p>\n<p>　　第三，完成雷博未完成的项目。雷博创建的音视频技术qq群中不乏音视频技术大牛，提议共同维护和开发雷博未完成的项目。对于这种做法，在项目方许可情形下，我是认同的，可以聊以慰藉离开的雷博，也可以让雷博的导师以及学校通过这件事能够深刻认识到学校研究生培养中的问题。</p>\n<p>　　第四，继续维护雷博创建的音视频技术论坛。雷博的音视频技术论坛，上线没多久，需要后期完善，我相信在广大音视频技术人才和IT开发人员的努力下，能够将雷博的精神延续下去。这种精神，是一种无偿分享技术心得的奉献。</p>\n<p>　　第五，工作和身体的权衡。身体是革命的本钱，但是很多时候我们身不由己，不得不为了工作，学习，生活去做损害自身身体健康的事情。有人说，遇到这种事博士不念了、换导师，经历过研究生学习生涯的人都会觉得这种说法是不靠谱的。说出这种看法的人，有没有身临其境，有没有经历过真正的高压科研，有没有从事过为老板卖命做项目的事。如果没有，我只想说你是幸运的，但同时你的看法是粗浅的。</p>\n<p>　　网上消息说中国传媒大学说雷博是酗酒死亡，还说雷博家属没有做尸检无法确认死因。对于国内这种遇事就撇清责任的做法，只有畜生可苟同。出事前在实验室工作，而且过世在实验室所在楼宇，学校有脸说没有责任。也没见雷博的导师发声，遇事躲闪，恐怕是深谙厚黑之学、中庸之道，却有违师德、良知。</p>\n<p>　　不谈论国家体制，不谈论高校体制，不谈论高校研究生培养方式，不谈论道德良知，不谈论法制，我真不知道该谈什么了，我不知道在我们这个国有什么是不能干的了。当博导硕导变身为老板，当学生变为被奴役被压榨的打工仔，我们所谓的师生之礼仪，传道解惑是不是都被现实的金钱和权欲吞噬了。</p>\n<pre><code>写于深圳市南山区科技园，2016年8月4号，周四\n</code></pre>"},{"title":"移动端直播应用的开发流程","date":"2016-05-09T02:14:54.000Z","_content":"\n## Part 1. 推流端\n\n推流，就是将采集到的音频，视频数据通过流媒体协议发送到流媒体服务器。\n\n### 一、选择流媒体协议\n\n现在直播应用，采用RTMP协议居多，也有部分使用HLS协议。\n\n采用RTMP协议，就要看下它与流媒体服务器交互的过程，RTMP协议的默认端口是1935，采用TCP协议。并且需要了解FLV的封装格式。\n\n采用HLS协议，因为涉及到切片，延时会比较大，需要了解TS流。\n\n<!-- more -->\n\n### 二、采集音视频数据\n\n做直播，数据的来源不可缺少，就是采集摄像头，麦克风的数据。\n\niOS平台上采集音视频数据，需要使用AVFoundation.Framework框架，从captureSession会话的回调中获取音频，视频数据。\n\n### 三、硬编码，软编码音视频数据\n\n软编码就是利用CPU资源来压缩音视频数据，硬编码与之相反。\n\n软编码的话，现在广泛采用FFmpeg库结合编码库来实现，FFmpeg+X624来编码视频数据YUV/RGB输出H264数据，\nFFmpeg+fdk_aac来编码音频数据PCM输出AAC数据。\n\n### 四、根据所选流媒体协议封包音视频数据\n\n将音频，视频打包成packet。\n\n### 五、与服务器交互发送封包数据\n\n根据所选流媒体协议，发送相应指令连接服务器，连接服务器成功后，就可以发送packet数据了。\n\n\n## Part 2. 拉流端\n\n拉流，就是从流媒体服务器获取音频，视频数据。\n\n### 一、解析协议\n\n播放器端根据URL解析所用的流媒体协议（RTMP，HLS）。\n\n### 二、解封装\n\n解封装，就是demux的过程，从容器格式（FLV，TS）中，分离出音视频数据。\n\n### 三、解码\n\n解码，就是把获取到的数据解压缩，恢复成原始数据。解码就是将H264变成YUV，AAC变成PCM。\n\n解码可以使用软解码，硬解码。\n\n软解码就是利用CPU资源去解压缩数据，采用的方式是FFmpeg解码。\n\n硬解码，对于iOS平台来说，可以使用VideoToolbox.Framework（该框架只能在iOS 8.0及以上系统使用）\n硬解码视频数据。Android平台上，可以使用MediaCodec来硬解码视频数据。\n\n### 四、渲染数据\n\n采用OpenGL渲染YUV数据，呈现视频画面。将PCM送入设备的硬件资源播放，产生声音。\n\niOS播放流式音频，使用Audio Queue 的方式，即，利用AudioToolbox.Framework 框架。\n\n\n","source":"_posts/live-broadcast-development-process.md","raw":"---\ntitle: 移动端直播应用的开发流程\ndate: 2016-05-09 10:14:54\ntags:\n- 音视频处理\n---\n\n## Part 1. 推流端\n\n推流，就是将采集到的音频，视频数据通过流媒体协议发送到流媒体服务器。\n\n### 一、选择流媒体协议\n\n现在直播应用，采用RTMP协议居多，也有部分使用HLS协议。\n\n采用RTMP协议，就要看下它与流媒体服务器交互的过程，RTMP协议的默认端口是1935，采用TCP协议。并且需要了解FLV的封装格式。\n\n采用HLS协议，因为涉及到切片，延时会比较大，需要了解TS流。\n\n<!-- more -->\n\n### 二、采集音视频数据\n\n做直播，数据的来源不可缺少，就是采集摄像头，麦克风的数据。\n\niOS平台上采集音视频数据，需要使用AVFoundation.Framework框架，从captureSession会话的回调中获取音频，视频数据。\n\n### 三、硬编码，软编码音视频数据\n\n软编码就是利用CPU资源来压缩音视频数据，硬编码与之相反。\n\n软编码的话，现在广泛采用FFmpeg库结合编码库来实现，FFmpeg+X624来编码视频数据YUV/RGB输出H264数据，\nFFmpeg+fdk_aac来编码音频数据PCM输出AAC数据。\n\n### 四、根据所选流媒体协议封包音视频数据\n\n将音频，视频打包成packet。\n\n### 五、与服务器交互发送封包数据\n\n根据所选流媒体协议，发送相应指令连接服务器，连接服务器成功后，就可以发送packet数据了。\n\n\n## Part 2. 拉流端\n\n拉流，就是从流媒体服务器获取音频，视频数据。\n\n### 一、解析协议\n\n播放器端根据URL解析所用的流媒体协议（RTMP，HLS）。\n\n### 二、解封装\n\n解封装，就是demux的过程，从容器格式（FLV，TS）中，分离出音视频数据。\n\n### 三、解码\n\n解码，就是把获取到的数据解压缩，恢复成原始数据。解码就是将H264变成YUV，AAC变成PCM。\n\n解码可以使用软解码，硬解码。\n\n软解码就是利用CPU资源去解压缩数据，采用的方式是FFmpeg解码。\n\n硬解码，对于iOS平台来说，可以使用VideoToolbox.Framework（该框架只能在iOS 8.0及以上系统使用）\n硬解码视频数据。Android平台上，可以使用MediaCodec来硬解码视频数据。\n\n### 四、渲染数据\n\n采用OpenGL渲染YUV数据，呈现视频画面。将PCM送入设备的硬件资源播放，产生声音。\n\niOS播放流式音频，使用Audio Queue 的方式，即，利用AudioToolbox.Framework 框架。\n\n\n","slug":"live-broadcast-development-process","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzsx001vqxepfke5pw8s","content":"<h2 id=\"Part-1-推流端\"><a href=\"#Part-1-推流端\" class=\"headerlink\" title=\"Part 1. 推流端\"></a>Part 1. 推流端</h2><p>推流，就是将采集到的音频，视频数据通过流媒体协议发送到流媒体服务器。</p>\n<h3 id=\"一、选择流媒体协议\"><a href=\"#一、选择流媒体协议\" class=\"headerlink\" title=\"一、选择流媒体协议\"></a>一、选择流媒体协议</h3><p>现在直播应用，采用RTMP协议居多，也有部分使用HLS协议。</p>\n<p>采用RTMP协议，就要看下它与流媒体服务器交互的过程，RTMP协议的默认端口是1935，采用TCP协议。并且需要了解FLV的封装格式。</p>\n<p>采用HLS协议，因为涉及到切片，延时会比较大，需要了解TS流。</p>\n<a id=\"more\"></a>\n<h3 id=\"二、采集音视频数据\"><a href=\"#二、采集音视频数据\" class=\"headerlink\" title=\"二、采集音视频数据\"></a>二、采集音视频数据</h3><p>做直播，数据的来源不可缺少，就是采集摄像头，麦克风的数据。</p>\n<p>iOS平台上采集音视频数据，需要使用AVFoundation.Framework框架，从captureSession会话的回调中获取音频，视频数据。</p>\n<h3 id=\"三、硬编码，软编码音视频数据\"><a href=\"#三、硬编码，软编码音视频数据\" class=\"headerlink\" title=\"三、硬编码，软编码音视频数据\"></a>三、硬编码，软编码音视频数据</h3><p>软编码就是利用CPU资源来压缩音视频数据，硬编码与之相反。</p>\n<p>软编码的话，现在广泛采用FFmpeg库结合编码库来实现，FFmpeg+X624来编码视频数据YUV/RGB输出H264数据，<br>FFmpeg+fdk_aac来编码音频数据PCM输出AAC数据。</p>\n<h3 id=\"四、根据所选流媒体协议封包音视频数据\"><a href=\"#四、根据所选流媒体协议封包音视频数据\" class=\"headerlink\" title=\"四、根据所选流媒体协议封包音视频数据\"></a>四、根据所选流媒体协议封包音视频数据</h3><p>将音频，视频打包成packet。</p>\n<h3 id=\"五、与服务器交互发送封包数据\"><a href=\"#五、与服务器交互发送封包数据\" class=\"headerlink\" title=\"五、与服务器交互发送封包数据\"></a>五、与服务器交互发送封包数据</h3><p>根据所选流媒体协议，发送相应指令连接服务器，连接服务器成功后，就可以发送packet数据了。</p>\n<h2 id=\"Part-2-拉流端\"><a href=\"#Part-2-拉流端\" class=\"headerlink\" title=\"Part 2. 拉流端\"></a>Part 2. 拉流端</h2><p>拉流，就是从流媒体服务器获取音频，视频数据。</p>\n<h3 id=\"一、解析协议\"><a href=\"#一、解析协议\" class=\"headerlink\" title=\"一、解析协议\"></a>一、解析协议</h3><p>播放器端根据URL解析所用的流媒体协议（RTMP，HLS）。</p>\n<h3 id=\"二、解封装\"><a href=\"#二、解封装\" class=\"headerlink\" title=\"二、解封装\"></a>二、解封装</h3><p>解封装，就是demux的过程，从容器格式（FLV，TS）中，分离出音视频数据。</p>\n<h3 id=\"三、解码\"><a href=\"#三、解码\" class=\"headerlink\" title=\"三、解码\"></a>三、解码</h3><p>解码，就是把获取到的数据解压缩，恢复成原始数据。解码就是将H264变成YUV，AAC变成PCM。</p>\n<p>解码可以使用软解码，硬解码。</p>\n<p>软解码就是利用CPU资源去解压缩数据，采用的方式是FFmpeg解码。</p>\n<p>硬解码，对于iOS平台来说，可以使用VideoToolbox.Framework（该框架只能在iOS 8.0及以上系统使用）<br>硬解码视频数据。Android平台上，可以使用MediaCodec来硬解码视频数据。</p>\n<h3 id=\"四、渲染数据\"><a href=\"#四、渲染数据\" class=\"headerlink\" title=\"四、渲染数据\"></a>四、渲染数据</h3><p>采用OpenGL渲染YUV数据，呈现视频画面。将PCM送入设备的硬件资源播放，产生声音。</p>\n<p>iOS播放流式音频，使用Audio Queue 的方式，即，利用AudioToolbox.Framework 框架。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Part-1-推流端\"><a href=\"#Part-1-推流端\" class=\"headerlink\" title=\"Part 1. 推流端\"></a>Part 1. 推流端</h2><p>推流，就是将采集到的音频，视频数据通过流媒体协议发送到流媒体服务器。</p>\n<h3 id=\"一、选择流媒体协议\"><a href=\"#一、选择流媒体协议\" class=\"headerlink\" title=\"一、选择流媒体协议\"></a>一、选择流媒体协议</h3><p>现在直播应用，采用RTMP协议居多，也有部分使用HLS协议。</p>\n<p>采用RTMP协议，就要看下它与流媒体服务器交互的过程，RTMP协议的默认端口是1935，采用TCP协议。并且需要了解FLV的封装格式。</p>\n<p>采用HLS协议，因为涉及到切片，延时会比较大，需要了解TS流。</p>","more":"<h3 id=\"二、采集音视频数据\"><a href=\"#二、采集音视频数据\" class=\"headerlink\" title=\"二、采集音视频数据\"></a>二、采集音视频数据</h3><p>做直播，数据的来源不可缺少，就是采集摄像头，麦克风的数据。</p>\n<p>iOS平台上采集音视频数据，需要使用AVFoundation.Framework框架，从captureSession会话的回调中获取音频，视频数据。</p>\n<h3 id=\"三、硬编码，软编码音视频数据\"><a href=\"#三、硬编码，软编码音视频数据\" class=\"headerlink\" title=\"三、硬编码，软编码音视频数据\"></a>三、硬编码，软编码音视频数据</h3><p>软编码就是利用CPU资源来压缩音视频数据，硬编码与之相反。</p>\n<p>软编码的话，现在广泛采用FFmpeg库结合编码库来实现，FFmpeg+X624来编码视频数据YUV/RGB输出H264数据，<br>FFmpeg+fdk_aac来编码音频数据PCM输出AAC数据。</p>\n<h3 id=\"四、根据所选流媒体协议封包音视频数据\"><a href=\"#四、根据所选流媒体协议封包音视频数据\" class=\"headerlink\" title=\"四、根据所选流媒体协议封包音视频数据\"></a>四、根据所选流媒体协议封包音视频数据</h3><p>将音频，视频打包成packet。</p>\n<h3 id=\"五、与服务器交互发送封包数据\"><a href=\"#五、与服务器交互发送封包数据\" class=\"headerlink\" title=\"五、与服务器交互发送封包数据\"></a>五、与服务器交互发送封包数据</h3><p>根据所选流媒体协议，发送相应指令连接服务器，连接服务器成功后，就可以发送packet数据了。</p>\n<h2 id=\"Part-2-拉流端\"><a href=\"#Part-2-拉流端\" class=\"headerlink\" title=\"Part 2. 拉流端\"></a>Part 2. 拉流端</h2><p>拉流，就是从流媒体服务器获取音频，视频数据。</p>\n<h3 id=\"一、解析协议\"><a href=\"#一、解析协议\" class=\"headerlink\" title=\"一、解析协议\"></a>一、解析协议</h3><p>播放器端根据URL解析所用的流媒体协议（RTMP，HLS）。</p>\n<h3 id=\"二、解封装\"><a href=\"#二、解封装\" class=\"headerlink\" title=\"二、解封装\"></a>二、解封装</h3><p>解封装，就是demux的过程，从容器格式（FLV，TS）中，分离出音视频数据。</p>\n<h3 id=\"三、解码\"><a href=\"#三、解码\" class=\"headerlink\" title=\"三、解码\"></a>三、解码</h3><p>解码，就是把获取到的数据解压缩，恢复成原始数据。解码就是将H264变成YUV，AAC变成PCM。</p>\n<p>解码可以使用软解码，硬解码。</p>\n<p>软解码就是利用CPU资源去解压缩数据，采用的方式是FFmpeg解码。</p>\n<p>硬解码，对于iOS平台来说，可以使用VideoToolbox.Framework（该框架只能在iOS 8.0及以上系统使用）<br>硬解码视频数据。Android平台上，可以使用MediaCodec来硬解码视频数据。</p>\n<h3 id=\"四、渲染数据\"><a href=\"#四、渲染数据\" class=\"headerlink\" title=\"四、渲染数据\"></a>四、渲染数据</h3><p>采用OpenGL渲染YUV数据，呈现视频画面。将PCM送入设备的硬件资源播放，产生声音。</p>\n<p>iOS播放流式音频，使用Audio Queue 的方式，即，利用AudioToolbox.Framework 框架。</p>"},{"title":"对当下的思考","date":"2016-10-02T14:15:50.000Z","_content":"\n　　 当下是未来的基础，未来的憧憬犹如当下的场景，都离不开物质和精神的依赖。由于工作的变动，身心很是疲惫，看事待物都游离着低迷的气息。表面上的光鲜，私底下的痛楚和悲凉，只有在夜深人静的时候，在心底强行抹掉，把当前遇到的事情当作一种对人生的考验，痛而高仰头颅散发出坚而不催的积极向上的气息。\n\n　　 在北京的日子，自己的忙碌，无暇接听家人的电话。当自己闲下来的时候，觉得自己真的好无力。生活的现实，不得不让人在最应该珍惜一种感情的时候，却以一种强硬的语气和态度应对。父母面容的沧桑，不断苍老的白发袭来，身体没有以前那样灵活，我将这些看在心里，说不出的酸楚。我信奉的一句话是“美好的东西，都是煎熬之后才得到的”，同时欲望的膨胀，也是煎熬的过程中加剧痛苦的催化剂。没有美好的结局，只希望捕捉到的过程中的瞬间和阶段是一段美好的回忆。珍惜平时所见所遇，无需过急赶往远方，柔和的心态才是体验生活的缓冲剂。\n\n　　 回顾自己的生活，走得太快，提前透支自己，脑中搜寻近几年美好的记忆寥寥无几，大部分是自己为了追逐欲望的场面。近几年活过吗，为谁活过，答案是为了欲望活着。\n\n<!-- more -->\n　　 在北京的日子，很感谢一起走过七年的同学，在自己精神压力最大的时候，约我一起出去游玩，驱除我的压力。在自己需要找人诉说的时候，Jane 学妹能够倾听我的充满情绪化的言语。人生阶段，该散的人散了，还在身边的，那就是自己最应该珍惜的人。人生中有几个知己，自己应该知足了。\n\n　　 毕业2年多一点，心中最愧疚面对的人，是自己的父母。自己大大小小的事情，他们都为我操心。看着父母的付出，我有着意志前行。一个人，精神是根基，精神若没了，也就废了。\n\n　　 念博士，这一直是我心中放不下的一件事。以我现在的精力已经根本无力施行。就把它当做一个美好的憧憬，进而不断激励自己去努力、去奋斗。\n\n　　 什么时候是创业的时机，我认为是在三十五岁左右。\n\n　　 当下就是认清自己，知长补短，让自己具备审时度势作出决策的能力。\n\n　　 人生之乐，有一乐是阅读，品着茶，看着书，思绪萦绕，穿越内心和精神是多么的充实。\n\n`2016年10月2日 亲笔`\n\n\n\n","source":"_posts/living-in-the-present.md","raw":"---\ntitle: 对当下的思考\ndate: 2016-10-02 22:15:50\ntags:\n- 生活\n---\n\n　　 当下是未来的基础，未来的憧憬犹如当下的场景，都离不开物质和精神的依赖。由于工作的变动，身心很是疲惫，看事待物都游离着低迷的气息。表面上的光鲜，私底下的痛楚和悲凉，只有在夜深人静的时候，在心底强行抹掉，把当前遇到的事情当作一种对人生的考验，痛而高仰头颅散发出坚而不催的积极向上的气息。\n\n　　 在北京的日子，自己的忙碌，无暇接听家人的电话。当自己闲下来的时候，觉得自己真的好无力。生活的现实，不得不让人在最应该珍惜一种感情的时候，却以一种强硬的语气和态度应对。父母面容的沧桑，不断苍老的白发袭来，身体没有以前那样灵活，我将这些看在心里，说不出的酸楚。我信奉的一句话是“美好的东西，都是煎熬之后才得到的”，同时欲望的膨胀，也是煎熬的过程中加剧痛苦的催化剂。没有美好的结局，只希望捕捉到的过程中的瞬间和阶段是一段美好的回忆。珍惜平时所见所遇，无需过急赶往远方，柔和的心态才是体验生活的缓冲剂。\n\n　　 回顾自己的生活，走得太快，提前透支自己，脑中搜寻近几年美好的记忆寥寥无几，大部分是自己为了追逐欲望的场面。近几年活过吗，为谁活过，答案是为了欲望活着。\n\n<!-- more -->\n　　 在北京的日子，很感谢一起走过七年的同学，在自己精神压力最大的时候，约我一起出去游玩，驱除我的压力。在自己需要找人诉说的时候，Jane 学妹能够倾听我的充满情绪化的言语。人生阶段，该散的人散了，还在身边的，那就是自己最应该珍惜的人。人生中有几个知己，自己应该知足了。\n\n　　 毕业2年多一点，心中最愧疚面对的人，是自己的父母。自己大大小小的事情，他们都为我操心。看着父母的付出，我有着意志前行。一个人，精神是根基，精神若没了，也就废了。\n\n　　 念博士，这一直是我心中放不下的一件事。以我现在的精力已经根本无力施行。就把它当做一个美好的憧憬，进而不断激励自己去努力、去奋斗。\n\n　　 什么时候是创业的时机，我认为是在三十五岁左右。\n\n　　 当下就是认清自己，知长补短，让自己具备审时度势作出决策的能力。\n\n　　 人生之乐，有一乐是阅读，品着茶，看着书，思绪萦绕，穿越内心和精神是多么的充实。\n\n`2016年10月2日 亲笔`\n\n\n\n","slug":"living-in-the-present","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzt0001xqxeplwrnp113","content":"<p>　　 当下是未来的基础，未来的憧憬犹如当下的场景，都离不开物质和精神的依赖。由于工作的变动，身心很是疲惫，看事待物都游离着低迷的气息。表面上的光鲜，私底下的痛楚和悲凉，只有在夜深人静的时候，在心底强行抹掉，把当前遇到的事情当作一种对人生的考验，痛而高仰头颅散发出坚而不催的积极向上的气息。</p>\n<p>　　 在北京的日子，自己的忙碌，无暇接听家人的电话。当自己闲下来的时候，觉得自己真的好无力。生活的现实，不得不让人在最应该珍惜一种感情的时候，却以一种强硬的语气和态度应对。父母面容的沧桑，不断苍老的白发袭来，身体没有以前那样灵活，我将这些看在心里，说不出的酸楚。我信奉的一句话是“美好的东西，都是煎熬之后才得到的”，同时欲望的膨胀，也是煎熬的过程中加剧痛苦的催化剂。没有美好的结局，只希望捕捉到的过程中的瞬间和阶段是一段美好的回忆。珍惜平时所见所遇，无需过急赶往远方，柔和的心态才是体验生活的缓冲剂。</p>\n<p>　　 回顾自己的生活，走得太快，提前透支自己，脑中搜寻近几年美好的记忆寥寥无几，大部分是自己为了追逐欲望的场面。近几年活过吗，为谁活过，答案是为了欲望活着。</p>\n<a id=\"more\"></a>\n<p>　　 在北京的日子，很感谢一起走过七年的同学，在自己精神压力最大的时候，约我一起出去游玩，驱除我的压力。在自己需要找人诉说的时候，Jane 学妹能够倾听我的充满情绪化的言语。人生阶段，该散的人散了，还在身边的，那就是自己最应该珍惜的人。人生中有几个知己，自己应该知足了。</p>\n<p>　　 毕业2年多一点，心中最愧疚面对的人，是自己的父母。自己大大小小的事情，他们都为我操心。看着父母的付出，我有着意志前行。一个人，精神是根基，精神若没了，也就废了。</p>\n<p>　　 念博士，这一直是我心中放不下的一件事。以我现在的精力已经根本无力施行。就把它当做一个美好的憧憬，进而不断激励自己去努力、去奋斗。</p>\n<p>　　 什么时候是创业的时机，我认为是在三十五岁左右。</p>\n<p>　　 当下就是认清自己，知长补短，让自己具备审时度势作出决策的能力。</p>\n<p>　　 人生之乐，有一乐是阅读，品着茶，看着书，思绪萦绕，穿越内心和精神是多么的充实。</p>\n<p><code>2016年10月2日 亲笔</code></p>\n","site":{"data":{}},"excerpt":"<p>　　 当下是未来的基础，未来的憧憬犹如当下的场景，都离不开物质和精神的依赖。由于工作的变动，身心很是疲惫，看事待物都游离着低迷的气息。表面上的光鲜，私底下的痛楚和悲凉，只有在夜深人静的时候，在心底强行抹掉，把当前遇到的事情当作一种对人生的考验，痛而高仰头颅散发出坚而不催的积极向上的气息。</p>\n<p>　　 在北京的日子，自己的忙碌，无暇接听家人的电话。当自己闲下来的时候，觉得自己真的好无力。生活的现实，不得不让人在最应该珍惜一种感情的时候，却以一种强硬的语气和态度应对。父母面容的沧桑，不断苍老的白发袭来，身体没有以前那样灵活，我将这些看在心里，说不出的酸楚。我信奉的一句话是“美好的东西，都是煎熬之后才得到的”，同时欲望的膨胀，也是煎熬的过程中加剧痛苦的催化剂。没有美好的结局，只希望捕捉到的过程中的瞬间和阶段是一段美好的回忆。珍惜平时所见所遇，无需过急赶往远方，柔和的心态才是体验生活的缓冲剂。</p>\n<p>　　 回顾自己的生活，走得太快，提前透支自己，脑中搜寻近几年美好的记忆寥寥无几，大部分是自己为了追逐欲望的场面。近几年活过吗，为谁活过，答案是为了欲望活着。</p>","more":"<p>　　 在北京的日子，很感谢一起走过七年的同学，在自己精神压力最大的时候，约我一起出去游玩，驱除我的压力。在自己需要找人诉说的时候，Jane 学妹能够倾听我的充满情绪化的言语。人生阶段，该散的人散了，还在身边的，那就是自己最应该珍惜的人。人生中有几个知己，自己应该知足了。</p>\n<p>　　 毕业2年多一点，心中最愧疚面对的人，是自己的父母。自己大大小小的事情，他们都为我操心。看着父母的付出，我有着意志前行。一个人，精神是根基，精神若没了，也就废了。</p>\n<p>　　 念博士，这一直是我心中放不下的一件事。以我现在的精力已经根本无力施行。就把它当做一个美好的憧憬，进而不断激励自己去努力、去奋斗。</p>\n<p>　　 什么时候是创业的时机，我认为是在三十五岁左右。</p>\n<p>　　 当下就是认清自己，知长补短，让自己具备审时度势作出决策的能力。</p>\n<p>　　 人生之乐，有一乐是阅读，品着茶，看着书，思绪萦绕，穿越内心和精神是多么的充实。</p>\n<p><code>2016年10月2日 亲笔</code></p>"},{"title":"下一个十年","date":"2016-10-07T14:00:51.000Z","_content":"\n　　 今晚跟高中要好的同学耀（某知名学校硕士）相聚，聊的东西都深入内心。八年未见，我们从十多岁的小青年变成了年近三十岁的大叔，相见仍然是那么熟悉，岁月的痕迹留在了我们脸上和身体健康状态上。每一个行业都有它的亮点，也有它的痛点，不必羡慕，不必感概，因为深处其中时，真的没有那么光鲜，没有那么轻松，没有那么自以为是。我们每个人都在为前途、命运在决斗，遍体鳞伤仍然奋斗不止。\n\n<!-- more -->\n　　 每一代人有每一代人的痛楚，我和高中同学两人都是八零后，此处只谈农村八零后的切身感受，七零后离我太远了，九零后虽近但时代大背景已大不相同。农村的八零后这一代，真的就像是一个品牌的过渡产品，过渡产品意味着什么，试验品。八零后没有赶上九十年代互联网的发起，下海经商的浪潮，但城市与农村的差距却在这些兴起的商业中拉开了距离。\n\n　　 农村八零后的受教育背景虽然比七零后好一点，但是工作机会，社会竞争力已不可同年而语；相比九零后，八零后受到的教育中规中矩，没有九零后思想活跃。二十一世纪科技发展突飞猛进，八零后接受的信息根本无法与九零后抗衡，思想的活跃受益于社会经济的发展和生活观念的变化。八零后处在一个前有老资格的七零后，后有新奇玩法的九零后的时间轴上，压力是有的，工作的压力，结婚的压力，买房的压力，培养子女的压力等。好在八零后，算是比较务实的一代人，虽然是一代试验品，但好在没有自甘堕落。\n\n　　 我们无法选择自己所在的时代背景，唯有一颗上进的心，既成全了自己，也慰藉了父母的内心。农村子女的出路，只有读书。现在流行的素质教育，地方特色的高考保护主义，让城市与农村孩子的距离更远了，导致了拼爹，拼妈的潮流。拼出来的是血，还是汗，看自己能否体谅父母了。\n\n　　 心情比较沉重，写出的东西看着充满低沉的气息。跟同学聊完房贷，装修，生活成本后，我对个人的生活重新审视了一遍，彻底明白开源节流，细水长流的内涵和长远意义。工作两年多以来，只关注自己所学知识转化为物质回报的比例，忽视了物质的管理和利用。\n\n　　 下一个十年，要面对什么？婚姻，子女，个人业务转型。当为自己考虑时，都觉得还好，为下一代着想时，想想就累，想着是不是要再买一套大一点的房子，学校是不是要上好一点的，长大了是不是要出国留学。\n\n　　 人为什么而活，人活着到底感受到了什么？\n\n`2016年10月7号 深夜 亲笔`","source":"_posts/next-ten-years.md","raw":"---\ntitle: 下一个十年\ndate: 2016-10-07 22:00:51\ntags:\n- 工作\n- 生活\n---\n\n　　 今晚跟高中要好的同学耀（某知名学校硕士）相聚，聊的东西都深入内心。八年未见，我们从十多岁的小青年变成了年近三十岁的大叔，相见仍然是那么熟悉，岁月的痕迹留在了我们脸上和身体健康状态上。每一个行业都有它的亮点，也有它的痛点，不必羡慕，不必感概，因为深处其中时，真的没有那么光鲜，没有那么轻松，没有那么自以为是。我们每个人都在为前途、命运在决斗，遍体鳞伤仍然奋斗不止。\n\n<!-- more -->\n　　 每一代人有每一代人的痛楚，我和高中同学两人都是八零后，此处只谈农村八零后的切身感受，七零后离我太远了，九零后虽近但时代大背景已大不相同。农村的八零后这一代，真的就像是一个品牌的过渡产品，过渡产品意味着什么，试验品。八零后没有赶上九十年代互联网的发起，下海经商的浪潮，但城市与农村的差距却在这些兴起的商业中拉开了距离。\n\n　　 农村八零后的受教育背景虽然比七零后好一点，但是工作机会，社会竞争力已不可同年而语；相比九零后，八零后受到的教育中规中矩，没有九零后思想活跃。二十一世纪科技发展突飞猛进，八零后接受的信息根本无法与九零后抗衡，思想的活跃受益于社会经济的发展和生活观念的变化。八零后处在一个前有老资格的七零后，后有新奇玩法的九零后的时间轴上，压力是有的，工作的压力，结婚的压力，买房的压力，培养子女的压力等。好在八零后，算是比较务实的一代人，虽然是一代试验品，但好在没有自甘堕落。\n\n　　 我们无法选择自己所在的时代背景，唯有一颗上进的心，既成全了自己，也慰藉了父母的内心。农村子女的出路，只有读书。现在流行的素质教育，地方特色的高考保护主义，让城市与农村孩子的距离更远了，导致了拼爹，拼妈的潮流。拼出来的是血，还是汗，看自己能否体谅父母了。\n\n　　 心情比较沉重，写出的东西看着充满低沉的气息。跟同学聊完房贷，装修，生活成本后，我对个人的生活重新审视了一遍，彻底明白开源节流，细水长流的内涵和长远意义。工作两年多以来，只关注自己所学知识转化为物质回报的比例，忽视了物质的管理和利用。\n\n　　 下一个十年，要面对什么？婚姻，子女，个人业务转型。当为自己考虑时，都觉得还好，为下一代着想时，想想就累，想着是不是要再买一套大一点的房子，学校是不是要上好一点的，长大了是不是要出国留学。\n\n　　 人为什么而活，人活着到底感受到了什么？\n\n`2016年10月7号 深夜 亲笔`","slug":"next-ten-years","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzt2001zqxepz40tp3mx","content":"<p>　　 今晚跟高中要好的同学耀（某知名学校硕士）相聚，聊的东西都深入内心。八年未见，我们从十多岁的小青年变成了年近三十岁的大叔，相见仍然是那么熟悉，岁月的痕迹留在了我们脸上和身体健康状态上。每一个行业都有它的亮点，也有它的痛点，不必羡慕，不必感概，因为深处其中时，真的没有那么光鲜，没有那么轻松，没有那么自以为是。我们每个人都在为前途、命运在决斗，遍体鳞伤仍然奋斗不止。</p>\n<a id=\"more\"></a>\n<p>　　 每一代人有每一代人的痛楚，我和高中同学两人都是八零后，此处只谈农村八零后的切身感受，七零后离我太远了，九零后虽近但时代大背景已大不相同。农村的八零后这一代，真的就像是一个品牌的过渡产品，过渡产品意味着什么，试验品。八零后没有赶上九十年代互联网的发起，下海经商的浪潮，但城市与农村的差距却在这些兴起的商业中拉开了距离。</p>\n<p>　　 农村八零后的受教育背景虽然比七零后好一点，但是工作机会，社会竞争力已不可同年而语；相比九零后，八零后受到的教育中规中矩，没有九零后思想活跃。二十一世纪科技发展突飞猛进，八零后接受的信息根本无法与九零后抗衡，思想的活跃受益于社会经济的发展和生活观念的变化。八零后处在一个前有老资格的七零后，后有新奇玩法的九零后的时间轴上，压力是有的，工作的压力，结婚的压力，买房的压力，培养子女的压力等。好在八零后，算是比较务实的一代人，虽然是一代试验品，但好在没有自甘堕落。</p>\n<p>　　 我们无法选择自己所在的时代背景，唯有一颗上进的心，既成全了自己，也慰藉了父母的内心。农村子女的出路，只有读书。现在流行的素质教育，地方特色的高考保护主义，让城市与农村孩子的距离更远了，导致了拼爹，拼妈的潮流。拼出来的是血，还是汗，看自己能否体谅父母了。</p>\n<p>　　 心情比较沉重，写出的东西看着充满低沉的气息。跟同学聊完房贷，装修，生活成本后，我对个人的生活重新审视了一遍，彻底明白开源节流，细水长流的内涵和长远意义。工作两年多以来，只关注自己所学知识转化为物质回报的比例，忽视了物质的管理和利用。</p>\n<p>　　 下一个十年，要面对什么？婚姻，子女，个人业务转型。当为自己考虑时，都觉得还好，为下一代着想时，想想就累，想着是不是要再买一套大一点的房子，学校是不是要上好一点的，长大了是不是要出国留学。</p>\n<p>　　 人为什么而活，人活着到底感受到了什么？</p>\n<p><code>2016年10月7号 深夜 亲笔</code></p>\n","site":{"data":{}},"excerpt":"<p>　　 今晚跟高中要好的同学耀（某知名学校硕士）相聚，聊的东西都深入内心。八年未见，我们从十多岁的小青年变成了年近三十岁的大叔，相见仍然是那么熟悉，岁月的痕迹留在了我们脸上和身体健康状态上。每一个行业都有它的亮点，也有它的痛点，不必羡慕，不必感概，因为深处其中时，真的没有那么光鲜，没有那么轻松，没有那么自以为是。我们每个人都在为前途、命运在决斗，遍体鳞伤仍然奋斗不止。</p>","more":"<p>　　 每一代人有每一代人的痛楚，我和高中同学两人都是八零后，此处只谈农村八零后的切身感受，七零后离我太远了，九零后虽近但时代大背景已大不相同。农村的八零后这一代，真的就像是一个品牌的过渡产品，过渡产品意味着什么，试验品。八零后没有赶上九十年代互联网的发起，下海经商的浪潮，但城市与农村的差距却在这些兴起的商业中拉开了距离。</p>\n<p>　　 农村八零后的受教育背景虽然比七零后好一点，但是工作机会，社会竞争力已不可同年而语；相比九零后，八零后受到的教育中规中矩，没有九零后思想活跃。二十一世纪科技发展突飞猛进，八零后接受的信息根本无法与九零后抗衡，思想的活跃受益于社会经济的发展和生活观念的变化。八零后处在一个前有老资格的七零后，后有新奇玩法的九零后的时间轴上，压力是有的，工作的压力，结婚的压力，买房的压力，培养子女的压力等。好在八零后，算是比较务实的一代人，虽然是一代试验品，但好在没有自甘堕落。</p>\n<p>　　 我们无法选择自己所在的时代背景，唯有一颗上进的心，既成全了自己，也慰藉了父母的内心。农村子女的出路，只有读书。现在流行的素质教育，地方特色的高考保护主义，让城市与农村孩子的距离更远了，导致了拼爹，拼妈的潮流。拼出来的是血，还是汗，看自己能否体谅父母了。</p>\n<p>　　 心情比较沉重，写出的东西看着充满低沉的气息。跟同学聊完房贷，装修，生活成本后，我对个人的生活重新审视了一遍，彻底明白开源节流，细水长流的内涵和长远意义。工作两年多以来，只关注自己所学知识转化为物质回报的比例，忽视了物质的管理和利用。</p>\n<p>　　 下一个十年，要面对什么？婚姻，子女，个人业务转型。当为自己考虑时，都觉得还好，为下一代着想时，想想就累，想着是不是要再买一套大一点的房子，学校是不是要上好一点的，长大了是不是要出国留学。</p>\n<p>　　 人为什么而活，人活着到底感受到了什么？</p>\n<p><code>2016年10月7号 深夜 亲笔</code></p>"},{"title":"对OpenGL开发实践的思考","date":"2016-09-29T09:33:34.000Z","_content":"\n　　在使用一个工具的时候，首先要搞清楚它的定义［见 wiki ：[OpenGL](https://en.wikipedia.org/wiki/OpenGL)］，其次才是用它来做实践开发。我个人对它的理解是，OpenGL 是一个用于做图形处理的工具库，基于 GPU 硬件资源用来绘制和渲染 2D，3D 图形。要做比较炫的图形渲染，图形变化，选择 OpenGL 来开发可以降低设备对 CPU 资源的消耗。现在流行的 VR 开发，无外乎也是基于 OpenGL 来做的。知道 OpenGL 能干什么了，随之而来的是写个小程序把我们对 OpenGL 的好奇心实践下。\n\n<!-- more -->\n　　怎样写出一个自己能懂的程序？自己写的程序难道自己不懂吗，可能你真的不懂。接触一个新的事物时，我们大多数时候，就是寻找资源去仿造，至于原理和用法为什么是那样，我们其实是一头雾水。人类的本质是具备探索新事物运行原理的，在本质的驱动下，我们或多或少会去研究为什么是那样。研究的深入层度，无形中划分了不同人在该领域的级别。那么如何去探究 OpenGL？网络博客，论坛，QQ群，还是书籍。我的看法是，快速入门就是筛选一些写的精简的博客，然后买几本该方向很权威和专业的书籍细看。\n\n　　写了这么多，我想表达的是，要有自己学习新东西的方法和策略。\n","source":"_posts/opengl-practice-description.md","raw":"---\ntitle: 对OpenGL开发实践的思考\ndate: 2016-09-29 17:33:34\ntags:\n- OpenGL\n- iOS中高级开发\n---\n\n　　在使用一个工具的时候，首先要搞清楚它的定义［见 wiki ：[OpenGL](https://en.wikipedia.org/wiki/OpenGL)］，其次才是用它来做实践开发。我个人对它的理解是，OpenGL 是一个用于做图形处理的工具库，基于 GPU 硬件资源用来绘制和渲染 2D，3D 图形。要做比较炫的图形渲染，图形变化，选择 OpenGL 来开发可以降低设备对 CPU 资源的消耗。现在流行的 VR 开发，无外乎也是基于 OpenGL 来做的。知道 OpenGL 能干什么了，随之而来的是写个小程序把我们对 OpenGL 的好奇心实践下。\n\n<!-- more -->\n　　怎样写出一个自己能懂的程序？自己写的程序难道自己不懂吗，可能你真的不懂。接触一个新的事物时，我们大多数时候，就是寻找资源去仿造，至于原理和用法为什么是那样，我们其实是一头雾水。人类的本质是具备探索新事物运行原理的，在本质的驱动下，我们或多或少会去研究为什么是那样。研究的深入层度，无形中划分了不同人在该领域的级别。那么如何去探究 OpenGL？网络博客，论坛，QQ群，还是书籍。我的看法是，快速入门就是筛选一些写的精简的博客，然后买几本该方向很权威和专业的书籍细看。\n\n　　写了这么多，我想表达的是，要有自己学习新东西的方法和策略。\n","slug":"opengl-practice-description","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzt30021qxepwsr32s0c","content":"<p>　　在使用一个工具的时候，首先要搞清楚它的定义［见 wiki ：<a href=\"https://en.wikipedia.org/wiki/OpenGL\" target=\"_blank\" rel=\"external\">OpenGL</a>］，其次才是用它来做实践开发。我个人对它的理解是，OpenGL 是一个用于做图形处理的工具库，基于 GPU 硬件资源用来绘制和渲染 2D，3D 图形。要做比较炫的图形渲染，图形变化，选择 OpenGL 来开发可以降低设备对 CPU 资源的消耗。现在流行的 VR 开发，无外乎也是基于 OpenGL 来做的。知道 OpenGL 能干什么了，随之而来的是写个小程序把我们对 OpenGL 的好奇心实践下。</p>\n<a id=\"more\"></a>\n<p>　　怎样写出一个自己能懂的程序？自己写的程序难道自己不懂吗，可能你真的不懂。接触一个新的事物时，我们大多数时候，就是寻找资源去仿造，至于原理和用法为什么是那样，我们其实是一头雾水。人类的本质是具备探索新事物运行原理的，在本质的驱动下，我们或多或少会去研究为什么是那样。研究的深入层度，无形中划分了不同人在该领域的级别。那么如何去探究 OpenGL？网络博客，论坛，QQ群，还是书籍。我的看法是，快速入门就是筛选一些写的精简的博客，然后买几本该方向很权威和专业的书籍细看。</p>\n<p>　　写了这么多，我想表达的是，要有自己学习新东西的方法和策略。</p>\n","site":{"data":{}},"excerpt":"<p>　　在使用一个工具的时候，首先要搞清楚它的定义［见 wiki ：<a href=\"https://en.wikipedia.org/wiki/OpenGL\" target=\"_blank\" rel=\"external\">OpenGL</a>］，其次才是用它来做实践开发。我个人对它的理解是，OpenGL 是一个用于做图形处理的工具库，基于 GPU 硬件资源用来绘制和渲染 2D，3D 图形。要做比较炫的图形渲染，图形变化，选择 OpenGL 来开发可以降低设备对 CPU 资源的消耗。现在流行的 VR 开发，无外乎也是基于 OpenGL 来做的。知道 OpenGL 能干什么了，随之而来的是写个小程序把我们对 OpenGL 的好奇心实践下。</p>","more":"<p>　　怎样写出一个自己能懂的程序？自己写的程序难道自己不懂吗，可能你真的不懂。接触一个新的事物时，我们大多数时候，就是寻找资源去仿造，至于原理和用法为什么是那样，我们其实是一头雾水。人类的本质是具备探索新事物运行原理的，在本质的驱动下，我们或多或少会去研究为什么是那样。研究的深入层度，无形中划分了不同人在该领域的级别。那么如何去探究 OpenGL？网络博客，论坛，QQ群，还是书籍。我的看法是，快速入门就是筛选一些写的精简的博客，然后买几本该方向很权威和专业的书籍细看。</p>\n<p>　　写了这么多，我想表达的是，要有自己学习新东西的方法和策略。</p>"},{"title":"三年内个人发展规划","date":"2016-10-06T00:05:34.000Z","_content":"\n　　互联网发展日新月异，处在该行业就需要紧跟行业发展动态和高新技术理论发展趋势。这不仅关乎个人长远发展，也关乎家庭生活的质量，所以，需要做好长远实际的规划。\n\n　　如何做好规划，这个问题因人而异。但都离不开学习环节。学习伴随我们的一生，一生的工作，一生的生活。我们工作效率的提升，生活质量的提升，都需要通过不断地学习、接受新的理念来修正过去的观念。\n\n　　处在互联网这个非线性时变的系统中，我该如何有效精准地预测系统的实际输出呢。经验，理论是建立预测模型的基础，将工作经验，人生阅历，接收到的新理论作为训练数据，进而得出一个切合自身实际的预测输出。获取到一个理论模型之后，接下来的环节就是不断在实践过程中进行修正调参，以更符合期望。\n\n<!-- more -->\n　　我的三年规划，早已经做好了，一切围绕着贴近精神和生活的实际需求。以假设脱离实际，是空谈；以实际摒弃假设，是现实。作为人类群体中的个体，要活的有特色。生活中需要现实，也需要幻想。想要在一片蓝天看见彩虹，需要幻想才能看到诗一般的远方。想要在一片蓝天之下有自己的立足之地，需要现实才能占到属于自己的一份领地。无论如何，良好的心态，是我们拥有灿烂时光的根基。\n\n`2016年10月6号 亲笔`\n\n","source":"_posts/private-development-in-three-years.md","raw":"---\ntitle: 三年内个人发展规划\ndate: 2016-10-06 08:05:34\ntags:\n- 工作\n- 生活\n---\n\n　　互联网发展日新月异，处在该行业就需要紧跟行业发展动态和高新技术理论发展趋势。这不仅关乎个人长远发展，也关乎家庭生活的质量，所以，需要做好长远实际的规划。\n\n　　如何做好规划，这个问题因人而异。但都离不开学习环节。学习伴随我们的一生，一生的工作，一生的生活。我们工作效率的提升，生活质量的提升，都需要通过不断地学习、接受新的理念来修正过去的观念。\n\n　　处在互联网这个非线性时变的系统中，我该如何有效精准地预测系统的实际输出呢。经验，理论是建立预测模型的基础，将工作经验，人生阅历，接收到的新理论作为训练数据，进而得出一个切合自身实际的预测输出。获取到一个理论模型之后，接下来的环节就是不断在实践过程中进行修正调参，以更符合期望。\n\n<!-- more -->\n　　我的三年规划，早已经做好了，一切围绕着贴近精神和生活的实际需求。以假设脱离实际，是空谈；以实际摒弃假设，是现实。作为人类群体中的个体，要活的有特色。生活中需要现实，也需要幻想。想要在一片蓝天看见彩虹，需要幻想才能看到诗一般的远方。想要在一片蓝天之下有自己的立足之地，需要现实才能占到属于自己的一份领地。无论如何，良好的心态，是我们拥有灿烂时光的根基。\n\n`2016年10月6号 亲笔`\n\n","slug":"private-development-in-three-years","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzt50023qxeprc3b5dzt","content":"<p>　　互联网发展日新月异，处在该行业就需要紧跟行业发展动态和高新技术理论发展趋势。这不仅关乎个人长远发展，也关乎家庭生活的质量，所以，需要做好长远实际的规划。</p>\n<p>　　如何做好规划，这个问题因人而异。但都离不开学习环节。学习伴随我们的一生，一生的工作，一生的生活。我们工作效率的提升，生活质量的提升，都需要通过不断地学习、接受新的理念来修正过去的观念。</p>\n<p>　　处在互联网这个非线性时变的系统中，我该如何有效精准地预测系统的实际输出呢。经验，理论是建立预测模型的基础，将工作经验，人生阅历，接收到的新理论作为训练数据，进而得出一个切合自身实际的预测输出。获取到一个理论模型之后，接下来的环节就是不断在实践过程中进行修正调参，以更符合期望。</p>\n<a id=\"more\"></a>\n<p>　　我的三年规划，早已经做好了，一切围绕着贴近精神和生活的实际需求。以假设脱离实际，是空谈；以实际摒弃假设，是现实。作为人类群体中的个体，要活的有特色。生活中需要现实，也需要幻想。想要在一片蓝天看见彩虹，需要幻想才能看到诗一般的远方。想要在一片蓝天之下有自己的立足之地，需要现实才能占到属于自己的一份领地。无论如何，良好的心态，是我们拥有灿烂时光的根基。</p>\n<p><code>2016年10月6号 亲笔</code></p>\n","site":{"data":{}},"excerpt":"<p>　　互联网发展日新月异，处在该行业就需要紧跟行业发展动态和高新技术理论发展趋势。这不仅关乎个人长远发展，也关乎家庭生活的质量，所以，需要做好长远实际的规划。</p>\n<p>　　如何做好规划，这个问题因人而异。但都离不开学习环节。学习伴随我们的一生，一生的工作，一生的生活。我们工作效率的提升，生活质量的提升，都需要通过不断地学习、接受新的理念来修正过去的观念。</p>\n<p>　　处在互联网这个非线性时变的系统中，我该如何有效精准地预测系统的实际输出呢。经验，理论是建立预测模型的基础，将工作经验，人生阅历，接收到的新理论作为训练数据，进而得出一个切合自身实际的预测输出。获取到一个理论模型之后，接下来的环节就是不断在实践过程中进行修正调参，以更符合期望。</p>","more":"<p>　　我的三年规划，早已经做好了，一切围绕着贴近精神和生活的实际需求。以假设脱离实际，是空谈；以实际摒弃假设，是现实。作为人类群体中的个体，要活的有特色。生活中需要现实，也需要幻想。想要在一片蓝天看见彩虹，需要幻想才能看到诗一般的远方。想要在一片蓝天之下有自己的立足之地，需要现实才能占到属于自己的一份领地。无论如何，良好的心态，是我们拥有灿烂时光的根基。</p>\n<p><code>2016年10月6号 亲笔</code></p>"},{"title":"rtmp直播推流（二）－－将音频／视频推送到流媒体服务器","date":"2015-11-16T10:27:30.000Z","_content":"\n参考我之前写的一篇文章[利用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件](http://depthlove.github.io/2015/09/18/use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264/)\n\n参看文章[ffmpeg综合应用示例（一）——摄像头直播 ](http://blog.csdn.net/nonmarking/article/details/48022387)，       [ffmpeg综合应用示例（四）——摄像头直播的视音频同步](http://blog.csdn.net/nonmarking/article/details/50522413)\n\n参看文章[最简单的基于FFmpeg的移动端例子：IOS 推流器](http://blog.csdn.net/leixiaohua1020/article/details/47072519)，      [ 最简单的基于FFmpeg的推流器（以推送RTMP为例）](http://blog.csdn.net/leixiaohua1020/article/details/39803457)\n\n<!-- more -->\n\n使用librtmp发布h.264可参看文章[最简单的基于librtmp的示例：发布H.264（H.264通过RTMP发布）](http://blog.csdn.net/leixiaohua1020/article/details/42105049)，     [最简单的基于librtmp的示例：发布（FLV通过RTMP发布）](http://blog.csdn.net/leixiaohua1020/article/details/42104945)\n\n通过以上文章，就可以将采集到的音频／视频数据推送到流媒体服务器，至于观看延迟方面，需要结合实际情况区处理了。\n\n","source":"_posts/push-video-or-audio-to-server-in-rtmp-live-play.md","raw":"---\ntitle: rtmp直播推流（二）－－将音频／视频推送到流媒体服务器\ndate: 2015-11-16 18:27:30\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n\n参考我之前写的一篇文章[利用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件](http://depthlove.github.io/2015/09/18/use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264/)\n\n参看文章[ffmpeg综合应用示例（一）——摄像头直播 ](http://blog.csdn.net/nonmarking/article/details/48022387)，       [ffmpeg综合应用示例（四）——摄像头直播的视音频同步](http://blog.csdn.net/nonmarking/article/details/50522413)\n\n参看文章[最简单的基于FFmpeg的移动端例子：IOS 推流器](http://blog.csdn.net/leixiaohua1020/article/details/47072519)，      [ 最简单的基于FFmpeg的推流器（以推送RTMP为例）](http://blog.csdn.net/leixiaohua1020/article/details/39803457)\n\n<!-- more -->\n\n使用librtmp发布h.264可参看文章[最简单的基于librtmp的示例：发布H.264（H.264通过RTMP发布）](http://blog.csdn.net/leixiaohua1020/article/details/42105049)，     [最简单的基于librtmp的示例：发布（FLV通过RTMP发布）](http://blog.csdn.net/leixiaohua1020/article/details/42104945)\n\n通过以上文章，就可以将采集到的音频／视频数据推送到流媒体服务器，至于观看延迟方面，需要结合实际情况区处理了。\n\n","slug":"push-video-or-audio-to-server-in-rtmp-live-play","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzt70026qxep47pmvwlo","content":"<p>参考我之前写的一篇文章<a href=\"http://depthlove.github.io/2015/09/18/use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264/\">利用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件</a></p>\n<p>参看文章<a href=\"http://blog.csdn.net/nonmarking/article/details/48022387\" target=\"_blank\" rel=\"external\">ffmpeg综合应用示例（一）——摄像头直播 </a>，       <a href=\"http://blog.csdn.net/nonmarking/article/details/50522413\" target=\"_blank\" rel=\"external\">ffmpeg综合应用示例（四）——摄像头直播的视音频同步</a></p>\n<p>参看文章<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/47072519\" target=\"_blank\" rel=\"external\">最简单的基于FFmpeg的移动端例子：IOS 推流器</a>，      <a href=\"http://blog.csdn.net/leixiaohua1020/article/details/39803457\" target=\"_blank\" rel=\"external\"> 最简单的基于FFmpeg的推流器（以推送RTMP为例）</a></p>\n<a id=\"more\"></a>\n<p>使用librtmp发布h.264可参看文章<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/42105049\" target=\"_blank\" rel=\"external\">最简单的基于librtmp的示例：发布H.264（H.264通过RTMP发布）</a>，     <a href=\"http://blog.csdn.net/leixiaohua1020/article/details/42104945\" target=\"_blank\" rel=\"external\">最简单的基于librtmp的示例：发布（FLV通过RTMP发布）</a></p>\n<p>通过以上文章，就可以将采集到的音频／视频数据推送到流媒体服务器，至于观看延迟方面，需要结合实际情况区处理了。</p>\n","site":{"data":{}},"excerpt":"<p>参考我之前写的一篇文章<a href=\"http://depthlove.github.io/2015/09/18/use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264/\">利用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件</a></p>\n<p>参看文章<a href=\"http://blog.csdn.net/nonmarking/article/details/48022387\" target=\"_blank\" rel=\"external\">ffmpeg综合应用示例（一）——摄像头直播 </a>，       <a href=\"http://blog.csdn.net/nonmarking/article/details/50522413\" target=\"_blank\" rel=\"external\">ffmpeg综合应用示例（四）——摄像头直播的视音频同步</a></p>\n<p>参看文章<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/47072519\" target=\"_blank\" rel=\"external\">最简单的基于FFmpeg的移动端例子：IOS 推流器</a>，      <a href=\"http://blog.csdn.net/leixiaohua1020/article/details/39803457\" target=\"_blank\" rel=\"external\"> 最简单的基于FFmpeg的推流器（以推送RTMP为例）</a></p>","more":"<p>使用librtmp发布h.264可参看文章<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/42105049\" target=\"_blank\" rel=\"external\">最简单的基于librtmp的示例：发布H.264（H.264通过RTMP发布）</a>，     <a href=\"http://blog.csdn.net/leixiaohua1020/article/details/42104945\" target=\"_blank\" rel=\"external\">最简单的基于librtmp的示例：发布（FLV通过RTMP发布）</a></p>\n<p>通过以上文章，就可以将采集到的音频／视频数据推送到流媒体服务器，至于观看延迟方面，需要结合实际情况区处理了。</p>"},{"title":"人生到处知何似，应似飞鸿踏雪泥","date":"2017-07-04T05:05:03.000Z","_content":"\n<center>和子由渑池怀旧\n苏轼\n人生到处知何似，应似飞鸿踏雪泥。\n泥上偶然留指爪，鸿飞那复计东西。\n老僧已死成新塔，坏壁无由见旧题。\n往日崎岖还记否，路上人困蹇驴嘶。\n</center>\n\n每一场剧的谢幕，都将会有一场新剧情演绎。体会这过程，人生阶段的爱恨交加才能不偏不倚，急于实现内心的渴求，往往在达到目标之后深深地感悟到人生的那些阶段本不该如此，人生的每个阶段应该是快乐的、幸福的，简单的。虽有现实的，人性的因素，让内心波浪起伏，只能说经历太少，对人生和生活理解的并不透彻。人生历程的持续，人生观、世界观、价值观都在向前演绎，是变好了，还是变坏了，取决于生活的态度。社会的浮躁，人心的攀比，在这人与社会演进的长河中，是走在岸边看风景，还是被吸进河中陷于疲惫挣扎。人需要有欲望，需要尝试，才能感悟。千人千种经历千种感悟，不变的是最终都会回归到来到出生时最简单的世界。人生每十年是一个阶段，十岁前的自己，二十岁前的自己，三十岁前的自己，四十岁前的自己……想一想，社会教会了人识别复杂的事物，人也从复杂中的事物中明白了最简单的道理。人生不过百余年，有所得，有所失，患得患失才是罪过。往前一步，可以向后看，不能后悔但需反思。读懂内心，何处不是“面朝大海，春暖花开。”\n\n<!-- more -->\n\n<p align=\"right\">二〇一七年七月四日，北京</p>\n","source":"_posts/recalling-the-old-days.md","raw":"---\ntitle: 人生到处知何似，应似飞鸿踏雪泥\ndate: 2017-07-04 13:05:03\ntags:\n- 生活\n---\n\n<center>和子由渑池怀旧\n苏轼\n人生到处知何似，应似飞鸿踏雪泥。\n泥上偶然留指爪，鸿飞那复计东西。\n老僧已死成新塔，坏壁无由见旧题。\n往日崎岖还记否，路上人困蹇驴嘶。\n</center>\n\n每一场剧的谢幕，都将会有一场新剧情演绎。体会这过程，人生阶段的爱恨交加才能不偏不倚，急于实现内心的渴求，往往在达到目标之后深深地感悟到人生的那些阶段本不该如此，人生的每个阶段应该是快乐的、幸福的，简单的。虽有现实的，人性的因素，让内心波浪起伏，只能说经历太少，对人生和生活理解的并不透彻。人生历程的持续，人生观、世界观、价值观都在向前演绎，是变好了，还是变坏了，取决于生活的态度。社会的浮躁，人心的攀比，在这人与社会演进的长河中，是走在岸边看风景，还是被吸进河中陷于疲惫挣扎。人需要有欲望，需要尝试，才能感悟。千人千种经历千种感悟，不变的是最终都会回归到来到出生时最简单的世界。人生每十年是一个阶段，十岁前的自己，二十岁前的自己，三十岁前的自己，四十岁前的自己……想一想，社会教会了人识别复杂的事物，人也从复杂中的事物中明白了最简单的道理。人生不过百余年，有所得，有所失，患得患失才是罪过。往前一步，可以向后看，不能后悔但需反思。读懂内心，何处不是“面朝大海，春暖花开。”\n\n<!-- more -->\n\n<p align=\"right\">二〇一七年七月四日，北京</p>\n","slug":"recalling-the-old-days","published":1,"updated":"2017-07-04T05:20:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzt80028qxepvd2l1or1","content":"<center>和子由渑池怀旧<br>苏轼<br>人生到处知何似，应似飞鸿踏雪泥。<br>泥上偶然留指爪，鸿飞那复计东西。<br>老僧已死成新塔，坏壁无由见旧题。<br>往日崎岖还记否，路上人困蹇驴嘶。<br></center>\n\n<p>每一场剧的谢幕，都将会有一场新剧情演绎。体会这过程，人生阶段的爱恨交加才能不偏不倚，急于实现内心的渴求，往往在达到目标之后深深地感悟到人生的那些阶段本不该如此，人生的每个阶段应该是快乐的、幸福的，简单的。虽有现实的，人性的因素，让内心波浪起伏，只能说经历太少，对人生和生活理解的并不透彻。人生历程的持续，人生观、世界观、价值观都在向前演绎，是变好了，还是变坏了，取决于生活的态度。社会的浮躁，人心的攀比，在这人与社会演进的长河中，是走在岸边看风景，还是被吸进河中陷于疲惫挣扎。人需要有欲望，需要尝试，才能感悟。千人千种经历千种感悟，不变的是最终都会回归到来到出生时最简单的世界。人生每十年是一个阶段，十岁前的自己，二十岁前的自己，三十岁前的自己，四十岁前的自己……想一想，社会教会了人识别复杂的事物，人也从复杂中的事物中明白了最简单的道理。人生不过百余年，有所得，有所失，患得患失才是罪过。往前一步，可以向后看，不能后悔但需反思。读懂内心，何处不是“面朝大海，春暖花开。”</p>\n<a id=\"more\"></a>\n<p align=\"right\">二〇一七年七月四日，北京</p>\n","site":{"data":{}},"excerpt":"<center>和子由渑池怀旧<br>苏轼<br>人生到处知何似，应似飞鸿踏雪泥。<br>泥上偶然留指爪，鸿飞那复计东西。<br>老僧已死成新塔，坏壁无由见旧题。<br>往日崎岖还记否，路上人困蹇驴嘶。<br></center>\n\n<p>每一场剧的谢幕，都将会有一场新剧情演绎。体会这过程，人生阶段的爱恨交加才能不偏不倚，急于实现内心的渴求，往往在达到目标之后深深地感悟到人生的那些阶段本不该如此，人生的每个阶段应该是快乐的、幸福的，简单的。虽有现实的，人性的因素，让内心波浪起伏，只能说经历太少，对人生和生活理解的并不透彻。人生历程的持续，人生观、世界观、价值观都在向前演绎，是变好了，还是变坏了，取决于生活的态度。社会的浮躁，人心的攀比，在这人与社会演进的长河中，是走在岸边看风景，还是被吸进河中陷于疲惫挣扎。人需要有欲望，需要尝试，才能感悟。千人千种经历千种感悟，不变的是最终都会回归到来到出生时最简单的世界。人生每十年是一个阶段，十岁前的自己，二十岁前的自己，三十岁前的自己，四十岁前的自己……想一想，社会教会了人识别复杂的事物，人也从复杂中的事物中明白了最简单的道理。人生不过百余年，有所得，有所失，患得患失才是罪过。往前一步，可以向后看，不能后悔但需反思。读懂内心，何处不是“面朝大海，春暖花开。”</p>","more":"<p align=\"right\">二〇一七年七月四日，北京</p>"},{"title":"重温《Objective-C高级编程iOS与OSX多线程和内存管理》一书","date":"2016-03-24T03:12:58.000Z","_content":"","source":"_posts/review-multithreading-and-memory-management-for-ios-and-osx.md","raw":"---\ntitle: 重温《Objective-C高级编程iOS与OSX多线程和内存管理》一书\ndate: 2016-03-24 11:12:58\ntags:\n- iOS中高级开发\n---\n","slug":"review-multithreading-and-memory-management-for-ios-and-osx","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzt9002aqxep7x7vkyh4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"回顾2015，展望2016","date":"2015-12-31T10:54:50.000Z","_content":"　　今天是2015年12月31号，2015年最后的一天，这一年过的真快，自己在这一年中做了什么，在2016年需要做什么，我需要花点时间来总结和规划下。2015年的最后一天，没有了以往的那种希望时间快速过去的欲望，而是一种淡淡的对时间流逝的可惜和害怕，害怕变老，害怕时间过得太快，要做的事情没有按时完成。\n\n<!-- more -->\n\n","source":"_posts/review-2015-outlook-2016.md","raw":"title: 回顾2015，展望2016\ndate: 2015-12-31 18:54:50\ntags:\n- 生活\n- 工作\n---\n　　今天是2015年12月31号，2015年最后的一天，这一年过的真快，自己在这一年中做了什么，在2016年需要做什么，我需要花点时间来总结和规划下。2015年的最后一天，没有了以往的那种希望时间快速过去的欲望，而是一种淡淡的对时间流逝的可惜和害怕，害怕变老，害怕时间过得太快，要做的事情没有按时完成。\n\n<!-- more -->\n\n","slug":"review-2015-outlook-2016","published":1,"updated":"2018-01-16T06:04:03.907Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gztb002cqxepmjafxgvh","content":"<p>　　今天是2015年12月31号，2015年最后的一天，这一年过的真快，自己在这一年中做了什么，在2016年需要做什么，我需要花点时间来总结和规划下。2015年的最后一天，没有了以往的那种希望时间快速过去的欲望，而是一种淡淡的对时间流逝的可惜和害怕，害怕变老，害怕时间过得太快，要做的事情没有按时完成。</p>\n<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"<p>　　今天是2015年12月31号，2015年最后的一天，这一年过的真快，自己在这一年中做了什么，在2016年需要做什么，我需要花点时间来总结和规划下。2015年的最后一天，没有了以往的那种希望时间快速过去的欲望，而是一种淡淡的对时间流逝的可惜和害怕，害怕变老，害怕时间过得太快，要做的事情没有按时完成。</p>","more":""},{"title":"北京见闻","date":"2016-08-25T04:54:18.000Z","_content":"\n　　\t在上海待了一周，就从上海乘动车来北京了。我想起了汪峰的一首歌《北京北京》\n\t\n<!-- more -->\n\n\t歌曲名:北京北京\n\t演唱:汪峰\n\t当我走在这里的每一条街道\n\t我的心似乎从来都不能平静\n\t就让花朵妒忌红名和电气致意\n\t我似乎听到了他这不慢的心跳\n\t我在这里欢笑我在这里哭泣\n\t我在这里活着也在这死去\n\t我在这里祈祷 我在这里迷惘\n\t我在这里寻找 在这里寻求\n\t北京 北京\n\t咖啡管与广场又散着天气\n\t就象夜空的哪月亮的距离\n\t人们在挣扎中相互告慰和拥抱\n\t寻找着 追著着 夜夜时的睡梦\n\t我在这欢笑 我们在这哭泣\n\t我在这活着也在这死去\n\t我在这祈祷 我在这迷惘\n\t我在这寻找 在这追求\n\t如果有一天我不得不离去\n\t我希望人们把我埋葬在这里\n\t在这忘了感觉到我在存在\n\t在这有太多有我眷恋的东西\n\t我在这欢笑 我在这哭泣\n\t我在这里活着也在这死去\n\t我在这里祈祷 我在这里迷惘\n\t我在这里寻找 也在这死去\n\n　　\t我的认知是，不管在哪里都有竞争，都有失落，都有灿烂。山不转路转，路不转人转，人不转心转。心念一转，自在逍遥。\n\n　　\t8月13号到的北京，现在已经有2周了，我对北京没什么感觉，就是一个工作的地方而已。看重会变成负担，平常心能体验到生活中的美。工作是我们不碌碌无为的物质基础，生活是我们平常心感受美的精神基础。我对北京的感受就这么多，谈不上喜欢，也谈不上不喜欢，平平淡淡的感觉。\n　　\t\n`2016年8月 写于北京 亲笔`\n\n\n\n","source":"_posts/see-in-Beijing.md","raw":"title: 北京见闻\ndate: 2016-08-25 12:54:18\ntags:\n- 工作\n- 生活\n---\n\n　　\t在上海待了一周，就从上海乘动车来北京了。我想起了汪峰的一首歌《北京北京》\n\t\n<!-- more -->\n\n\t歌曲名:北京北京\n\t演唱:汪峰\n\t当我走在这里的每一条街道\n\t我的心似乎从来都不能平静\n\t就让花朵妒忌红名和电气致意\n\t我似乎听到了他这不慢的心跳\n\t我在这里欢笑我在这里哭泣\n\t我在这里活着也在这死去\n\t我在这里祈祷 我在这里迷惘\n\t我在这里寻找 在这里寻求\n\t北京 北京\n\t咖啡管与广场又散着天气\n\t就象夜空的哪月亮的距离\n\t人们在挣扎中相互告慰和拥抱\n\t寻找着 追著着 夜夜时的睡梦\n\t我在这欢笑 我们在这哭泣\n\t我在这活着也在这死去\n\t我在这祈祷 我在这迷惘\n\t我在这寻找 在这追求\n\t如果有一天我不得不离去\n\t我希望人们把我埋葬在这里\n\t在这忘了感觉到我在存在\n\t在这有太多有我眷恋的东西\n\t我在这欢笑 我在这哭泣\n\t我在这里活着也在这死去\n\t我在这里祈祷 我在这里迷惘\n\t我在这里寻找 也在这死去\n\n　　\t我的认知是，不管在哪里都有竞争，都有失落，都有灿烂。山不转路转，路不转人转，人不转心转。心念一转，自在逍遥。\n\n　　\t8月13号到的北京，现在已经有2周了，我对北京没什么感觉，就是一个工作的地方而已。看重会变成负担，平常心能体验到生活中的美。工作是我们不碌碌无为的物质基础，生活是我们平常心感受美的精神基础。我对北京的感受就这么多，谈不上喜欢，也谈不上不喜欢，平平淡淡的感觉。\n　　\t\n`2016年8月 写于北京 亲笔`\n\n\n\n","slug":"see-in-Beijing","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gztd002eqxepr6btyv3e","content":"<p>　　    在上海待了一周，就从上海乘动车来北京了。我想起了汪峰的一首歌《北京北京》</p>\n<a id=\"more\"></a>\n<pre><code>歌曲名:北京北京\n演唱:汪峰\n当我走在这里的每一条街道\n我的心似乎从来都不能平静\n就让花朵妒忌红名和电气致意\n我似乎听到了他这不慢的心跳\n我在这里欢笑我在这里哭泣\n我在这里活着也在这死去\n我在这里祈祷 我在这里迷惘\n我在这里寻找 在这里寻求\n北京 北京\n咖啡管与广场又散着天气\n就象夜空的哪月亮的距离\n人们在挣扎中相互告慰和拥抱\n寻找着 追著着 夜夜时的睡梦\n我在这欢笑 我们在这哭泣\n我在这活着也在这死去\n我在这祈祷 我在这迷惘\n我在这寻找 在这追求\n如果有一天我不得不离去\n我希望人们把我埋葬在这里\n在这忘了感觉到我在存在\n在这有太多有我眷恋的东西\n我在这欢笑 我在这哭泣\n我在这里活着也在这死去\n我在这里祈祷 我在这里迷惘\n我在这里寻找 也在这死去\n</code></pre><p>　　    我的认知是，不管在哪里都有竞争，都有失落，都有灿烂。山不转路转，路不转人转，人不转心转。心念一转，自在逍遥。</p>\n<p>　　    8月13号到的北京，现在已经有2周了，我对北京没什么感觉，就是一个工作的地方而已。看重会变成负担，平常心能体验到生活中的美。工作是我们不碌碌无为的物质基础，生活是我们平常心感受美的精神基础。我对北京的感受就这么多，谈不上喜欢，也谈不上不喜欢，平平淡淡的感觉。<br>　　<br><code>2016年8月 写于北京 亲笔</code></p>\n","site":{"data":{}},"excerpt":"<p>　　    在上海待了一周，就从上海乘动车来北京了。我想起了汪峰的一首歌《北京北京》</p>","more":"<pre><code>歌曲名:北京北京\n演唱:汪峰\n当我走在这里的每一条街道\n我的心似乎从来都不能平静\n就让花朵妒忌红名和电气致意\n我似乎听到了他这不慢的心跳\n我在这里欢笑我在这里哭泣\n我在这里活着也在这死去\n我在这里祈祷 我在这里迷惘\n我在这里寻找 在这里寻求\n北京 北京\n咖啡管与广场又散着天气\n就象夜空的哪月亮的距离\n人们在挣扎中相互告慰和拥抱\n寻找着 追著着 夜夜时的睡梦\n我在这欢笑 我们在这哭泣\n我在这活着也在这死去\n我在这祈祷 我在这迷惘\n我在这寻找 在这追求\n如果有一天我不得不离去\n我希望人们把我埋葬在这里\n在这忘了感觉到我在存在\n在这有太多有我眷恋的东西\n我在这欢笑 我在这哭泣\n我在这里活着也在这死去\n我在这里祈祷 我在这里迷惘\n我在这里寻找 也在这死去\n</code></pre><p>　　    我的认知是，不管在哪里都有竞争，都有失落，都有灿烂。山不转路转，路不转人转，人不转心转。心念一转，自在逍遥。</p>\n<p>　　    8月13号到的北京，现在已经有2周了，我对北京没什么感觉，就是一个工作的地方而已。看重会变成负担，平常心能体验到生活中的美。工作是我们不碌碌无为的物质基础，生活是我们平常心感受美的精神基础。我对北京的感受就这么多，谈不上喜欢，也谈不上不喜欢，平平淡淡的感觉。<br>　　<br><code>2016年8月 写于北京 亲笔</code></p>"},{"title":"上海见闻","date":"2016-08-24T03:08:35.000Z","_content":"\n　　\t从深圳乘动车去上海的旅程中，我是兴奋的，可以增加新的阅历，丰富自己思考人生的素材。带着一颗充满期待的心，经历一夜的行程到了上海。\n\n　　 第一次到上海，上海并不是电视宣传和网络上宣称的那样华丽，我的第一感受是一个有着沧桑和陈旧感的都市。或许这就是她的魅力，释放着她的历史与过去。\n\n　　 我的落脚点是张江高科（张江软件园），到的那天是周六，在出租车上看张江软件园，看不到人影，这和深圳高新园一样，这里只是上班的地点而已，周一到周五上完班，周末软件园显得那么的安静，静的有一丝可怕和空寂。在张江全季酒店办了一周的入住手续，一路过来有点累，到上海的当天休息了半天。第一次来上海，可不能浪费了时间，总得出去转转呀，见识下所谓的大上海。\n\n　　 当一种东西，可以说是憧憬到来时，其实并没有想象中的完美和无暇，更多的是得到一种残缺，十全十美只是一种美好的期待，只是一种对人生充满美好信念的驱动力。正因为我们得到的是不完美的，有瑕疵的，我们才继续有动力去追寻我们心中那趋于完美，趋于内心期望值的远方。\n\n<!-- more -->\n　　 上海，一个活在口碑相传的都市，真正去感受一番，终归只会得到一句“不过如此”。确实是，不过如此而已。\n\n　　 不论一个城市怎样，都寄载了不同人的梦想，不同人的期望。任何东西只存在单面是不可能的，双面或多面才丰富了整个世界和人生观。在上海，和硕士同学、师弟们游览了下黄浦江附近的景点，夜色下的黄浦江周边都被笼罩在霓虹灯下，更凸显了都市的浮华和不实。虽然不喜欢这种浮华的场景，但是不能因为不喜欢而排斥。\n\n　　 和同学、师弟们相聚，我感叹时间易逝，青春不在，感叹在学校的学生过早期望步入繁杂的社会而不安抚躁动的心去感受在学校学习的生涯。在这越来越快节奏的社会，学生们充满着躁动，急于步入看似美好的凡尘。学校培养机制的问题，学生为了将来生存的问题，一些问题交错在一起，社会源源不断的新生力量都处在一场莫名的躁动和追逐的历史河流中。\n\n　　 我试图摆脱第一份工作给我带来的不利影响，但现在仍没有彻底平复。我希望自己能心态自然，平和的去接受和觉悟，我发现我很难做到。活在一场人生追逐的决斗场中，结局无外乎胜利了继续战斗，失败了就出局。\n\n　　 上海的小伙伴，让我感受了一种有柔有刚的氛围，比较喜欢。期望不要过高，一起走过，一起奋进，几年后看现在至少是充实的，有收获的。每个人都有自己的角色，我找到了我扮演的角色，我喜欢做技术，喜欢接触一些新的自己不懂的东西然后掌握它，这就是工作。生活中以一种坦然开放的心态去融入去表达。\n\n　　 硕士毕业2年2个月了，我希望自己一直保持一颗学习的心态，以谦卑的心态去汲取别人身上的优点，学习是伴随我们一生的灵魂工程。学会爱，学会包容，学会理解，学会提升，人生才会过的如灿烂阳光，绚烂星夜。\n\n\n`2016年8月 写于北京 亲笔`　　 　　 　　 　　 　　 　　　　\t\n　　\t\n　　\t\n　　\t\n　　\t\n　　\t\n\n\n","source":"_posts/see-in-Shanghai.md","raw":"title: 上海见闻\ndate: 2016-08-24 11:08:35\ntags:\n- 工作\n- 生活\n---\n\n　　\t从深圳乘动车去上海的旅程中，我是兴奋的，可以增加新的阅历，丰富自己思考人生的素材。带着一颗充满期待的心，经历一夜的行程到了上海。\n\n　　 第一次到上海，上海并不是电视宣传和网络上宣称的那样华丽，我的第一感受是一个有着沧桑和陈旧感的都市。或许这就是她的魅力，释放着她的历史与过去。\n\n　　 我的落脚点是张江高科（张江软件园），到的那天是周六，在出租车上看张江软件园，看不到人影，这和深圳高新园一样，这里只是上班的地点而已，周一到周五上完班，周末软件园显得那么的安静，静的有一丝可怕和空寂。在张江全季酒店办了一周的入住手续，一路过来有点累，到上海的当天休息了半天。第一次来上海，可不能浪费了时间，总得出去转转呀，见识下所谓的大上海。\n\n　　 当一种东西，可以说是憧憬到来时，其实并没有想象中的完美和无暇，更多的是得到一种残缺，十全十美只是一种美好的期待，只是一种对人生充满美好信念的驱动力。正因为我们得到的是不完美的，有瑕疵的，我们才继续有动力去追寻我们心中那趋于完美，趋于内心期望值的远方。\n\n<!-- more -->\n　　 上海，一个活在口碑相传的都市，真正去感受一番，终归只会得到一句“不过如此”。确实是，不过如此而已。\n\n　　 不论一个城市怎样，都寄载了不同人的梦想，不同人的期望。任何东西只存在单面是不可能的，双面或多面才丰富了整个世界和人生观。在上海，和硕士同学、师弟们游览了下黄浦江附近的景点，夜色下的黄浦江周边都被笼罩在霓虹灯下，更凸显了都市的浮华和不实。虽然不喜欢这种浮华的场景，但是不能因为不喜欢而排斥。\n\n　　 和同学、师弟们相聚，我感叹时间易逝，青春不在，感叹在学校的学生过早期望步入繁杂的社会而不安抚躁动的心去感受在学校学习的生涯。在这越来越快节奏的社会，学生们充满着躁动，急于步入看似美好的凡尘。学校培养机制的问题，学生为了将来生存的问题，一些问题交错在一起，社会源源不断的新生力量都处在一场莫名的躁动和追逐的历史河流中。\n\n　　 我试图摆脱第一份工作给我带来的不利影响，但现在仍没有彻底平复。我希望自己能心态自然，平和的去接受和觉悟，我发现我很难做到。活在一场人生追逐的决斗场中，结局无外乎胜利了继续战斗，失败了就出局。\n\n　　 上海的小伙伴，让我感受了一种有柔有刚的氛围，比较喜欢。期望不要过高，一起走过，一起奋进，几年后看现在至少是充实的，有收获的。每个人都有自己的角色，我找到了我扮演的角色，我喜欢做技术，喜欢接触一些新的自己不懂的东西然后掌握它，这就是工作。生活中以一种坦然开放的心态去融入去表达。\n\n　　 硕士毕业2年2个月了，我希望自己一直保持一颗学习的心态，以谦卑的心态去汲取别人身上的优点，学习是伴随我们一生的灵魂工程。学会爱，学会包容，学会理解，学会提升，人生才会过的如灿烂阳光，绚烂星夜。\n\n\n`2016年8月 写于北京 亲笔`　　 　　 　　 　　 　　 　　　　\t\n　　\t\n　　\t\n　　\t\n　　\t\n　　\t\n\n\n","slug":"see-in-Shanghai","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzth002gqxepw3mwb8qg","content":"<p>　　    从深圳乘动车去上海的旅程中，我是兴奋的，可以增加新的阅历，丰富自己思考人生的素材。带着一颗充满期待的心，经历一夜的行程到了上海。</p>\n<p>　　 第一次到上海，上海并不是电视宣传和网络上宣称的那样华丽，我的第一感受是一个有着沧桑和陈旧感的都市。或许这就是她的魅力，释放着她的历史与过去。</p>\n<p>　　 我的落脚点是张江高科（张江软件园），到的那天是周六，在出租车上看张江软件园，看不到人影，这和深圳高新园一样，这里只是上班的地点而已，周一到周五上完班，周末软件园显得那么的安静，静的有一丝可怕和空寂。在张江全季酒店办了一周的入住手续，一路过来有点累，到上海的当天休息了半天。第一次来上海，可不能浪费了时间，总得出去转转呀，见识下所谓的大上海。</p>\n<p>　　 当一种东西，可以说是憧憬到来时，其实并没有想象中的完美和无暇，更多的是得到一种残缺，十全十美只是一种美好的期待，只是一种对人生充满美好信念的驱动力。正因为我们得到的是不完美的，有瑕疵的，我们才继续有动力去追寻我们心中那趋于完美，趋于内心期望值的远方。</p>\n<a id=\"more\"></a>\n<p>　　 上海，一个活在口碑相传的都市，真正去感受一番，终归只会得到一句“不过如此”。确实是，不过如此而已。</p>\n<p>　　 不论一个城市怎样，都寄载了不同人的梦想，不同人的期望。任何东西只存在单面是不可能的，双面或多面才丰富了整个世界和人生观。在上海，和硕士同学、师弟们游览了下黄浦江附近的景点，夜色下的黄浦江周边都被笼罩在霓虹灯下，更凸显了都市的浮华和不实。虽然不喜欢这种浮华的场景，但是不能因为不喜欢而排斥。</p>\n<p>　　 和同学、师弟们相聚，我感叹时间易逝，青春不在，感叹在学校的学生过早期望步入繁杂的社会而不安抚躁动的心去感受在学校学习的生涯。在这越来越快节奏的社会，学生们充满着躁动，急于步入看似美好的凡尘。学校培养机制的问题，学生为了将来生存的问题，一些问题交错在一起，社会源源不断的新生力量都处在一场莫名的躁动和追逐的历史河流中。</p>\n<p>　　 我试图摆脱第一份工作给我带来的不利影响，但现在仍没有彻底平复。我希望自己能心态自然，平和的去接受和觉悟，我发现我很难做到。活在一场人生追逐的决斗场中，结局无外乎胜利了继续战斗，失败了就出局。</p>\n<p>　　 上海的小伙伴，让我感受了一种有柔有刚的氛围，比较喜欢。期望不要过高，一起走过，一起奋进，几年后看现在至少是充实的，有收获的。每个人都有自己的角色，我找到了我扮演的角色，我喜欢做技术，喜欢接触一些新的自己不懂的东西然后掌握它，这就是工作。生活中以一种坦然开放的心态去融入去表达。</p>\n<p>　　 硕士毕业2年2个月了，我希望自己一直保持一颗学习的心态，以谦卑的心态去汲取别人身上的优点，学习是伴随我们一生的灵魂工程。学会爱，学会包容，学会理解，学会提升，人生才会过的如灿烂阳光，绚烂星夜。</p>\n<p><code>2016年8月 写于北京 亲笔</code>　　 　　 　　 　　 　　 　　　　    \n　　    \n　　    \n　　    \n　　    \n　　    </p>\n","site":{"data":{}},"excerpt":"<p>　　    从深圳乘动车去上海的旅程中，我是兴奋的，可以增加新的阅历，丰富自己思考人生的素材。带着一颗充满期待的心，经历一夜的行程到了上海。</p>\n<p>　　 第一次到上海，上海并不是电视宣传和网络上宣称的那样华丽，我的第一感受是一个有着沧桑和陈旧感的都市。或许这就是她的魅力，释放着她的历史与过去。</p>\n<p>　　 我的落脚点是张江高科（张江软件园），到的那天是周六，在出租车上看张江软件园，看不到人影，这和深圳高新园一样，这里只是上班的地点而已，周一到周五上完班，周末软件园显得那么的安静，静的有一丝可怕和空寂。在张江全季酒店办了一周的入住手续，一路过来有点累，到上海的当天休息了半天。第一次来上海，可不能浪费了时间，总得出去转转呀，见识下所谓的大上海。</p>\n<p>　　 当一种东西，可以说是憧憬到来时，其实并没有想象中的完美和无暇，更多的是得到一种残缺，十全十美只是一种美好的期待，只是一种对人生充满美好信念的驱动力。正因为我们得到的是不完美的，有瑕疵的，我们才继续有动力去追寻我们心中那趋于完美，趋于内心期望值的远方。</p>","more":"<p>　　 上海，一个活在口碑相传的都市，真正去感受一番，终归只会得到一句“不过如此”。确实是，不过如此而已。</p>\n<p>　　 不论一个城市怎样，都寄载了不同人的梦想，不同人的期望。任何东西只存在单面是不可能的，双面或多面才丰富了整个世界和人生观。在上海，和硕士同学、师弟们游览了下黄浦江附近的景点，夜色下的黄浦江周边都被笼罩在霓虹灯下，更凸显了都市的浮华和不实。虽然不喜欢这种浮华的场景，但是不能因为不喜欢而排斥。</p>\n<p>　　 和同学、师弟们相聚，我感叹时间易逝，青春不在，感叹在学校的学生过早期望步入繁杂的社会而不安抚躁动的心去感受在学校学习的生涯。在这越来越快节奏的社会，学生们充满着躁动，急于步入看似美好的凡尘。学校培养机制的问题，学生为了将来生存的问题，一些问题交错在一起，社会源源不断的新生力量都处在一场莫名的躁动和追逐的历史河流中。</p>\n<p>　　 我试图摆脱第一份工作给我带来的不利影响，但现在仍没有彻底平复。我希望自己能心态自然，平和的去接受和觉悟，我发现我很难做到。活在一场人生追逐的决斗场中，结局无外乎胜利了继续战斗，失败了就出局。</p>\n<p>　　 上海的小伙伴，让我感受了一种有柔有刚的氛围，比较喜欢。期望不要过高，一起走过，一起奋进，几年后看现在至少是充实的，有收获的。每个人都有自己的角色，我找到了我扮演的角色，我喜欢做技术，喜欢接触一些新的自己不懂的东西然后掌握它，这就是工作。生活中以一种坦然开放的心态去融入去表达。</p>\n<p>　　 硕士毕业2年2个月了，我希望自己一直保持一颗学习的心态，以谦卑的心态去汲取别人身上的优点，学习是伴随我们一生的灵魂工程。学会爱，学会包容，学会理解，学会提升，人生才会过的如灿烂阳光，绚烂星夜。</p>\n<p><code>2016年8月 写于北京 亲笔</code>　　 　　 　　 　　 　　 　　　　    \n　　    \n　　    \n　　    \n　　    \n　　    </p>"},{"title":"个人在音视频开发方面的经历分享启动啦","date":"2016-03-16T02:30:55.000Z","_content":"\n本人小硕一枚，科班出身，毕业后在公司做过iOS应用开发工程师，搞过iOS项目移植到flash、unity3d平台的开发，在流媒体行业内实力不错的公司做过播放器开发工程师，现在在一家互联网公司做音视频编解码工程师。\n\n以前，就想着把自己实战经历过的项目经验总结并分享下，个人觉得在分享的过程中，会加深对知识点和技术的认识，同时也能帮助下一些人。值得开心的是，去年4月份左右，具体时间记不得请了，北京的一家做游戏应用内支付的公司的iOS工程师看到我的博客园博客后，联系我寻求iOS项目移植到flash平台的帮助。经过半个月时间与我沟通，项目移植成功上线了。在小型互联网公司，工程师可谓是孤军奋战。分享自己所学和经历是一件很兴奋，很开心的事。\n\n<!-- more -->\n\n分享安排：先分享iOS平台上的音视频开发\n\t\t再分享Android平台上的音视频开发\n\t\t最后分享PC平台上的音视频开发\n\n\n","source":"_posts/share-my-project-experience-in-audio-and-video-development.md","raw":"---\ntitle: 个人在音视频开发方面的经历分享启动啦\ndate: 2016-03-16 10:30:55\ntags:\n- 音视频处理\n- 工作\n---\n\n本人小硕一枚，科班出身，毕业后在公司做过iOS应用开发工程师，搞过iOS项目移植到flash、unity3d平台的开发，在流媒体行业内实力不错的公司做过播放器开发工程师，现在在一家互联网公司做音视频编解码工程师。\n\n以前，就想着把自己实战经历过的项目经验总结并分享下，个人觉得在分享的过程中，会加深对知识点和技术的认识，同时也能帮助下一些人。值得开心的是，去年4月份左右，具体时间记不得请了，北京的一家做游戏应用内支付的公司的iOS工程师看到我的博客园博客后，联系我寻求iOS项目移植到flash平台的帮助。经过半个月时间与我沟通，项目移植成功上线了。在小型互联网公司，工程师可谓是孤军奋战。分享自己所学和经历是一件很兴奋，很开心的事。\n\n<!-- more -->\n\n分享安排：先分享iOS平台上的音视频开发\n\t\t再分享Android平台上的音视频开发\n\t\t最后分享PC平台上的音视频开发\n\n\n","slug":"share-my-project-experience-in-audio-and-video-development","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gztj002iqxep1b4q5qeq","content":"<p>本人小硕一枚，科班出身，毕业后在公司做过iOS应用开发工程师，搞过iOS项目移植到flash、unity3d平台的开发，在流媒体行业内实力不错的公司做过播放器开发工程师，现在在一家互联网公司做音视频编解码工程师。</p>\n<p>以前，就想着把自己实战经历过的项目经验总结并分享下，个人觉得在分享的过程中，会加深对知识点和技术的认识，同时也能帮助下一些人。值得开心的是，去年4月份左右，具体时间记不得请了，北京的一家做游戏应用内支付的公司的iOS工程师看到我的博客园博客后，联系我寻求iOS项目移植到flash平台的帮助。经过半个月时间与我沟通，项目移植成功上线了。在小型互联网公司，工程师可谓是孤军奋战。分享自己所学和经历是一件很兴奋，很开心的事。</p>\n<a id=\"more\"></a>\n<p>分享安排：先分享iOS平台上的音视频开发<br>        再分享Android平台上的音视频开发<br>        最后分享PC平台上的音视频开发</p>\n","site":{"data":{}},"excerpt":"<p>本人小硕一枚，科班出身，毕业后在公司做过iOS应用开发工程师，搞过iOS项目移植到flash、unity3d平台的开发，在流媒体行业内实力不错的公司做过播放器开发工程师，现在在一家互联网公司做音视频编解码工程师。</p>\n<p>以前，就想着把自己实战经历过的项目经验总结并分享下，个人觉得在分享的过程中，会加深对知识点和技术的认识，同时也能帮助下一些人。值得开心的是，去年4月份左右，具体时间记不得请了，北京的一家做游戏应用内支付的公司的iOS工程师看到我的博客园博客后，联系我寻求iOS项目移植到flash平台的帮助。经过半个月时间与我沟通，项目移植成功上线了。在小型互联网公司，工程师可谓是孤军奋战。分享自己所学和经历是一件很兴奋，很开心的事。</p>","more":"<p>分享安排：先分享iOS平台上的音视频开发<br>        再分享Android平台上的音视频开发<br>        最后分享PC平台上的音视频开发</p>"},{"title":"生命的精神支柱","date":"2016-08-31T00:19:16.000Z","_content":"\n　　\t人太拼，总有累的时候，当疲惫驱入身心，人很容易垮掉。古语有云“休养生息”，疲惫的身躯需要休整，劳累的精神需要调节。在现在这个快节奏的社会，停下来去看看身边的风景是多么的奢侈。一味地向前，时间匆匆而过，记忆中却了无良辰美景。\n\n　　\t累了，想放下，仔细一想身上肩负的担子，家人的期望，只能继续行走在疲惫的人生路上。逼近而立之年，心态不复以前，岁月不知不觉让人明白每个年龄段该有的心智，该有的责任感，该有的生活观，该有的工作价值。\n\n<!-- more -->\n　　\t每当自己很疲惫的时候，家人是自己最强大的精神信念，这种信念让我有勇气有决心面对眼前的疲惫不堪。\n\n　　\t人生的意义是，能有充裕的时间和家人一起看看风景。\n\n`2016年8月31日 星期三 写于北京市昌平区住宅 亲笔`","source":"_posts/spiritual-handholds-on-life.md","raw":"title: 生命的精神支柱\ndate: 2016-08-31 08:19:16\ntags:\n- 工作\n- 生活\n---\n\n　　\t人太拼，总有累的时候，当疲惫驱入身心，人很容易垮掉。古语有云“休养生息”，疲惫的身躯需要休整，劳累的精神需要调节。在现在这个快节奏的社会，停下来去看看身边的风景是多么的奢侈。一味地向前，时间匆匆而过，记忆中却了无良辰美景。\n\n　　\t累了，想放下，仔细一想身上肩负的担子，家人的期望，只能继续行走在疲惫的人生路上。逼近而立之年，心态不复以前，岁月不知不觉让人明白每个年龄段该有的心智，该有的责任感，该有的生活观，该有的工作价值。\n\n<!-- more -->\n　　\t每当自己很疲惫的时候，家人是自己最强大的精神信念，这种信念让我有勇气有决心面对眼前的疲惫不堪。\n\n　　\t人生的意义是，能有充裕的时间和家人一起看看风景。\n\n`2016年8月31日 星期三 写于北京市昌平区住宅 亲笔`","slug":"spiritual-handholds-on-life","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gztq002kqxepglcsst87","content":"<p>　　    人太拼，总有累的时候，当疲惫驱入身心，人很容易垮掉。古语有云“休养生息”，疲惫的身躯需要休整，劳累的精神需要调节。在现在这个快节奏的社会，停下来去看看身边的风景是多么的奢侈。一味地向前，时间匆匆而过，记忆中却了无良辰美景。</p>\n<p>　　    累了，想放下，仔细一想身上肩负的担子，家人的期望，只能继续行走在疲惫的人生路上。逼近而立之年，心态不复以前，岁月不知不觉让人明白每个年龄段该有的心智，该有的责任感，该有的生活观，该有的工作价值。</p>\n<a id=\"more\"></a>\n<p>　　    每当自己很疲惫的时候，家人是自己最强大的精神信念，这种信念让我有勇气有决心面对眼前的疲惫不堪。</p>\n<p>　　    人生的意义是，能有充裕的时间和家人一起看看风景。</p>\n<p><code>2016年8月31日 星期三 写于北京市昌平区住宅 亲笔</code></p>\n","site":{"data":{}},"excerpt":"<p>　　    人太拼，总有累的时候，当疲惫驱入身心，人很容易垮掉。古语有云“休养生息”，疲惫的身躯需要休整，劳累的精神需要调节。在现在这个快节奏的社会，停下来去看看身边的风景是多么的奢侈。一味地向前，时间匆匆而过，记忆中却了无良辰美景。</p>\n<p>　　    累了，想放下，仔细一想身上肩负的担子，家人的期望，只能继续行走在疲惫的人生路上。逼近而立之年，心态不复以前，岁月不知不觉让人明白每个年龄段该有的心智，该有的责任感，该有的生活观，该有的工作价值。</p>","more":"<p>　　    每当自己很疲惫的时候，家人是自己最强大的精神信念，这种信念让我有勇气有决心面对眼前的疲惫不堪。</p>\n<p>　　    人生的意义是，能有充裕的时间和家人一起看看风景。</p>\n<p><code>2016年8月31日 星期三 写于北京市昌平区住宅 亲笔</code></p>"},{"title":"笔谈FFmpeg（一）","date":"2015-04-27T03:21:37.000Z","_content":"　　现在的工作是播放器库的开发，可不是调用iOS系统自带的播放器框架进行一些简单的功能和界面定制，这些没什么含量。涉及iOS开发有3个年头了，现在的工作算是有点含金量了。涉及播放器的开发，FFmpeg的架构和功能是必须清楚的。FFmpeg自带的三个工程：ffplay， ffmpeg， ffprobe。这三个工程的代码量太大，如何切入进去，一窥其中的奥秘为自己所用呢？从核心切入，编码和解码。编码和解码的核心API接口就那十几个，通过这些深入然后剖析源代码，目标就明确了。\n\n　　就我个人而言，首先要了解FFmpeg整个的运行机制，哪一部分工作需要调用FFmpeg的哪一块，这个必须清楚。播放器库的开发，解码播放这就是核心，我就需要从FFmpeg的解码流程入手了。FFmpeg源代码结构图 - 解码 这篇文章太好了，看得我两眼放光，精华。这篇文章读透了，完全可以把控FFmpeg的使用。我接下来的学习任务，那就是认真研读和敲代码研习，光看是不顶用的，需要动手写。\n　　\n<!-- more -->\n\n　　[FFmpeg源代码结构图 - 解码](http://blog.csdn.net/leixiaohua1020/article/details/44220151)中包含的信息太多了，对于在音视频领域中的初学者来说，首先要看[FFmpeg源代码结构图 - 解码](http://blog.csdn.net/leixiaohua1020/article/details/44220151) 中提到的[简单的基于FFMPEG+SDL的视频播放器 ver2 （采用SDL2.0）](http://blog.csdn.net/leixiaohua1020/article/details/38868499)入手。心急吃不了热豆腐，心急就不能静下心来搞懂深层次的问题。FFmpeg的解码过程调用的API依次为：\n\n　　　　　　　　　　　　　　　　　　开始---->\n\n　　　　　　　　　　　　　　　　　　av_register_all();\n\n　　　　　　　　　　　　　　　　　　avformat_open_input()；\n\n　　　　　　　　　　　　　　　　　　av_find_stream_info();\n\n　　　　　　　　　　　　　　　　　　avcodec_find_decoder();\n\n　　　　　　　　　　　　　　　　　　av_read_frame();\n\n　　　　　　　　　　　　　　　　　　获取到packet---->\n\n　　　　　　　　　　　　　　　　　　avcodec_decode_video2();\n\n　　对于FFmpeg的解码流程，先知道了有上面那些方法，但是这些方法是用来做什么，从方法名上能看出其功能，要深入的理解才行。借鉴别人的经验，收集有效的资源是非常重要的。对FFmpeg解码流程讲解的比较好的一篇博文是 [FFMpeg的解码流程](http://www.cnblogs.com/moonvan/archive/2011/10/22/2221263.html) ，配合文章  [ffmpeg解码流程](http://blog.csdn.net/ownwell/article/details/8113980) 一起服下，效果更好。因为当当看 [简单的基于FFMPEG+SDL的视频播放器 ver2 （采用SDL2.0）](http://blog.csdn.net/leixiaohua1020/article/details/38868499) 还不足以搞透整个流程。通过研习这三篇文章，整个流程和方法功能应该就吃透了。\n\n　　学习任何东西什么时候该从局部把控全局，那就是有了自己的切入点之后，在这个点上摸爬滚打搞得比较熟练之后，就需要把控全局，对FFmpeg框架的整体要有把控。对于FFmpeg框架讲解的比较好的入门读物是 [FFMpeg框架代码阅读](http://blog.csdn.net/wstarx/article/details/1572393) 。\n","source":"_posts/talk-about-FFmpeg-part1.md","raw":"title: 笔谈FFmpeg（一）\ndate: 2015-04-27 11:21:37\ntags:\n- 音视频处理\n---\n　　现在的工作是播放器库的开发，可不是调用iOS系统自带的播放器框架进行一些简单的功能和界面定制，这些没什么含量。涉及iOS开发有3个年头了，现在的工作算是有点含金量了。涉及播放器的开发，FFmpeg的架构和功能是必须清楚的。FFmpeg自带的三个工程：ffplay， ffmpeg， ffprobe。这三个工程的代码量太大，如何切入进去，一窥其中的奥秘为自己所用呢？从核心切入，编码和解码。编码和解码的核心API接口就那十几个，通过这些深入然后剖析源代码，目标就明确了。\n\n　　就我个人而言，首先要了解FFmpeg整个的运行机制，哪一部分工作需要调用FFmpeg的哪一块，这个必须清楚。播放器库的开发，解码播放这就是核心，我就需要从FFmpeg的解码流程入手了。FFmpeg源代码结构图 - 解码 这篇文章太好了，看得我两眼放光，精华。这篇文章读透了，完全可以把控FFmpeg的使用。我接下来的学习任务，那就是认真研读和敲代码研习，光看是不顶用的，需要动手写。\n　　\n<!-- more -->\n\n　　[FFmpeg源代码结构图 - 解码](http://blog.csdn.net/leixiaohua1020/article/details/44220151)中包含的信息太多了，对于在音视频领域中的初学者来说，首先要看[FFmpeg源代码结构图 - 解码](http://blog.csdn.net/leixiaohua1020/article/details/44220151) 中提到的[简单的基于FFMPEG+SDL的视频播放器 ver2 （采用SDL2.0）](http://blog.csdn.net/leixiaohua1020/article/details/38868499)入手。心急吃不了热豆腐，心急就不能静下心来搞懂深层次的问题。FFmpeg的解码过程调用的API依次为：\n\n　　　　　　　　　　　　　　　　　　开始---->\n\n　　　　　　　　　　　　　　　　　　av_register_all();\n\n　　　　　　　　　　　　　　　　　　avformat_open_input()；\n\n　　　　　　　　　　　　　　　　　　av_find_stream_info();\n\n　　　　　　　　　　　　　　　　　　avcodec_find_decoder();\n\n　　　　　　　　　　　　　　　　　　av_read_frame();\n\n　　　　　　　　　　　　　　　　　　获取到packet---->\n\n　　　　　　　　　　　　　　　　　　avcodec_decode_video2();\n\n　　对于FFmpeg的解码流程，先知道了有上面那些方法，但是这些方法是用来做什么，从方法名上能看出其功能，要深入的理解才行。借鉴别人的经验，收集有效的资源是非常重要的。对FFmpeg解码流程讲解的比较好的一篇博文是 [FFMpeg的解码流程](http://www.cnblogs.com/moonvan/archive/2011/10/22/2221263.html) ，配合文章  [ffmpeg解码流程](http://blog.csdn.net/ownwell/article/details/8113980) 一起服下，效果更好。因为当当看 [简单的基于FFMPEG+SDL的视频播放器 ver2 （采用SDL2.0）](http://blog.csdn.net/leixiaohua1020/article/details/38868499) 还不足以搞透整个流程。通过研习这三篇文章，整个流程和方法功能应该就吃透了。\n\n　　学习任何东西什么时候该从局部把控全局，那就是有了自己的切入点之后，在这个点上摸爬滚打搞得比较熟练之后，就需要把控全局，对FFmpeg框架的整体要有把控。对于FFmpeg框架讲解的比较好的入门读物是 [FFMpeg框架代码阅读](http://blog.csdn.net/wstarx/article/details/1572393) 。\n","slug":"talk-about-FFmpeg-part1","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzts002mqxepg1hf98kp","content":"<p>　　现在的工作是播放器库的开发，可不是调用iOS系统自带的播放器框架进行一些简单的功能和界面定制，这些没什么含量。涉及iOS开发有3个年头了，现在的工作算是有点含金量了。涉及播放器的开发，FFmpeg的架构和功能是必须清楚的。FFmpeg自带的三个工程：ffplay， ffmpeg， ffprobe。这三个工程的代码量太大，如何切入进去，一窥其中的奥秘为自己所用呢？从核心切入，编码和解码。编码和解码的核心API接口就那十几个，通过这些深入然后剖析源代码，目标就明确了。</p>\n<p>　　就我个人而言，首先要了解FFmpeg整个的运行机制，哪一部分工作需要调用FFmpeg的哪一块，这个必须清楚。播放器库的开发，解码播放这就是核心，我就需要从FFmpeg的解码流程入手了。FFmpeg源代码结构图 - 解码 这篇文章太好了，看得我两眼放光，精华。这篇文章读透了，完全可以把控FFmpeg的使用。我接下来的学习任务，那就是认真研读和敲代码研习，光看是不顶用的，需要动手写。<br>　　<br><a id=\"more\"></a></p>\n<p>　　<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/44220151\" target=\"_blank\" rel=\"external\">FFmpeg源代码结构图 - 解码</a>中包含的信息太多了，对于在音视频领域中的初学者来说，首先要看<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/44220151\" target=\"_blank\" rel=\"external\">FFmpeg源代码结构图 - 解码</a> 中提到的<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/38868499\" target=\"_blank\" rel=\"external\">简单的基于FFMPEG+SDL的视频播放器 ver2 （采用SDL2.0）</a>入手。心急吃不了热豆腐，心急就不能静下心来搞懂深层次的问题。FFmpeg的解码过程调用的API依次为：</p>\n<p>　　　　　　　　　　　　　　　　　　开始—-&gt;</p>\n<p>　　　　　　　　　　　　　　　　　　av_register_all();</p>\n<p>　　　　　　　　　　　　　　　　　　avformat_open_input()；</p>\n<p>　　　　　　　　　　　　　　　　　　av_find_stream_info();</p>\n<p>　　　　　　　　　　　　　　　　　　avcodec_find_decoder();</p>\n<p>　　　　　　　　　　　　　　　　　　av_read_frame();</p>\n<p>　　　　　　　　　　　　　　　　　　获取到packet—-&gt;</p>\n<p>　　　　　　　　　　　　　　　　　　avcodec_decode_video2();</p>\n<p>　　对于FFmpeg的解码流程，先知道了有上面那些方法，但是这些方法是用来做什么，从方法名上能看出其功能，要深入的理解才行。借鉴别人的经验，收集有效的资源是非常重要的。对FFmpeg解码流程讲解的比较好的一篇博文是 <a href=\"http://www.cnblogs.com/moonvan/archive/2011/10/22/2221263.html\" target=\"_blank\" rel=\"external\">FFMpeg的解码流程</a> ，配合文章  <a href=\"http://blog.csdn.net/ownwell/article/details/8113980\" target=\"_blank\" rel=\"external\">ffmpeg解码流程</a> 一起服下，效果更好。因为当当看 <a href=\"http://blog.csdn.net/leixiaohua1020/article/details/38868499\" target=\"_blank\" rel=\"external\">简单的基于FFMPEG+SDL的视频播放器 ver2 （采用SDL2.0）</a> 还不足以搞透整个流程。通过研习这三篇文章，整个流程和方法功能应该就吃透了。</p>\n<p>　　学习任何东西什么时候该从局部把控全局，那就是有了自己的切入点之后，在这个点上摸爬滚打搞得比较熟练之后，就需要把控全局，对FFmpeg框架的整体要有把控。对于FFmpeg框架讲解的比较好的入门读物是 <a href=\"http://blog.csdn.net/wstarx/article/details/1572393\" target=\"_blank\" rel=\"external\">FFMpeg框架代码阅读</a> 。</p>\n","site":{"data":{}},"excerpt":"<p>　　现在的工作是播放器库的开发，可不是调用iOS系统自带的播放器框架进行一些简单的功能和界面定制，这些没什么含量。涉及iOS开发有3个年头了，现在的工作算是有点含金量了。涉及播放器的开发，FFmpeg的架构和功能是必须清楚的。FFmpeg自带的三个工程：ffplay， ffmpeg， ffprobe。这三个工程的代码量太大，如何切入进去，一窥其中的奥秘为自己所用呢？从核心切入，编码和解码。编码和解码的核心API接口就那十几个，通过这些深入然后剖析源代码，目标就明确了。</p>\n<p>　　就我个人而言，首先要了解FFmpeg整个的运行机制，哪一部分工作需要调用FFmpeg的哪一块，这个必须清楚。播放器库的开发，解码播放这就是核心，我就需要从FFmpeg的解码流程入手了。FFmpeg源代码结构图 - 解码 这篇文章太好了，看得我两眼放光，精华。这篇文章读透了，完全可以把控FFmpeg的使用。我接下来的学习任务，那就是认真研读和敲代码研习，光看是不顶用的，需要动手写。<br>　　<br>","more":"</p>\n<p>　　<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/44220151\" target=\"_blank\" rel=\"external\">FFmpeg源代码结构图 - 解码</a>中包含的信息太多了，对于在音视频领域中的初学者来说，首先要看<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/44220151\" target=\"_blank\" rel=\"external\">FFmpeg源代码结构图 - 解码</a> 中提到的<a href=\"http://blog.csdn.net/leixiaohua1020/article/details/38868499\" target=\"_blank\" rel=\"external\">简单的基于FFMPEG+SDL的视频播放器 ver2 （采用SDL2.0）</a>入手。心急吃不了热豆腐，心急就不能静下心来搞懂深层次的问题。FFmpeg的解码过程调用的API依次为：</p>\n<p>　　　　　　　　　　　　　　　　　　开始—-&gt;</p>\n<p>　　　　　　　　　　　　　　　　　　av_register_all();</p>\n<p>　　　　　　　　　　　　　　　　　　avformat_open_input()；</p>\n<p>　　　　　　　　　　　　　　　　　　av_find_stream_info();</p>\n<p>　　　　　　　　　　　　　　　　　　avcodec_find_decoder();</p>\n<p>　　　　　　　　　　　　　　　　　　av_read_frame();</p>\n<p>　　　　　　　　　　　　　　　　　　获取到packet—-&gt;</p>\n<p>　　　　　　　　　　　　　　　　　　avcodec_decode_video2();</p>\n<p>　　对于FFmpeg的解码流程，先知道了有上面那些方法，但是这些方法是用来做什么，从方法名上能看出其功能，要深入的理解才行。借鉴别人的经验，收集有效的资源是非常重要的。对FFmpeg解码流程讲解的比较好的一篇博文是 <a href=\"http://www.cnblogs.com/moonvan/archive/2011/10/22/2221263.html\" target=\"_blank\" rel=\"external\">FFMpeg的解码流程</a> ，配合文章  <a href=\"http://blog.csdn.net/ownwell/article/details/8113980\" target=\"_blank\" rel=\"external\">ffmpeg解码流程</a> 一起服下，效果更好。因为当当看 <a href=\"http://blog.csdn.net/leixiaohua1020/article/details/38868499\" target=\"_blank\" rel=\"external\">简单的基于FFMPEG+SDL的视频播放器 ver2 （采用SDL2.0）</a> 还不足以搞透整个流程。通过研习这三篇文章，整个流程和方法功能应该就吃透了。</p>\n<p>　　学习任何东西什么时候该从局部把控全局，那就是有了自己的切入点之后，在这个点上摸爬滚打搞得比较熟练之后，就需要把控全局，对FFmpeg框架的整体要有把控。对于FFmpeg框架讲解的比较好的入门读物是 <a href=\"http://blog.csdn.net/wstarx/article/details/1572393\" target=\"_blank\" rel=\"external\">FFMpeg框架代码阅读</a> 。</p>"},{"title":"笔谈FFmpeg（二）","date":"2015-04-28T07:04:58.000Z","_content":"　　经过前面的学习对FFmpeg的基本流程已经很熟悉了，现在到了掌握其中细节的时候了，用FFmpeg做播放器解码操作中，涉及到了一些结构体，这些结构之间到底有什么关系，它们是怎样协同工作的呢。文章 FFMPEG中最关键的结构体之间的关系 对这些结构间的关系进行了分析，详细内容如下：\n\n　　FFMPEG中结构体很多。最关键的结构体可以分成以下几类：\n　　\n<!-- more -->\n\n#### a) 解协议（http,rtsp,rtmp,mms）\n\nAVIOContext，URLProtocol，URLContext主要存储视音频使用的协议的类型以及状态。URLProtocol存储输入视音频使用的封装格式。每种协议都对应一个URLProtocol结构。（注意：FFMPEG中文件也被当做一种协议“file”）\n\n#### b) 解封装（flv,avi,rmvb,mp4）\n\nAVFormatContext主要存储视音频封装格式中包含的信息；AVInputFormat存储输入视音频使用的封装格式。每种视音频封装格式都对应一个AVInputFormat 结构。\n\n#### c) 解码（h264,mpeg2,aac,mp3）\n\n每个AVStream存储一个视频/音频流的相关数据；每个AVStream对应一个AVCodecContext，存储该视频/音频流使用解码方式的相关数据；每个AVCodecContext中对应一个AVCodec，包含该视频/音频对应的解码器。每种解码器都对应一个AVCodec结构。\n\n#### d)存数据\n\n视频的话，每个结构一般是存一帧；音频可能有好几帧\n\n解码前数据：AVPacket\n\n解码后数据：AVFrame\n\n　　他们之间的对应关系如下所示：\n\n![流程图](http://img.blog.csdn.net/20130914204051125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGVpeGlhb2h1YTEwMjA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n　　上面提到的这些结构到底是干嘛用的，中国传媒大学的一个博士写了一系列的结构体的分析的文章，在这里列一个列表，需要好好看下：\n\n##### [FFMPEG结构体分析：AVFrame](http://blog.csdn.net/leixiaohua1020/article/details/14214577)\n\n##### [FFMPEG结构体分析：AVFormatContext](http://blog.csdn.net/leixiaohua1020/article/details/14214705)\n\n##### [FFMPEG结构体分析：AVCodecContext](http://blog.csdn.net/leixiaohua1020/article/details/14214859)\n\n##### [FFMPEG结构体分析：AVIOContext](http://blog.csdn.net/leixiaohua1020/article/details/14215369)\n\n##### [FFMPEG结构体分析：AVCodec](http://blog.csdn.net/leixiaohua1020/article/details/14215833)\n\n##### [FFMPEG结构体分析：AVStream](http://blog.csdn.net/leixiaohua1020/article/details/14215821)\n\n##### [FFMPEG结构体分析：AVPacket](http://blog.csdn.net/leixiaohua1020/article/details/14215755)\n\n","source":"_posts/talk-about-FFmpeg-part2.md","raw":"title: 笔谈FFmpeg（二）\ndate: 2015-04-28 15:04:58\ntags: \n- 音视频处理\n---\n　　经过前面的学习对FFmpeg的基本流程已经很熟悉了，现在到了掌握其中细节的时候了，用FFmpeg做播放器解码操作中，涉及到了一些结构体，这些结构之间到底有什么关系，它们是怎样协同工作的呢。文章 FFMPEG中最关键的结构体之间的关系 对这些结构间的关系进行了分析，详细内容如下：\n\n　　FFMPEG中结构体很多。最关键的结构体可以分成以下几类：\n　　\n<!-- more -->\n\n#### a) 解协议（http,rtsp,rtmp,mms）\n\nAVIOContext，URLProtocol，URLContext主要存储视音频使用的协议的类型以及状态。URLProtocol存储输入视音频使用的封装格式。每种协议都对应一个URLProtocol结构。（注意：FFMPEG中文件也被当做一种协议“file”）\n\n#### b) 解封装（flv,avi,rmvb,mp4）\n\nAVFormatContext主要存储视音频封装格式中包含的信息；AVInputFormat存储输入视音频使用的封装格式。每种视音频封装格式都对应一个AVInputFormat 结构。\n\n#### c) 解码（h264,mpeg2,aac,mp3）\n\n每个AVStream存储一个视频/音频流的相关数据；每个AVStream对应一个AVCodecContext，存储该视频/音频流使用解码方式的相关数据；每个AVCodecContext中对应一个AVCodec，包含该视频/音频对应的解码器。每种解码器都对应一个AVCodec结构。\n\n#### d)存数据\n\n视频的话，每个结构一般是存一帧；音频可能有好几帧\n\n解码前数据：AVPacket\n\n解码后数据：AVFrame\n\n　　他们之间的对应关系如下所示：\n\n![流程图](http://img.blog.csdn.net/20130914204051125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGVpeGlhb2h1YTEwMjA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n　　上面提到的这些结构到底是干嘛用的，中国传媒大学的一个博士写了一系列的结构体的分析的文章，在这里列一个列表，需要好好看下：\n\n##### [FFMPEG结构体分析：AVFrame](http://blog.csdn.net/leixiaohua1020/article/details/14214577)\n\n##### [FFMPEG结构体分析：AVFormatContext](http://blog.csdn.net/leixiaohua1020/article/details/14214705)\n\n##### [FFMPEG结构体分析：AVCodecContext](http://blog.csdn.net/leixiaohua1020/article/details/14214859)\n\n##### [FFMPEG结构体分析：AVIOContext](http://blog.csdn.net/leixiaohua1020/article/details/14215369)\n\n##### [FFMPEG结构体分析：AVCodec](http://blog.csdn.net/leixiaohua1020/article/details/14215833)\n\n##### [FFMPEG结构体分析：AVStream](http://blog.csdn.net/leixiaohua1020/article/details/14215821)\n\n##### [FFMPEG结构体分析：AVPacket](http://blog.csdn.net/leixiaohua1020/article/details/14215755)\n\n","slug":"talk-about-FFmpeg-part2","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gztu002oqxep7ica8t4s","content":"<p>　　经过前面的学习对FFmpeg的基本流程已经很熟悉了，现在到了掌握其中细节的时候了，用FFmpeg做播放器解码操作中，涉及到了一些结构体，这些结构之间到底有什么关系，它们是怎样协同工作的呢。文章 FFMPEG中最关键的结构体之间的关系 对这些结构间的关系进行了分析，详细内容如下：</p>\n<p>　　FFMPEG中结构体很多。最关键的结构体可以分成以下几类：<br>　　<br><a id=\"more\"></a></p>\n<h4 id=\"a-解协议（http-rtsp-rtmp-mms）\"><a href=\"#a-解协议（http-rtsp-rtmp-mms）\" class=\"headerlink\" title=\"a) 解协议（http,rtsp,rtmp,mms）\"></a>a) 解协议（http,rtsp,rtmp,mms）</h4><p>AVIOContext，URLProtocol，URLContext主要存储视音频使用的协议的类型以及状态。URLProtocol存储输入视音频使用的封装格式。每种协议都对应一个URLProtocol结构。（注意：FFMPEG中文件也被当做一种协议“file”）</p>\n<h4 id=\"b-解封装（flv-avi-rmvb-mp4）\"><a href=\"#b-解封装（flv-avi-rmvb-mp4）\" class=\"headerlink\" title=\"b) 解封装（flv,avi,rmvb,mp4）\"></a>b) 解封装（flv,avi,rmvb,mp4）</h4><p>AVFormatContext主要存储视音频封装格式中包含的信息；AVInputFormat存储输入视音频使用的封装格式。每种视音频封装格式都对应一个AVInputFormat 结构。</p>\n<h4 id=\"c-解码（h264-mpeg2-aac-mp3）\"><a href=\"#c-解码（h264-mpeg2-aac-mp3）\" class=\"headerlink\" title=\"c) 解码（h264,mpeg2,aac,mp3）\"></a>c) 解码（h264,mpeg2,aac,mp3）</h4><p>每个AVStream存储一个视频/音频流的相关数据；每个AVStream对应一个AVCodecContext，存储该视频/音频流使用解码方式的相关数据；每个AVCodecContext中对应一个AVCodec，包含该视频/音频对应的解码器。每种解码器都对应一个AVCodec结构。</p>\n<h4 id=\"d-存数据\"><a href=\"#d-存数据\" class=\"headerlink\" title=\"d)存数据\"></a>d)存数据</h4><p>视频的话，每个结构一般是存一帧；音频可能有好几帧</p>\n<p>解码前数据：AVPacket</p>\n<p>解码后数据：AVFrame</p>\n<p>　　他们之间的对应关系如下所示：</p>\n<p><img src=\"http://img.blog.csdn.net/20130914204051125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGVpeGlhb2h1YTEwMjA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"流程图\"></p>\n<p>　　上面提到的这些结构到底是干嘛用的，中国传媒大学的一个博士写了一系列的结构体的分析的文章，在这里列一个列表，需要好好看下：</p>\n<h5 id=\"FFMPEG结构体分析：AVFrame\"><a href=\"#FFMPEG结构体分析：AVFrame\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVFrame\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14214577\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVFrame</a></h5><h5 id=\"FFMPEG结构体分析：AVFormatContext\"><a href=\"#FFMPEG结构体分析：AVFormatContext\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVFormatContext\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14214705\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVFormatContext</a></h5><h5 id=\"FFMPEG结构体分析：AVCodecContext\"><a href=\"#FFMPEG结构体分析：AVCodecContext\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVCodecContext\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14214859\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVCodecContext</a></h5><h5 id=\"FFMPEG结构体分析：AVIOContext\"><a href=\"#FFMPEG结构体分析：AVIOContext\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVIOContext\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14215369\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVIOContext</a></h5><h5 id=\"FFMPEG结构体分析：AVCodec\"><a href=\"#FFMPEG结构体分析：AVCodec\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVCodec\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14215833\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVCodec</a></h5><h5 id=\"FFMPEG结构体分析：AVStream\"><a href=\"#FFMPEG结构体分析：AVStream\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVStream\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14215821\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVStream</a></h5><h5 id=\"FFMPEG结构体分析：AVPacket\"><a href=\"#FFMPEG结构体分析：AVPacket\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVPacket\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14215755\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVPacket</a></h5>","site":{"data":{}},"excerpt":"<p>　　经过前面的学习对FFmpeg的基本流程已经很熟悉了，现在到了掌握其中细节的时候了，用FFmpeg做播放器解码操作中，涉及到了一些结构体，这些结构之间到底有什么关系，它们是怎样协同工作的呢。文章 FFMPEG中最关键的结构体之间的关系 对这些结构间的关系进行了分析，详细内容如下：</p>\n<p>　　FFMPEG中结构体很多。最关键的结构体可以分成以下几类：<br>　　<br>","more":"</p>\n<h4 id=\"a-解协议（http-rtsp-rtmp-mms）\"><a href=\"#a-解协议（http-rtsp-rtmp-mms）\" class=\"headerlink\" title=\"a) 解协议（http,rtsp,rtmp,mms）\"></a>a) 解协议（http,rtsp,rtmp,mms）</h4><p>AVIOContext，URLProtocol，URLContext主要存储视音频使用的协议的类型以及状态。URLProtocol存储输入视音频使用的封装格式。每种协议都对应一个URLProtocol结构。（注意：FFMPEG中文件也被当做一种协议“file”）</p>\n<h4 id=\"b-解封装（flv-avi-rmvb-mp4）\"><a href=\"#b-解封装（flv-avi-rmvb-mp4）\" class=\"headerlink\" title=\"b) 解封装（flv,avi,rmvb,mp4）\"></a>b) 解封装（flv,avi,rmvb,mp4）</h4><p>AVFormatContext主要存储视音频封装格式中包含的信息；AVInputFormat存储输入视音频使用的封装格式。每种视音频封装格式都对应一个AVInputFormat 结构。</p>\n<h4 id=\"c-解码（h264-mpeg2-aac-mp3）\"><a href=\"#c-解码（h264-mpeg2-aac-mp3）\" class=\"headerlink\" title=\"c) 解码（h264,mpeg2,aac,mp3）\"></a>c) 解码（h264,mpeg2,aac,mp3）</h4><p>每个AVStream存储一个视频/音频流的相关数据；每个AVStream对应一个AVCodecContext，存储该视频/音频流使用解码方式的相关数据；每个AVCodecContext中对应一个AVCodec，包含该视频/音频对应的解码器。每种解码器都对应一个AVCodec结构。</p>\n<h4 id=\"d-存数据\"><a href=\"#d-存数据\" class=\"headerlink\" title=\"d)存数据\"></a>d)存数据</h4><p>视频的话，每个结构一般是存一帧；音频可能有好几帧</p>\n<p>解码前数据：AVPacket</p>\n<p>解码后数据：AVFrame</p>\n<p>　　他们之间的对应关系如下所示：</p>\n<p><img src=\"http://img.blog.csdn.net/20130914204051125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGVpeGlhb2h1YTEwMjA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"流程图\"></p>\n<p>　　上面提到的这些结构到底是干嘛用的，中国传媒大学的一个博士写了一系列的结构体的分析的文章，在这里列一个列表，需要好好看下：</p>\n<h5 id=\"FFMPEG结构体分析：AVFrame\"><a href=\"#FFMPEG结构体分析：AVFrame\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVFrame\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14214577\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVFrame</a></h5><h5 id=\"FFMPEG结构体分析：AVFormatContext\"><a href=\"#FFMPEG结构体分析：AVFormatContext\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVFormatContext\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14214705\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVFormatContext</a></h5><h5 id=\"FFMPEG结构体分析：AVCodecContext\"><a href=\"#FFMPEG结构体分析：AVCodecContext\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVCodecContext\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14214859\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVCodecContext</a></h5><h5 id=\"FFMPEG结构体分析：AVIOContext\"><a href=\"#FFMPEG结构体分析：AVIOContext\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVIOContext\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14215369\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVIOContext</a></h5><h5 id=\"FFMPEG结构体分析：AVCodec\"><a href=\"#FFMPEG结构体分析：AVCodec\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVCodec\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14215833\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVCodec</a></h5><h5 id=\"FFMPEG结构体分析：AVStream\"><a href=\"#FFMPEG结构体分析：AVStream\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVStream\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14215821\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVStream</a></h5><h5 id=\"FFMPEG结构体分析：AVPacket\"><a href=\"#FFMPEG结构体分析：AVPacket\" class=\"headerlink\" title=\"FFMPEG结构体分析：AVPacket\"></a><a href=\"http://blog.csdn.net/leixiaohua1020/article/details/14215755\" target=\"_blank\" rel=\"external\">FFMPEG结构体分析：AVPacket</a></h5>"},{"title":"论 IT 技术的有效期","date":"2016-10-08T00:05:46.000Z","_content":"\n　　\tIT，互联网行业的代名词，代表着科技前沿、市场趋势，无时不刻在改变我们的生活。有那么一群活跃在 IT 行业的人群，美言之软件开发工程师，自嘲之码农，对 IT 技术的革新有着最深刻的体会。旧的技术被取代，程序员若不及时跟上市场的节奏，被淘汰是必然的结局。技术的新旧更替，处在程序开发最上层的程序员的反应最敏感，受到的冲击最大。有点实力的公司，要彰显市场的竞争力，在引领市场获取未来竞争力的驱动下，招募一批研究员、专家、首席科学家去做理论研究。这批做理论的人对 IT 市场的应激反应肯定是延迟的。理论的过时经历的时间更长，理论间的交叉以及相互引入改进，让理论存活的时间变长，也让做理论研究的 IT 人群有长远发展的空间，不至于时刻面临着技术失效的局面。\n\n<!-- more -->\n　　\t理论研究与应用开发，对于 IT 从业人员不可或缺。应用开发用到的技术更新换代快，受制于开发平台，倘若开发平台衰退，顶层的应用开发工程分分钟失业，塞班系统的消失，致使当年大批人面临失业转岗，说不定下一个就是 Android，iOS。作为 IT 职场人士，要时刻保持着对市场敏锐的嗅觉。一种新的技术和平台的火爆，下一刻就是人满为患，需求过剩。2015年春节之前 iOS 应用开发人员的需求可以用疯狂来形容，全民创业，国家鼓励大学生创业，O2O 的火热，催生了 iOS 培训市场的不正常的膨胀，大量 iOS 开发人员噌的一下就冒出来了。2015年下半年到2016年上半年，市场上 iOS 开发工程师过剩，iOS 应用开发工程师的薪资待遇下降回归理性，但真正有能耐的人却又是少数，水平差又无基础理论知识支撑的以市场回报率为导向的开发者面临失业和裁员的局面是肯定的。\n\n　　\t做软件开发，数据结构，算法，操作系统，编译原理，开发语言 C / C++ / JAVA，这些必备的技能要非常扎实。要想发展的更好，需要学习和实践软件架构。\n\n　　\t自从进入音视频技术行业，我考虑的更多的是如何从这个已存在多年的技术领域跳跃到一个新的方向去做更有理论深度的行业。我这样考虑的原因是知道技术是有时效性的。时效性意味着回报，意味着市场需求。考虑到自己几年后就三十岁了，如何保持自己的核心竞争力和实现自己高收益的目标，是我现阶段必须慎重决策的事情。\n\n`2016年10月8号 亲笔`","source":"_posts/talk-about-IT-technology.md","raw":"---\ntitle: 论 IT 技术的有效期\ndate: 2016-10-08 08:05:46\ntags:\n- 工作\n---\n\n　　\tIT，互联网行业的代名词，代表着科技前沿、市场趋势，无时不刻在改变我们的生活。有那么一群活跃在 IT 行业的人群，美言之软件开发工程师，自嘲之码农，对 IT 技术的革新有着最深刻的体会。旧的技术被取代，程序员若不及时跟上市场的节奏，被淘汰是必然的结局。技术的新旧更替，处在程序开发最上层的程序员的反应最敏感，受到的冲击最大。有点实力的公司，要彰显市场的竞争力，在引领市场获取未来竞争力的驱动下，招募一批研究员、专家、首席科学家去做理论研究。这批做理论的人对 IT 市场的应激反应肯定是延迟的。理论的过时经历的时间更长，理论间的交叉以及相互引入改进，让理论存活的时间变长，也让做理论研究的 IT 人群有长远发展的空间，不至于时刻面临着技术失效的局面。\n\n<!-- more -->\n　　\t理论研究与应用开发，对于 IT 从业人员不可或缺。应用开发用到的技术更新换代快，受制于开发平台，倘若开发平台衰退，顶层的应用开发工程分分钟失业，塞班系统的消失，致使当年大批人面临失业转岗，说不定下一个就是 Android，iOS。作为 IT 职场人士，要时刻保持着对市场敏锐的嗅觉。一种新的技术和平台的火爆，下一刻就是人满为患，需求过剩。2015年春节之前 iOS 应用开发人员的需求可以用疯狂来形容，全民创业，国家鼓励大学生创业，O2O 的火热，催生了 iOS 培训市场的不正常的膨胀，大量 iOS 开发人员噌的一下就冒出来了。2015年下半年到2016年上半年，市场上 iOS 开发工程师过剩，iOS 应用开发工程师的薪资待遇下降回归理性，但真正有能耐的人却又是少数，水平差又无基础理论知识支撑的以市场回报率为导向的开发者面临失业和裁员的局面是肯定的。\n\n　　\t做软件开发，数据结构，算法，操作系统，编译原理，开发语言 C / C++ / JAVA，这些必备的技能要非常扎实。要想发展的更好，需要学习和实践软件架构。\n\n　　\t自从进入音视频技术行业，我考虑的更多的是如何从这个已存在多年的技术领域跳跃到一个新的方向去做更有理论深度的行业。我这样考虑的原因是知道技术是有时效性的。时效性意味着回报，意味着市场需求。考虑到自己几年后就三十岁了，如何保持自己的核心竞争力和实现自己高收益的目标，是我现阶段必须慎重决策的事情。\n\n`2016年10月8号 亲笔`","slug":"talk-about-IT-technology","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gztw002qqxepe3g87s90","content":"<p>　　    IT，互联网行业的代名词，代表着科技前沿、市场趋势，无时不刻在改变我们的生活。有那么一群活跃在 IT 行业的人群，美言之软件开发工程师，自嘲之码农，对 IT 技术的革新有着最深刻的体会。旧的技术被取代，程序员若不及时跟上市场的节奏，被淘汰是必然的结局。技术的新旧更替，处在程序开发最上层的程序员的反应最敏感，受到的冲击最大。有点实力的公司，要彰显市场的竞争力，在引领市场获取未来竞争力的驱动下，招募一批研究员、专家、首席科学家去做理论研究。这批做理论的人对 IT 市场的应激反应肯定是延迟的。理论的过时经历的时间更长，理论间的交叉以及相互引入改进，让理论存活的时间变长，也让做理论研究的 IT 人群有长远发展的空间，不至于时刻面临着技术失效的局面。</p>\n<a id=\"more\"></a>\n<p>　　    理论研究与应用开发，对于 IT 从业人员不可或缺。应用开发用到的技术更新换代快，受制于开发平台，倘若开发平台衰退，顶层的应用开发工程分分钟失业，塞班系统的消失，致使当年大批人面临失业转岗，说不定下一个就是 Android，iOS。作为 IT 职场人士，要时刻保持着对市场敏锐的嗅觉。一种新的技术和平台的火爆，下一刻就是人满为患，需求过剩。2015年春节之前 iOS 应用开发人员的需求可以用疯狂来形容，全民创业，国家鼓励大学生创业，O2O 的火热，催生了 iOS 培训市场的不正常的膨胀，大量 iOS 开发人员噌的一下就冒出来了。2015年下半年到2016年上半年，市场上 iOS 开发工程师过剩，iOS 应用开发工程师的薪资待遇下降回归理性，但真正有能耐的人却又是少数，水平差又无基础理论知识支撑的以市场回报率为导向的开发者面临失业和裁员的局面是肯定的。</p>\n<p>　　    做软件开发，数据结构，算法，操作系统，编译原理，开发语言 C / C++ / JAVA，这些必备的技能要非常扎实。要想发展的更好，需要学习和实践软件架构。</p>\n<p>　　    自从进入音视频技术行业，我考虑的更多的是如何从这个已存在多年的技术领域跳跃到一个新的方向去做更有理论深度的行业。我这样考虑的原因是知道技术是有时效性的。时效性意味着回报，意味着市场需求。考虑到自己几年后就三十岁了，如何保持自己的核心竞争力和实现自己高收益的目标，是我现阶段必须慎重决策的事情。</p>\n<p><code>2016年10月8号 亲笔</code></p>\n","site":{"data":{}},"excerpt":"<p>　　    IT，互联网行业的代名词，代表着科技前沿、市场趋势，无时不刻在改变我们的生活。有那么一群活跃在 IT 行业的人群，美言之软件开发工程师，自嘲之码农，对 IT 技术的革新有着最深刻的体会。旧的技术被取代，程序员若不及时跟上市场的节奏，被淘汰是必然的结局。技术的新旧更替，处在程序开发最上层的程序员的反应最敏感，受到的冲击最大。有点实力的公司，要彰显市场的竞争力，在引领市场获取未来竞争力的驱动下，招募一批研究员、专家、首席科学家去做理论研究。这批做理论的人对 IT 市场的应激反应肯定是延迟的。理论的过时经历的时间更长，理论间的交叉以及相互引入改进，让理论存活的时间变长，也让做理论研究的 IT 人群有长远发展的空间，不至于时刻面临着技术失效的局面。</p>","more":"<p>　　    理论研究与应用开发，对于 IT 从业人员不可或缺。应用开发用到的技术更新换代快，受制于开发平台，倘若开发平台衰退，顶层的应用开发工程分分钟失业，塞班系统的消失，致使当年大批人面临失业转岗，说不定下一个就是 Android，iOS。作为 IT 职场人士，要时刻保持着对市场敏锐的嗅觉。一种新的技术和平台的火爆，下一刻就是人满为患，需求过剩。2015年春节之前 iOS 应用开发人员的需求可以用疯狂来形容，全民创业，国家鼓励大学生创业，O2O 的火热，催生了 iOS 培训市场的不正常的膨胀，大量 iOS 开发人员噌的一下就冒出来了。2015年下半年到2016年上半年，市场上 iOS 开发工程师过剩，iOS 应用开发工程师的薪资待遇下降回归理性，但真正有能耐的人却又是少数，水平差又无基础理论知识支撑的以市场回报率为导向的开发者面临失业和裁员的局面是肯定的。</p>\n<p>　　    做软件开发，数据结构，算法，操作系统，编译原理，开发语言 C / C++ / JAVA，这些必备的技能要非常扎实。要想发展的更好，需要学习和实践软件架构。</p>\n<p>　　    自从进入音视频技术行业，我考虑的更多的是如何从这个已存在多年的技术领域跳跃到一个新的方向去做更有理论深度的行业。我这样考虑的原因是知道技术是有时效性的。时效性意味着回报，意味着市场需求。考虑到自己几年后就三十岁了，如何保持自己的核心竞争力和实现自己高收益的目标，是我现阶段必须慎重决策的事情。</p>\n<p><code>2016年10月8号 亲笔</code></p>"},{"title":"笔谈cocoapods的安装与使用","date":"2015-05-11T08:09:05.000Z","_content":"　　因为要重构播放器库，所以就需要参考网上的开源项目，在播放器开源项目这块，kxmovie开源项目是值得参考的一个项目。在github下载下来后，运行该工程，发现其用到了cocoapods来管理第三方库，以前我做项目都是将第三方库直接下载然后将源文件导入到工程，这种做法有其好处也存在一定的弊端，好处是便于项目的维护，方便的知道过去使用的第三方库是个什么情况，还可以根据实际需求修改，弊端就是第三方库的更新需要自己下载最新的再将旧的替换（手动更新）。通过cocoapods来管理第三方库，可以获取到最新的第三库将其引用到项目中，而且不需要自己手动去添加该第三方库的依赖库，虽然cocoapods用起来方便，但是也不一定全好，因为项目运行链接第三方库的时候，比如之前自己改过cocoapods引用进来的第三方库，这时就悲剧了，加载的第三方库是重新从网络上获取的，网上一些开发者也提到了，通过cocoapods管理项目中的第三方库不便于项目回滚。所以，是否选择cocoapods要根据实际情况来定。\n\n<!-- more -->\n\n　　要使用cocoapods，对于之前没有安装过cocoapods的开发者来说，首先就是要在Mac上安装cocoapods，在Mac终端执行命令 **sudo gem install cocoapods**，执行结果如下\n　　\n![终端执行结果](http://images.cnitblog.com/blog2015/499497/201505/111557198605907.png)\n\n　　但是没有发现cocoapods源，因为ruby的软件源rubygems.org使用的亚马逊的云服务，被墙了，需要更新一下ruby的源，使用其他能支持的源---->国内淘宝的源：\n\n\tgem sources --remove https://rubygems.org/\n\n\tgem sources -a http://ruby.taobao.org/\n\n\tgem sources -l\n\n　　执行上面的命令结果如下：\n\n![淘宝源执行结果](http://images.cnitblog.com/blog2015/499497/201505/111601220012200.png)\n\n　　现在，更新源成功了，可以进行安装了，继续在Mac终端执行命令 **sudo gem install cocoapods**，执行结果如下：\n\n![终端执行结果](http://images.cnitblog.com/blog2015/499497/201505/111605066427802.png)\n\n.............\n\n.............\n\n　　接下来在Mac终端输入以下命令：**pod setup**　　\n\n注意：This process will likely take a while as this command clones the CocoaPods Specs repository \n\ninto ~/.cocoapods/ on your computer.\n\n![终端执行结果](http://images.cnitblog.com/blog2015/499497/201505/111655319395424.png)\n\n 　　来看看我们安装的cocoapods的版本信息，在Mac终端上执行命令 **pod --version**，执行结果如下：\n \n![终端执行结果](http://images.cnitblog.com/blog2015/499497/201505/111608117677679.png)\n\n　　OK，cocoapods安装成功了。\n\n　　若要卸载cocoapods， 就在Mac终端执行命令 **sudo gem uninstall cocoapods**\n\n　　参考文章：[用CocoaPods做iOS程序的依赖管理](http://www.devtang.com/blog/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/)\n\n　　　　　　　[iOS.CocoaPods.0](http://www.cnblogs.com/cwgk/p/3370949.html)\n\n　　　　　　  [OS X升级到10.10之后使用pod出现问题的解决方法](http://blog.csdn.net/dqjyong/article/details/37958067)\n\n　　　　　　  [osx升级到10.10后，用pod install报错最终解决办法](http://blog.csdn.net/feixiang_song/article/details/40392629?utm_source=tuicool)\n\n　　cocoapods安装好了，接下来就该用它来做事了。使用CocoaPods管理第三方库的例子如下：\n\n　　使用Xcode,在工程根目录下，新建立一个空白的Podfile文档，然后在里面添加以下内容\n\n\tplatform:ios,'6.0'\n\tpod 'FMDB', '~> 2.0'\n\tpod 'AFNetworking', '~> 1.1.0'\n\tpod 'JSONKit','~>1.4'\n\t\n 　  保存，然后配置工程， 在系统终端中，使用cd命令切换到项目根目录下，输入命令： **pod install**\n\n　　执行完之后，CocoaPods在工程目录下创建了一个文件夹“Pods”，该文件夹存放所有依赖的库，另外还创建了一个.xcworkspace文件，配置完之后需使用.xcworkspace文件打开工程。\n\n　　参考文章：[CocoaPods安装和使用教程](http://www.cnblogs.com/crazypebble/p/3597419.html)\n\n　　　　　　  [iOS系列译文：深入理解 CocoaPods](http://jishu.zol.com.cn/207731.html)\n\n \n\n　　对于kxmoive这个工程，它使用cocoapods就引用了一个库，对于我而言，就因为引用一个库反复折腾cocoapods，肯定不爽，浪费时间。所以，我就想删掉kxmoive工程中cocoapods的所有相关东西。但是，删除cocoapods后，出现了如下错误：\n\n　　**diff: /../Podfile.lock: No such file or directory diff: /Manifest.lock: No such file or directory error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.**\n\n　　我参考文章 [从工程中删除Cocoapods](http://blog.csdn.net/freedom2028/article/details/10244819) ，顺利解决了这个问题。对于上面的这个报错，当工程中有使用cocoapods的时候，运行项目也可能会出现这个问题，那就按照报错提示，重新更新pod，即在Mac终端执行pod install，参考文章 [Xcode工程使用CocoaPods管理第三方库新建工程时出现错误](http://www.cnblogs.com/ios-wmm/p/3360958.html)\n\n\n","source":"_posts/talk-about-cocoapods-install-and-use.md","raw":"title: 笔谈cocoapods的安装与使用\ndate: 2015-05-11 16:09:05\ntags: \n- iOS中高级开发\n---\n　　因为要重构播放器库，所以就需要参考网上的开源项目，在播放器开源项目这块，kxmovie开源项目是值得参考的一个项目。在github下载下来后，运行该工程，发现其用到了cocoapods来管理第三方库，以前我做项目都是将第三方库直接下载然后将源文件导入到工程，这种做法有其好处也存在一定的弊端，好处是便于项目的维护，方便的知道过去使用的第三方库是个什么情况，还可以根据实际需求修改，弊端就是第三方库的更新需要自己下载最新的再将旧的替换（手动更新）。通过cocoapods来管理第三方库，可以获取到最新的第三库将其引用到项目中，而且不需要自己手动去添加该第三方库的依赖库，虽然cocoapods用起来方便，但是也不一定全好，因为项目运行链接第三方库的时候，比如之前自己改过cocoapods引用进来的第三方库，这时就悲剧了，加载的第三方库是重新从网络上获取的，网上一些开发者也提到了，通过cocoapods管理项目中的第三方库不便于项目回滚。所以，是否选择cocoapods要根据实际情况来定。\n\n<!-- more -->\n\n　　要使用cocoapods，对于之前没有安装过cocoapods的开发者来说，首先就是要在Mac上安装cocoapods，在Mac终端执行命令 **sudo gem install cocoapods**，执行结果如下\n　　\n![终端执行结果](http://images.cnitblog.com/blog2015/499497/201505/111557198605907.png)\n\n　　但是没有发现cocoapods源，因为ruby的软件源rubygems.org使用的亚马逊的云服务，被墙了，需要更新一下ruby的源，使用其他能支持的源---->国内淘宝的源：\n\n\tgem sources --remove https://rubygems.org/\n\n\tgem sources -a http://ruby.taobao.org/\n\n\tgem sources -l\n\n　　执行上面的命令结果如下：\n\n![淘宝源执行结果](http://images.cnitblog.com/blog2015/499497/201505/111601220012200.png)\n\n　　现在，更新源成功了，可以进行安装了，继续在Mac终端执行命令 **sudo gem install cocoapods**，执行结果如下：\n\n![终端执行结果](http://images.cnitblog.com/blog2015/499497/201505/111605066427802.png)\n\n.............\n\n.............\n\n　　接下来在Mac终端输入以下命令：**pod setup**　　\n\n注意：This process will likely take a while as this command clones the CocoaPods Specs repository \n\ninto ~/.cocoapods/ on your computer.\n\n![终端执行结果](http://images.cnitblog.com/blog2015/499497/201505/111655319395424.png)\n\n 　　来看看我们安装的cocoapods的版本信息，在Mac终端上执行命令 **pod --version**，执行结果如下：\n \n![终端执行结果](http://images.cnitblog.com/blog2015/499497/201505/111608117677679.png)\n\n　　OK，cocoapods安装成功了。\n\n　　若要卸载cocoapods， 就在Mac终端执行命令 **sudo gem uninstall cocoapods**\n\n　　参考文章：[用CocoaPods做iOS程序的依赖管理](http://www.devtang.com/blog/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/)\n\n　　　　　　　[iOS.CocoaPods.0](http://www.cnblogs.com/cwgk/p/3370949.html)\n\n　　　　　　  [OS X升级到10.10之后使用pod出现问题的解决方法](http://blog.csdn.net/dqjyong/article/details/37958067)\n\n　　　　　　  [osx升级到10.10后，用pod install报错最终解决办法](http://blog.csdn.net/feixiang_song/article/details/40392629?utm_source=tuicool)\n\n　　cocoapods安装好了，接下来就该用它来做事了。使用CocoaPods管理第三方库的例子如下：\n\n　　使用Xcode,在工程根目录下，新建立一个空白的Podfile文档，然后在里面添加以下内容\n\n\tplatform:ios,'6.0'\n\tpod 'FMDB', '~> 2.0'\n\tpod 'AFNetworking', '~> 1.1.0'\n\tpod 'JSONKit','~>1.4'\n\t\n 　  保存，然后配置工程， 在系统终端中，使用cd命令切换到项目根目录下，输入命令： **pod install**\n\n　　执行完之后，CocoaPods在工程目录下创建了一个文件夹“Pods”，该文件夹存放所有依赖的库，另外还创建了一个.xcworkspace文件，配置完之后需使用.xcworkspace文件打开工程。\n\n　　参考文章：[CocoaPods安装和使用教程](http://www.cnblogs.com/crazypebble/p/3597419.html)\n\n　　　　　　  [iOS系列译文：深入理解 CocoaPods](http://jishu.zol.com.cn/207731.html)\n\n \n\n　　对于kxmoive这个工程，它使用cocoapods就引用了一个库，对于我而言，就因为引用一个库反复折腾cocoapods，肯定不爽，浪费时间。所以，我就想删掉kxmoive工程中cocoapods的所有相关东西。但是，删除cocoapods后，出现了如下错误：\n\n　　**diff: /../Podfile.lock: No such file or directory diff: /Manifest.lock: No such file or directory error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.**\n\n　　我参考文章 [从工程中删除Cocoapods](http://blog.csdn.net/freedom2028/article/details/10244819) ，顺利解决了这个问题。对于上面的这个报错，当工程中有使用cocoapods的时候，运行项目也可能会出现这个问题，那就按照报错提示，重新更新pod，即在Mac终端执行pod install，参考文章 [Xcode工程使用CocoaPods管理第三方库新建工程时出现错误](http://www.cnblogs.com/ios-wmm/p/3360958.html)\n\n\n","slug":"talk-about-cocoapods-install-and-use","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzty002sqxep86qi6amm","content":"<p>　　因为要重构播放器库，所以就需要参考网上的开源项目，在播放器开源项目这块，kxmovie开源项目是值得参考的一个项目。在github下载下来后，运行该工程，发现其用到了cocoapods来管理第三方库，以前我做项目都是将第三方库直接下载然后将源文件导入到工程，这种做法有其好处也存在一定的弊端，好处是便于项目的维护，方便的知道过去使用的第三方库是个什么情况，还可以根据实际需求修改，弊端就是第三方库的更新需要自己下载最新的再将旧的替换（手动更新）。通过cocoapods来管理第三方库，可以获取到最新的第三库将其引用到项目中，而且不需要自己手动去添加该第三方库的依赖库，虽然cocoapods用起来方便，但是也不一定全好，因为项目运行链接第三方库的时候，比如之前自己改过cocoapods引用进来的第三方库，这时就悲剧了，加载的第三方库是重新从网络上获取的，网上一些开发者也提到了，通过cocoapods管理项目中的第三方库不便于项目回滚。所以，是否选择cocoapods要根据实际情况来定。</p>\n<a id=\"more\"></a>\n<p>　　要使用cocoapods，对于之前没有安装过cocoapods的开发者来说，首先就是要在Mac上安装cocoapods，在Mac终端执行命令 <strong>sudo gem install cocoapods</strong>，执行结果如下<br>　　<br><img src=\"http://images.cnitblog.com/blog2015/499497/201505/111557198605907.png\" alt=\"终端执行结果\"></p>\n<p>　　但是没有发现cocoapods源，因为ruby的软件源rubygems.org使用的亚马逊的云服务，被墙了，需要更新一下ruby的源，使用其他能支持的源—-&gt;国内淘宝的源：</p>\n<pre><code>gem sources --remove https://rubygems.org/\n\ngem sources -a http://ruby.taobao.org/\n\ngem sources -l\n</code></pre><p>　　执行上面的命令结果如下：</p>\n<p><img src=\"http://images.cnitblog.com/blog2015/499497/201505/111601220012200.png\" alt=\"淘宝源执行结果\"></p>\n<p>　　现在，更新源成功了，可以进行安装了，继续在Mac终端执行命令 <strong>sudo gem install cocoapods</strong>，执行结果如下：</p>\n<p><img src=\"http://images.cnitblog.com/blog2015/499497/201505/111605066427802.png\" alt=\"终端执行结果\"></p>\n<p>………….</p>\n<p>………….</p>\n<p>　　接下来在Mac终端输入以下命令：<strong>pod setup</strong>　　</p>\n<p>注意：This process will likely take a while as this command clones the CocoaPods Specs repository </p>\n<p>into ~/.cocoapods/ on your computer.</p>\n<p><img src=\"http://images.cnitblog.com/blog2015/499497/201505/111655319395424.png\" alt=\"终端执行结果\"></p>\n<p> 　　来看看我们安装的cocoapods的版本信息，在Mac终端上执行命令 <strong>pod –version</strong>，执行结果如下：</p>\n<p><img src=\"http://images.cnitblog.com/blog2015/499497/201505/111608117677679.png\" alt=\"终端执行结果\"></p>\n<p>　　OK，cocoapods安装成功了。</p>\n<p>　　若要卸载cocoapods， 就在Mac终端执行命令 <strong>sudo gem uninstall cocoapods</strong></p>\n<p>　　参考文章：<a href=\"http://www.devtang.com/blog/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/\" target=\"_blank\" rel=\"external\">用CocoaPods做iOS程序的依赖管理</a></p>\n<p>　　　　　　　<a href=\"http://www.cnblogs.com/cwgk/p/3370949.html\" target=\"_blank\" rel=\"external\">iOS.CocoaPods.0</a></p>\n<p>　　　　　　  <a href=\"http://blog.csdn.net/dqjyong/article/details/37958067\" target=\"_blank\" rel=\"external\">OS X升级到10.10之后使用pod出现问题的解决方法</a></p>\n<p>　　　　　　  <a href=\"http://blog.csdn.net/feixiang_song/article/details/40392629?utm_source=tuicool\" target=\"_blank\" rel=\"external\">osx升级到10.10后，用pod install报错最终解决办法</a></p>\n<p>　　cocoapods安装好了，接下来就该用它来做事了。使用CocoaPods管理第三方库的例子如下：</p>\n<p>　　使用Xcode,在工程根目录下，新建立一个空白的Podfile文档，然后在里面添加以下内容</p>\n<pre><code>platform:ios,&apos;6.0&apos;\npod &apos;FMDB&apos;, &apos;~&gt; 2.0&apos;\npod &apos;AFNetworking&apos;, &apos;~&gt; 1.1.0&apos;\npod &apos;JSONKit&apos;,&apos;~&gt;1.4&apos;\n</code></pre><p> 　  保存，然后配置工程， 在系统终端中，使用cd命令切换到项目根目录下，输入命令： <strong>pod install</strong></p>\n<p>　　执行完之后，CocoaPods在工程目录下创建了一个文件夹“Pods”，该文件夹存放所有依赖的库，另外还创建了一个.xcworkspace文件，配置完之后需使用.xcworkspace文件打开工程。</p>\n<p>　　参考文章：<a href=\"http://www.cnblogs.com/crazypebble/p/3597419.html\" target=\"_blank\" rel=\"external\">CocoaPods安装和使用教程</a></p>\n<p>　　　　　　  <a href=\"http://jishu.zol.com.cn/207731.html\" target=\"_blank\" rel=\"external\">iOS系列译文：深入理解 CocoaPods</a></p>\n<p>　　对于kxmoive这个工程，它使用cocoapods就引用了一个库，对于我而言，就因为引用一个库反复折腾cocoapods，肯定不爽，浪费时间。所以，我就想删掉kxmoive工程中cocoapods的所有相关东西。但是，删除cocoapods后，出现了如下错误：</p>\n<p>　　<strong>diff: /../Podfile.lock: No such file or directory diff: /Manifest.lock: No such file or directory error: The sandbox is not in sync with the Podfile.lock. Run ‘pod install’ or update your CocoaPods installation.</strong></p>\n<p>　　我参考文章 <a href=\"http://blog.csdn.net/freedom2028/article/details/10244819\" target=\"_blank\" rel=\"external\">从工程中删除Cocoapods</a> ，顺利解决了这个问题。对于上面的这个报错，当工程中有使用cocoapods的时候，运行项目也可能会出现这个问题，那就按照报错提示，重新更新pod，即在Mac终端执行pod install，参考文章 <a href=\"http://www.cnblogs.com/ios-wmm/p/3360958.html\" target=\"_blank\" rel=\"external\">Xcode工程使用CocoaPods管理第三方库新建工程时出现错误</a></p>\n","site":{"data":{}},"excerpt":"<p>　　因为要重构播放器库，所以就需要参考网上的开源项目，在播放器开源项目这块，kxmovie开源项目是值得参考的一个项目。在github下载下来后，运行该工程，发现其用到了cocoapods来管理第三方库，以前我做项目都是将第三方库直接下载然后将源文件导入到工程，这种做法有其好处也存在一定的弊端，好处是便于项目的维护，方便的知道过去使用的第三方库是个什么情况，还可以根据实际需求修改，弊端就是第三方库的更新需要自己下载最新的再将旧的替换（手动更新）。通过cocoapods来管理第三方库，可以获取到最新的第三库将其引用到项目中，而且不需要自己手动去添加该第三方库的依赖库，虽然cocoapods用起来方便，但是也不一定全好，因为项目运行链接第三方库的时候，比如之前自己改过cocoapods引用进来的第三方库，这时就悲剧了，加载的第三方库是重新从网络上获取的，网上一些开发者也提到了，通过cocoapods管理项目中的第三方库不便于项目回滚。所以，是否选择cocoapods要根据实际情况来定。</p>","more":"<p>　　要使用cocoapods，对于之前没有安装过cocoapods的开发者来说，首先就是要在Mac上安装cocoapods，在Mac终端执行命令 <strong>sudo gem install cocoapods</strong>，执行结果如下<br>　　<br><img src=\"http://images.cnitblog.com/blog2015/499497/201505/111557198605907.png\" alt=\"终端执行结果\"></p>\n<p>　　但是没有发现cocoapods源，因为ruby的软件源rubygems.org使用的亚马逊的云服务，被墙了，需要更新一下ruby的源，使用其他能支持的源—-&gt;国内淘宝的源：</p>\n<pre><code>gem sources --remove https://rubygems.org/\n\ngem sources -a http://ruby.taobao.org/\n\ngem sources -l\n</code></pre><p>　　执行上面的命令结果如下：</p>\n<p><img src=\"http://images.cnitblog.com/blog2015/499497/201505/111601220012200.png\" alt=\"淘宝源执行结果\"></p>\n<p>　　现在，更新源成功了，可以进行安装了，继续在Mac终端执行命令 <strong>sudo gem install cocoapods</strong>，执行结果如下：</p>\n<p><img src=\"http://images.cnitblog.com/blog2015/499497/201505/111605066427802.png\" alt=\"终端执行结果\"></p>\n<p>………….</p>\n<p>………….</p>\n<p>　　接下来在Mac终端输入以下命令：<strong>pod setup</strong>　　</p>\n<p>注意：This process will likely take a while as this command clones the CocoaPods Specs repository </p>\n<p>into ~/.cocoapods/ on your computer.</p>\n<p><img src=\"http://images.cnitblog.com/blog2015/499497/201505/111655319395424.png\" alt=\"终端执行结果\"></p>\n<p> 　　来看看我们安装的cocoapods的版本信息，在Mac终端上执行命令 <strong>pod –version</strong>，执行结果如下：</p>\n<p><img src=\"http://images.cnitblog.com/blog2015/499497/201505/111608117677679.png\" alt=\"终端执行结果\"></p>\n<p>　　OK，cocoapods安装成功了。</p>\n<p>　　若要卸载cocoapods， 就在Mac终端执行命令 <strong>sudo gem uninstall cocoapods</strong></p>\n<p>　　参考文章：<a href=\"http://www.devtang.com/blog/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/\" target=\"_blank\" rel=\"external\">用CocoaPods做iOS程序的依赖管理</a></p>\n<p>　　　　　　　<a href=\"http://www.cnblogs.com/cwgk/p/3370949.html\" target=\"_blank\" rel=\"external\">iOS.CocoaPods.0</a></p>\n<p>　　　　　　  <a href=\"http://blog.csdn.net/dqjyong/article/details/37958067\" target=\"_blank\" rel=\"external\">OS X升级到10.10之后使用pod出现问题的解决方法</a></p>\n<p>　　　　　　  <a href=\"http://blog.csdn.net/feixiang_song/article/details/40392629?utm_source=tuicool\" target=\"_blank\" rel=\"external\">osx升级到10.10后，用pod install报错最终解决办法</a></p>\n<p>　　cocoapods安装好了，接下来就该用它来做事了。使用CocoaPods管理第三方库的例子如下：</p>\n<p>　　使用Xcode,在工程根目录下，新建立一个空白的Podfile文档，然后在里面添加以下内容</p>\n<pre><code>platform:ios,&apos;6.0&apos;\npod &apos;FMDB&apos;, &apos;~&gt; 2.0&apos;\npod &apos;AFNetworking&apos;, &apos;~&gt; 1.1.0&apos;\npod &apos;JSONKit&apos;,&apos;~&gt;1.4&apos;\n</code></pre><p> 　  保存，然后配置工程， 在系统终端中，使用cd命令切换到项目根目录下，输入命令： <strong>pod install</strong></p>\n<p>　　执行完之后，CocoaPods在工程目录下创建了一个文件夹“Pods”，该文件夹存放所有依赖的库，另外还创建了一个.xcworkspace文件，配置完之后需使用.xcworkspace文件打开工程。</p>\n<p>　　参考文章：<a href=\"http://www.cnblogs.com/crazypebble/p/3597419.html\" target=\"_blank\" rel=\"external\">CocoaPods安装和使用教程</a></p>\n<p>　　　　　　  <a href=\"http://jishu.zol.com.cn/207731.html\" target=\"_blank\" rel=\"external\">iOS系列译文：深入理解 CocoaPods</a></p>\n<p>　　对于kxmoive这个工程，它使用cocoapods就引用了一个库，对于我而言，就因为引用一个库反复折腾cocoapods，肯定不爽，浪费时间。所以，我就想删掉kxmoive工程中cocoapods的所有相关东西。但是，删除cocoapods后，出现了如下错误：</p>\n<p>　　<strong>diff: /../Podfile.lock: No such file or directory diff: /Manifest.lock: No such file or directory error: The sandbox is not in sync with the Podfile.lock. Run ‘pod install’ or update your CocoaPods installation.</strong></p>\n<p>　　我参考文章 <a href=\"http://blog.csdn.net/freedom2028/article/details/10244819\" target=\"_blank\" rel=\"external\">从工程中删除Cocoapods</a> ，顺利解决了这个问题。对于上面的这个报错，当工程中有使用cocoapods的时候，运行项目也可能会出现这个问题，那就按照报错提示，重新更新pod，即在Mac终端执行pod install，参考文章 <a href=\"http://www.cnblogs.com/ios-wmm/p/3360958.html\" target=\"_blank\" rel=\"external\">Xcode工程使用CocoaPods管理第三方库新建工程时出现错误</a></p>"},{"title":"对理论学习与应用的一些思考","date":"2016-07-07T02:35:14.000Z","_content":"\n待续。。。\n\n","source":"_posts/talk-about-theory-study-and-application.md","raw":"---\ntitle: 对理论学习与应用的一些思考\ndate: 2016-07-07 10:35:14\ntags:\n- 工作\n---\n\n待续。。。\n\n","slug":"talk-about-theory-study-and-application","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gztz002uqxepfgmm98fg","content":"<p>待续。。。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>待续。。。</p>\n"},{"title":"谈一谈做iOS播放器库开发所涉及的知识点","date":"2015-04-22T05:59:40.000Z","_content":"\n　　在自己研究生毕业的时候，想着能找上一份做视频编解码的工作，可惜没有如愿，最后到了一家iOS游戏渠道公司去做游戏支付业务的SDK开发，我的iOS正式开发生涯就这么开始了。\n\n　　在那家iOS游戏渠道没做上一年，就离职了，至于怎么离职的，后续文章会谈一谈，以此来梳理下自己的职业规划。说了这多了，进入正题吧，今年3月份找上了一家做音视频服务的公司，做iOS播放器的开发，职位是播放器开发工程师，就是我现在所在的公司咯。\n\n　　要开发一套属于自己的播放器库，不利用移动设备上自带的播放器来播放音频、视频，要用到哪些知识点呢，下面以我熟悉公司播放器库的前提下，说一说我的看法。\n\n<!-- more -->\n\n　　任何客户端只要跟服务器打交道，少不了通讯协议。音视频这块涉及的实时流相关协议很多，有RTSP、RTMP、MMS、HLS、RTP、RTCP、SDP、TCP、UDP、HTTP等。\n\n　　客户端从服务器上获取到的音视频数据，要知道容器与编码方式的区别，封装音视频数据的容器类型主要有AVI(.avi), MPG(.mpg/.mpeg/.dat), VOB(.vob), MP4, 3GP, ASF(.wmv/.asf), RM(.rm/.rmvb), MOV(.mov), MKV, WAV, TS。\n\n　　客户端从服务器上获取到了音视频数据，该如何进行解码显示，首先要知道音频、视频的的编码方式，客户端要显示音视频数据需要根据编码的方式进行相应的解码操作，目前常见的编码类型有MPEG系列、H.26X系列、微软windows media系列、Real Media系列、QuickTime系列。\n\n　　上面说到了一些流媒体协议、流媒体数据的封装类型以及编码方式。而我们要做一款播放器首先是要对以上知识要了解的。\n\n　　公司的业务涉及最多的是rtsp这块。服务器端为rtsp流媒体服务器，客户端也就是播放器库采用FFMpeg进行解码、OPenGL ES进行YUV视频数据渲染。\n\n　　播放器库与服务器端进行交互，涉及到RTSP协议的请求，传输层协议采用的TCP、UDP协议，所以要对TCP连接的三次握手要熟悉，这其中也就涉及到网络编程中的SOCKET编程知识了，BSD socket编程是需要掌握的。\n\n　　播放器库对从服务器上请求到的音频、视频rtp包，要进行解包，就是去掉一些协议的头获取到音视频数据段。获取到这些数据后，不能直接播放，需要进行解码操作。视频解码出来一般为Planar 4:2:0 YUV格式。要显示YUV视频图像就需要利用OPenGL ES进行渲染了。\n\n　　播放器在工作时，视频数据要进行解码放入数据缓存区，数据缓存区的解码后的数据被取出交给OpenGL进行渲染，所以多线程是必不可少的环节了。开辟2个线程，一个线程进行解码处理，另一个线程进行视频数据的渲染。多线程中常使用的是POSIX thread多线程编程。\n\n　　虽然开发的iOS播放器库，但是底层的东西大部分是c语言的东西，比如用到开源库FFMpeg，以及一些上层的对FFMpeg的封装，数据缓存区，所以c语言和数据结构的基础要扎实，什么函数指针，内存分配与管理，数据结构中的单链表那得玩得比较溜。\n\n　　总结一下，需要具备的知识有\n\n* rtsp、sdp、tcp、udp、ip协议（rtsp的DESCRIBE、OPTION、SETUP、PLAY、PAUSE、TEARDOWN；tcp连接的三次握手／断开的四次握手）\n\n* socket（bsd socket）\n\n* 多线程（posix thread）\n\n* opengl es\n\n* FFmpeg（知道用它来解码）\n\n* YUV420（知道它的原理与格式）\n\n* 音视频同步（时间戳的处理）\n\n* C语言指针（void *、函数指针、回调函数）\n\n* 内存管理（堆区、栈区、静态区、内存对齐）\n\n* 数据结构（单链表）\n\n\n","source":"_posts/talk-about-knowledge-points-of-developing-iOS-player.md","raw":"title: 谈一谈做iOS播放器库开发所涉及的知识点\ndate: 2015-04-22 13:59:40\ntags:\n- 音视频处理\n---\n\n　　在自己研究生毕业的时候，想着能找上一份做视频编解码的工作，可惜没有如愿，最后到了一家iOS游戏渠道公司去做游戏支付业务的SDK开发，我的iOS正式开发生涯就这么开始了。\n\n　　在那家iOS游戏渠道没做上一年，就离职了，至于怎么离职的，后续文章会谈一谈，以此来梳理下自己的职业规划。说了这多了，进入正题吧，今年3月份找上了一家做音视频服务的公司，做iOS播放器的开发，职位是播放器开发工程师，就是我现在所在的公司咯。\n\n　　要开发一套属于自己的播放器库，不利用移动设备上自带的播放器来播放音频、视频，要用到哪些知识点呢，下面以我熟悉公司播放器库的前提下，说一说我的看法。\n\n<!-- more -->\n\n　　任何客户端只要跟服务器打交道，少不了通讯协议。音视频这块涉及的实时流相关协议很多，有RTSP、RTMP、MMS、HLS、RTP、RTCP、SDP、TCP、UDP、HTTP等。\n\n　　客户端从服务器上获取到的音视频数据，要知道容器与编码方式的区别，封装音视频数据的容器类型主要有AVI(.avi), MPG(.mpg/.mpeg/.dat), VOB(.vob), MP4, 3GP, ASF(.wmv/.asf), RM(.rm/.rmvb), MOV(.mov), MKV, WAV, TS。\n\n　　客户端从服务器上获取到了音视频数据，该如何进行解码显示，首先要知道音频、视频的的编码方式，客户端要显示音视频数据需要根据编码的方式进行相应的解码操作，目前常见的编码类型有MPEG系列、H.26X系列、微软windows media系列、Real Media系列、QuickTime系列。\n\n　　上面说到了一些流媒体协议、流媒体数据的封装类型以及编码方式。而我们要做一款播放器首先是要对以上知识要了解的。\n\n　　公司的业务涉及最多的是rtsp这块。服务器端为rtsp流媒体服务器，客户端也就是播放器库采用FFMpeg进行解码、OPenGL ES进行YUV视频数据渲染。\n\n　　播放器库与服务器端进行交互，涉及到RTSP协议的请求，传输层协议采用的TCP、UDP协议，所以要对TCP连接的三次握手要熟悉，这其中也就涉及到网络编程中的SOCKET编程知识了，BSD socket编程是需要掌握的。\n\n　　播放器库对从服务器上请求到的音频、视频rtp包，要进行解包，就是去掉一些协议的头获取到音视频数据段。获取到这些数据后，不能直接播放，需要进行解码操作。视频解码出来一般为Planar 4:2:0 YUV格式。要显示YUV视频图像就需要利用OPenGL ES进行渲染了。\n\n　　播放器在工作时，视频数据要进行解码放入数据缓存区，数据缓存区的解码后的数据被取出交给OpenGL进行渲染，所以多线程是必不可少的环节了。开辟2个线程，一个线程进行解码处理，另一个线程进行视频数据的渲染。多线程中常使用的是POSIX thread多线程编程。\n\n　　虽然开发的iOS播放器库，但是底层的东西大部分是c语言的东西，比如用到开源库FFMpeg，以及一些上层的对FFMpeg的封装，数据缓存区，所以c语言和数据结构的基础要扎实，什么函数指针，内存分配与管理，数据结构中的单链表那得玩得比较溜。\n\n　　总结一下，需要具备的知识有\n\n* rtsp、sdp、tcp、udp、ip协议（rtsp的DESCRIBE、OPTION、SETUP、PLAY、PAUSE、TEARDOWN；tcp连接的三次握手／断开的四次握手）\n\n* socket（bsd socket）\n\n* 多线程（posix thread）\n\n* opengl es\n\n* FFmpeg（知道用它来解码）\n\n* YUV420（知道它的原理与格式）\n\n* 音视频同步（时间戳的处理）\n\n* C语言指针（void *、函数指针、回调函数）\n\n* 内存管理（堆区、栈区、静态区、内存对齐）\n\n* 数据结构（单链表）\n\n\n","slug":"talk-about-knowledge-points-of-developing-iOS-player","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzu0002wqxepmuw6htk0","content":"<p>　　在自己研究生毕业的时候，想着能找上一份做视频编解码的工作，可惜没有如愿，最后到了一家iOS游戏渠道公司去做游戏支付业务的SDK开发，我的iOS正式开发生涯就这么开始了。</p>\n<p>　　在那家iOS游戏渠道没做上一年，就离职了，至于怎么离职的，后续文章会谈一谈，以此来梳理下自己的职业规划。说了这多了，进入正题吧，今年3月份找上了一家做音视频服务的公司，做iOS播放器的开发，职位是播放器开发工程师，就是我现在所在的公司咯。</p>\n<p>　　要开发一套属于自己的播放器库，不利用移动设备上自带的播放器来播放音频、视频，要用到哪些知识点呢，下面以我熟悉公司播放器库的前提下，说一说我的看法。</p>\n<a id=\"more\"></a>\n<p>　　任何客户端只要跟服务器打交道，少不了通讯协议。音视频这块涉及的实时流相关协议很多，有RTSP、RTMP、MMS、HLS、RTP、RTCP、SDP、TCP、UDP、HTTP等。</p>\n<p>　　客户端从服务器上获取到的音视频数据，要知道容器与编码方式的区别，封装音视频数据的容器类型主要有AVI(.avi), MPG(.mpg/.mpeg/.dat), VOB(.vob), MP4, 3GP, ASF(.wmv/.asf), RM(.rm/.rmvb), MOV(.mov), MKV, WAV, TS。</p>\n<p>　　客户端从服务器上获取到了音视频数据，该如何进行解码显示，首先要知道音频、视频的的编码方式，客户端要显示音视频数据需要根据编码的方式进行相应的解码操作，目前常见的编码类型有MPEG系列、H.26X系列、微软windows media系列、Real Media系列、QuickTime系列。</p>\n<p>　　上面说到了一些流媒体协议、流媒体数据的封装类型以及编码方式。而我们要做一款播放器首先是要对以上知识要了解的。</p>\n<p>　　公司的业务涉及最多的是rtsp这块。服务器端为rtsp流媒体服务器，客户端也就是播放器库采用FFMpeg进行解码、OPenGL ES进行YUV视频数据渲染。</p>\n<p>　　播放器库与服务器端进行交互，涉及到RTSP协议的请求，传输层协议采用的TCP、UDP协议，所以要对TCP连接的三次握手要熟悉，这其中也就涉及到网络编程中的SOCKET编程知识了，BSD socket编程是需要掌握的。</p>\n<p>　　播放器库对从服务器上请求到的音频、视频rtp包，要进行解包，就是去掉一些协议的头获取到音视频数据段。获取到这些数据后，不能直接播放，需要进行解码操作。视频解码出来一般为Planar 4:2:0 YUV格式。要显示YUV视频图像就需要利用OPenGL ES进行渲染了。</p>\n<p>　　播放器在工作时，视频数据要进行解码放入数据缓存区，数据缓存区的解码后的数据被取出交给OpenGL进行渲染，所以多线程是必不可少的环节了。开辟2个线程，一个线程进行解码处理，另一个线程进行视频数据的渲染。多线程中常使用的是POSIX thread多线程编程。</p>\n<p>　　虽然开发的iOS播放器库，但是底层的东西大部分是c语言的东西，比如用到开源库FFMpeg，以及一些上层的对FFMpeg的封装，数据缓存区，所以c语言和数据结构的基础要扎实，什么函数指针，内存分配与管理，数据结构中的单链表那得玩得比较溜。</p>\n<p>　　总结一下，需要具备的知识有</p>\n<ul>\n<li><p>rtsp、sdp、tcp、udp、ip协议（rtsp的DESCRIBE、OPTION、SETUP、PLAY、PAUSE、TEARDOWN；tcp连接的三次握手／断开的四次握手）</p>\n</li>\n<li><p>socket（bsd socket）</p>\n</li>\n<li><p>多线程（posix thread）</p>\n</li>\n<li><p>opengl es</p>\n</li>\n<li><p>FFmpeg（知道用它来解码）</p>\n</li>\n<li><p>YUV420（知道它的原理与格式）</p>\n</li>\n<li><p>音视频同步（时间戳的处理）</p>\n</li>\n<li><p>C语言指针（void *、函数指针、回调函数）</p>\n</li>\n<li><p>内存管理（堆区、栈区、静态区、内存对齐）</p>\n</li>\n<li><p>数据结构（单链表）</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>　　在自己研究生毕业的时候，想着能找上一份做视频编解码的工作，可惜没有如愿，最后到了一家iOS游戏渠道公司去做游戏支付业务的SDK开发，我的iOS正式开发生涯就这么开始了。</p>\n<p>　　在那家iOS游戏渠道没做上一年，就离职了，至于怎么离职的，后续文章会谈一谈，以此来梳理下自己的职业规划。说了这多了，进入正题吧，今年3月份找上了一家做音视频服务的公司，做iOS播放器的开发，职位是播放器开发工程师，就是我现在所在的公司咯。</p>\n<p>　　要开发一套属于自己的播放器库，不利用移动设备上自带的播放器来播放音频、视频，要用到哪些知识点呢，下面以我熟悉公司播放器库的前提下，说一说我的看法。</p>","more":"<p>　　任何客户端只要跟服务器打交道，少不了通讯协议。音视频这块涉及的实时流相关协议很多，有RTSP、RTMP、MMS、HLS、RTP、RTCP、SDP、TCP、UDP、HTTP等。</p>\n<p>　　客户端从服务器上获取到的音视频数据，要知道容器与编码方式的区别，封装音视频数据的容器类型主要有AVI(.avi), MPG(.mpg/.mpeg/.dat), VOB(.vob), MP4, 3GP, ASF(.wmv/.asf), RM(.rm/.rmvb), MOV(.mov), MKV, WAV, TS。</p>\n<p>　　客户端从服务器上获取到了音视频数据，该如何进行解码显示，首先要知道音频、视频的的编码方式，客户端要显示音视频数据需要根据编码的方式进行相应的解码操作，目前常见的编码类型有MPEG系列、H.26X系列、微软windows media系列、Real Media系列、QuickTime系列。</p>\n<p>　　上面说到了一些流媒体协议、流媒体数据的封装类型以及编码方式。而我们要做一款播放器首先是要对以上知识要了解的。</p>\n<p>　　公司的业务涉及最多的是rtsp这块。服务器端为rtsp流媒体服务器，客户端也就是播放器库采用FFMpeg进行解码、OPenGL ES进行YUV视频数据渲染。</p>\n<p>　　播放器库与服务器端进行交互，涉及到RTSP协议的请求，传输层协议采用的TCP、UDP协议，所以要对TCP连接的三次握手要熟悉，这其中也就涉及到网络编程中的SOCKET编程知识了，BSD socket编程是需要掌握的。</p>\n<p>　　播放器库对从服务器上请求到的音频、视频rtp包，要进行解包，就是去掉一些协议的头获取到音视频数据段。获取到这些数据后，不能直接播放，需要进行解码操作。视频解码出来一般为Planar 4:2:0 YUV格式。要显示YUV视频图像就需要利用OPenGL ES进行渲染了。</p>\n<p>　　播放器在工作时，视频数据要进行解码放入数据缓存区，数据缓存区的解码后的数据被取出交给OpenGL进行渲染，所以多线程是必不可少的环节了。开辟2个线程，一个线程进行解码处理，另一个线程进行视频数据的渲染。多线程中常使用的是POSIX thread多线程编程。</p>\n<p>　　虽然开发的iOS播放器库，但是底层的东西大部分是c语言的东西，比如用到开源库FFMpeg，以及一些上层的对FFMpeg的封装，数据缓存区，所以c语言和数据结构的基础要扎实，什么函数指针，内存分配与管理，数据结构中的单链表那得玩得比较溜。</p>\n<p>　　总结一下，需要具备的知识有</p>\n<ul>\n<li><p>rtsp、sdp、tcp、udp、ip协议（rtsp的DESCRIBE、OPTION、SETUP、PLAY、PAUSE、TEARDOWN；tcp连接的三次握手／断开的四次握手）</p>\n</li>\n<li><p>socket（bsd socket）</p>\n</li>\n<li><p>多线程（posix thread）</p>\n</li>\n<li><p>opengl es</p>\n</li>\n<li><p>FFmpeg（知道用它来解码）</p>\n</li>\n<li><p>YUV420（知道它的原理与格式）</p>\n</li>\n<li><p>音视频同步（时间戳的处理）</p>\n</li>\n<li><p>C语言指针（void *、函数指针、回调函数）</p>\n</li>\n<li><p>内存管理（堆区、栈区、静态区、内存对齐）</p>\n</li>\n<li><p>数据结构（单链表）</p>\n</li>\n</ul>"},{"title":"近一个月在北京的感受","date":"2016-09-06T11:47:52.000Z","_content":"\n　　来北京了近一个月了，感觉不太适应。从生活方面，工作节奏上，都显出很多问题。\n\n　　生活方面，不适应这边的饮食，没南方吃的东西多，也没南方吃饭的地方多。在北京没有吃好过一顿早餐，也只吃过几顿比较满意的中午餐。我觉得要是这样下去，身体营养肯定跟不上，精力也会出现不足的问题。我准备每天自己做饭，早餐自己做，如果去公司上班，就带午饭过去。要是在家办公，就一天三顿都自己做。做饭，有助于培养耐心，细心，有助于做事流程上的统筹规划，最重要的是能吃上比较满意的饭菜。来北京近一个月了，对于我住的地方我都不熟悉，不知道附近有哪些大型超市，大型商场。每天都宅在家里办公，感觉整个人的状态都不打对劲。现在正当年，身体恢复都很快，但是人要活动，要呼吸新的空气，才能持久保持正常以及健康的状态。\n\n<!-- more -->\n　　工作方面，不适应远程办公的节奏。以前，都是早上去公司，晚上从公司离开。现在，突然不需要去公司办公，找不到上班工作的感觉了，我的工作时间安排出现了问题。自由办公，关键在于时间协调，每天工作任务的安排，这所有的东西都离不开时间的合理安排。在这种工作环境下，我的拖延症表现的很明显，时间的利用率也不高。反思了这段时间的工作，我首先要解决的是我的执行力问题，即解决拖延症，要在有效的时间里完成规定的计划和任务。\n","source":"_posts/the-feeling-of-Beijing-the-latest-month.md","raw":"title: 近一个月在北京的感受\ndate: 2016-09-06 19:47:52\ntags:\n- 工作\n- 生活\n---\n\n　　来北京了近一个月了，感觉不太适应。从生活方面，工作节奏上，都显出很多问题。\n\n　　生活方面，不适应这边的饮食，没南方吃的东西多，也没南方吃饭的地方多。在北京没有吃好过一顿早餐，也只吃过几顿比较满意的中午餐。我觉得要是这样下去，身体营养肯定跟不上，精力也会出现不足的问题。我准备每天自己做饭，早餐自己做，如果去公司上班，就带午饭过去。要是在家办公，就一天三顿都自己做。做饭，有助于培养耐心，细心，有助于做事流程上的统筹规划，最重要的是能吃上比较满意的饭菜。来北京近一个月了，对于我住的地方我都不熟悉，不知道附近有哪些大型超市，大型商场。每天都宅在家里办公，感觉整个人的状态都不打对劲。现在正当年，身体恢复都很快，但是人要活动，要呼吸新的空气，才能持久保持正常以及健康的状态。\n\n<!-- more -->\n　　工作方面，不适应远程办公的节奏。以前，都是早上去公司，晚上从公司离开。现在，突然不需要去公司办公，找不到上班工作的感觉了，我的工作时间安排出现了问题。自由办公，关键在于时间协调，每天工作任务的安排，这所有的东西都离不开时间的合理安排。在这种工作环境下，我的拖延症表现的很明显，时间的利用率也不高。反思了这段时间的工作，我首先要解决的是我的执行力问题，即解决拖延症，要在有效的时间里完成规定的计划和任务。\n","slug":"the-feeling-of-Beijing-the-latest-month","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzu2002yqxepi8iubmiz","content":"<p>　　来北京了近一个月了，感觉不太适应。从生活方面，工作节奏上，都显出很多问题。</p>\n<p>　　生活方面，不适应这边的饮食，没南方吃的东西多，也没南方吃饭的地方多。在北京没有吃好过一顿早餐，也只吃过几顿比较满意的中午餐。我觉得要是这样下去，身体营养肯定跟不上，精力也会出现不足的问题。我准备每天自己做饭，早餐自己做，如果去公司上班，就带午饭过去。要是在家办公，就一天三顿都自己做。做饭，有助于培养耐心，细心，有助于做事流程上的统筹规划，最重要的是能吃上比较满意的饭菜。来北京近一个月了，对于我住的地方我都不熟悉，不知道附近有哪些大型超市，大型商场。每天都宅在家里办公，感觉整个人的状态都不打对劲。现在正当年，身体恢复都很快，但是人要活动，要呼吸新的空气，才能持久保持正常以及健康的状态。</p>\n<a id=\"more\"></a>\n<p>　　工作方面，不适应远程办公的节奏。以前，都是早上去公司，晚上从公司离开。现在，突然不需要去公司办公，找不到上班工作的感觉了，我的工作时间安排出现了问题。自由办公，关键在于时间协调，每天工作任务的安排，这所有的东西都离不开时间的合理安排。在这种工作环境下，我的拖延症表现的很明显，时间的利用率也不高。反思了这段时间的工作，我首先要解决的是我的执行力问题，即解决拖延症，要在有效的时间里完成规定的计划和任务。</p>\n","site":{"data":{}},"excerpt":"<p>　　来北京了近一个月了，感觉不太适应。从生活方面，工作节奏上，都显出很多问题。</p>\n<p>　　生活方面，不适应这边的饮食，没南方吃的东西多，也没南方吃饭的地方多。在北京没有吃好过一顿早餐，也只吃过几顿比较满意的中午餐。我觉得要是这样下去，身体营养肯定跟不上，精力也会出现不足的问题。我准备每天自己做饭，早餐自己做，如果去公司上班，就带午饭过去。要是在家办公，就一天三顿都自己做。做饭，有助于培养耐心，细心，有助于做事流程上的统筹规划，最重要的是能吃上比较满意的饭菜。来北京近一个月了，对于我住的地方我都不熟悉，不知道附近有哪些大型超市，大型商场。每天都宅在家里办公，感觉整个人的状态都不打对劲。现在正当年，身体恢复都很快，但是人要活动，要呼吸新的空气，才能持久保持正常以及健康的状态。</p>","more":"<p>　　工作方面，不适应远程办公的节奏。以前，都是早上去公司，晚上从公司离开。现在，突然不需要去公司办公，找不到上班工作的感觉了，我的工作时间安排出现了问题。自由办公，关键在于时间协调，每天工作任务的安排，这所有的东西都离不开时间的合理安排。在这种工作环境下，我的拖延症表现的很明显，时间的利用率也不高。反思了这段时间的工作，我首先要解决的是我的执行力问题，即解决拖延症，要在有效的时间里完成规定的计划和任务。</p>"},{"title":"tensorflow 在 iOS 平台上的应用","date":"2017-01-16T05:08:35.000Z","_content":"\nGoogle 开源的深度学习框架 tensorflow 成为2016年最受欢迎的深度学习框架之一。tensorflow 除了支持 pc 端外，还较好的支持了 android，iOS 移动端平台。移动端作为现在互联网的终端主宰，tensorflow 毫无疑问地会引起移动互联网行业的广泛关注。深度学习在2016年的火爆，以及移动终端的主宰地位，作为程序员的我们，不玩玩 tensorflow  简直就 out 了。\n\n### 1. fork Github 上的 tensorflow repo\ntensorflow 的仓库 repo 位于 Github 上，我们作为开发者要在其基础上做开发，首先就需要 fork 一份 repo 到自己的 Github 账户下。\n\n### 2. 参考 tensorflow 的官方使用文档编译（使用 tensorflow r1.0 版本）\n参考[tensorflow 的官方使用文档](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/makefile/README.md)编译 iOS 平台上的 tensorflow 库。\n\n<!-- more -->\n\n**_Note: To use this library in an iOS application, see related instructions in\nthe [iOS examples](../ios_examples/) directory._**\n\nInstall XCode 7.3 or more recent. If you have not already, you will need to\ninstall the command-line tools using `xcode-select`:\n\n```bash\nxcode-select --install\n```\n\nIf this is a new install, you will need to run XCode once to agree to the\nlicense before continuing.\n\nThen install [automake](https://en.wikipedia.org/wiki/Automake)/[libtool](https://en.wikipedia.org/wiki/GNU_Libtool):\n\n```bash\nbrew install automake\nbrew install libtool\n```\n\nAlso, download the graph if you haven't already:\n\n```bash\nmkdir -p ~/graphs\ncurl -o ~/graphs/inception.zip \\\n https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip \\\n && unzip ~/graphs/inception.zip -d ~/graphs/inception\n```\n\n**_Note: Building all at once._**\n\nIf you just want to get the libraries compiled in a hurry, you can run this\nfrom the root of your TensorFlow source folder:\n\n```bash\ntensorflow/contrib/makefile/build_all_ios.sh\n```\n\nThis process will take around twenty minutes on a modern MacBook Pro.\n\nWhen it completes, you will have a library for a single architecture and the\nbenchmark program. Although successfully compiling the benchmark program is a\nsign of success, the program is not a complete iOS app.\n\nTo see TensorFlow running on iOS, the example Xcode project in\n[tensorflow/contrib/ios_examples](../ios_examples) shows how to use the static\nlibrary in a simple app.\n\n我使用的 Xcode 版本如下\n\n![Xcode 版本](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116142514333-1602060782.png)\n\n我的 Mac Pro 设备参数如下，执行脚本 tensorflow/contrib/makefile/build_all_ios.sh 编译 iOS 平台的 tensorflow 库`花费了90分钟`。\n\n![Mac Pro 设备参数](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116134659802-716920306.png)\n\n![开始编译时的截图](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116135708880-1402615710.png)\n\n![编译完成时的截图](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116140108661-2089552430.png)\n\nlibtensorflow-core.a 所在的路径和支持的 CPU 架构 armv7，armv7s，i386，x86_64，arm64 如下：\n\n![](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116181935786-829505024.png)\n\n![](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116181959052-862893730.png)\n\n### 3. 打开 tensorflow/contrib/ios_examples 下的 Xcode 工程\n#### 3.1 tf_ios_makefile_example.xcodeproj\n进入 /tensorflow/tensorflow/contrib/ios_examples/simple 文件夹打开工程 tf_ios_makefile_example.xcodeproj 运行 run\n\n![tf_ios_makefile_example.xcodeproj 运行出现的错误](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116143445255-1618884987.png)\n\n参考[TensorFlow iOS Examples 文档](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/ios_examples/README.md) 加载 iOS demo 工程所需要的数据模型，需要操作的命令如下\n\n```bash\nmkdir -p ~/graphs\ncurl -o ~/graphs/inception5h.zip \\\n https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip \\\n && unzip ~/graphs/inception5h.zip -d ~/graphs/inception5h\ncp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/benchmark/data/\ncp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/camera/data/\ncp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/simple/data/\n```\n\n具体操作：先进入 tensorflow 的根目录，然后依次执行上面的命令。\n\n![运行 ios examples 要执行的命令](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116150401130-1501991403.png)\n\n此时，在 Xcode 中 clean（快捷键是 command + shift + k） 下 tf_ios_makefile_example.xcodeproj 工程。运行 run（快捷键是 command + r），success 后 iOS 设备出现的界面和点击按钮 Run Model 后的界面如下图所示：\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116150927114-514982468.png\" width=\"250\" height=\"445\" />\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116152640786-773711415.png\" width=\"250\" height=\"445\" />\n\n#### 3.2 camera_example.xcodeproj 可以识别出物体\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161341255-1424145846.png\" width=\"250\" height=\"445\" />\n\n#### 3.3 benchmark.xcodeproj\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161942833-341355774.png\" width=\"250\" height=\"445\" />\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161955317-1079763651.png\" width=\"250\" height=\"445\" />\n\n","source":"_posts/tensorflow-iOS-application.md","raw":"---\ntitle: tensorflow 在 iOS 平台上的应用\ndate: 2017-01-16 13:08:35\ntags:\n- iOS中高级开发\n- 深度学习DL\n---\n\nGoogle 开源的深度学习框架 tensorflow 成为2016年最受欢迎的深度学习框架之一。tensorflow 除了支持 pc 端外，还较好的支持了 android，iOS 移动端平台。移动端作为现在互联网的终端主宰，tensorflow 毫无疑问地会引起移动互联网行业的广泛关注。深度学习在2016年的火爆，以及移动终端的主宰地位，作为程序员的我们，不玩玩 tensorflow  简直就 out 了。\n\n### 1. fork Github 上的 tensorflow repo\ntensorflow 的仓库 repo 位于 Github 上，我们作为开发者要在其基础上做开发，首先就需要 fork 一份 repo 到自己的 Github 账户下。\n\n### 2. 参考 tensorflow 的官方使用文档编译（使用 tensorflow r1.0 版本）\n参考[tensorflow 的官方使用文档](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/makefile/README.md)编译 iOS 平台上的 tensorflow 库。\n\n<!-- more -->\n\n**_Note: To use this library in an iOS application, see related instructions in\nthe [iOS examples](../ios_examples/) directory._**\n\nInstall XCode 7.3 or more recent. If you have not already, you will need to\ninstall the command-line tools using `xcode-select`:\n\n```bash\nxcode-select --install\n```\n\nIf this is a new install, you will need to run XCode once to agree to the\nlicense before continuing.\n\nThen install [automake](https://en.wikipedia.org/wiki/Automake)/[libtool](https://en.wikipedia.org/wiki/GNU_Libtool):\n\n```bash\nbrew install automake\nbrew install libtool\n```\n\nAlso, download the graph if you haven't already:\n\n```bash\nmkdir -p ~/graphs\ncurl -o ~/graphs/inception.zip \\\n https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip \\\n && unzip ~/graphs/inception.zip -d ~/graphs/inception\n```\n\n**_Note: Building all at once._**\n\nIf you just want to get the libraries compiled in a hurry, you can run this\nfrom the root of your TensorFlow source folder:\n\n```bash\ntensorflow/contrib/makefile/build_all_ios.sh\n```\n\nThis process will take around twenty minutes on a modern MacBook Pro.\n\nWhen it completes, you will have a library for a single architecture and the\nbenchmark program. Although successfully compiling the benchmark program is a\nsign of success, the program is not a complete iOS app.\n\nTo see TensorFlow running on iOS, the example Xcode project in\n[tensorflow/contrib/ios_examples](../ios_examples) shows how to use the static\nlibrary in a simple app.\n\n我使用的 Xcode 版本如下\n\n![Xcode 版本](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116142514333-1602060782.png)\n\n我的 Mac Pro 设备参数如下，执行脚本 tensorflow/contrib/makefile/build_all_ios.sh 编译 iOS 平台的 tensorflow 库`花费了90分钟`。\n\n![Mac Pro 设备参数](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116134659802-716920306.png)\n\n![开始编译时的截图](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116135708880-1402615710.png)\n\n![编译完成时的截图](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116140108661-2089552430.png)\n\nlibtensorflow-core.a 所在的路径和支持的 CPU 架构 armv7，armv7s，i386，x86_64，arm64 如下：\n\n![](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116181935786-829505024.png)\n\n![](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116181959052-862893730.png)\n\n### 3. 打开 tensorflow/contrib/ios_examples 下的 Xcode 工程\n#### 3.1 tf_ios_makefile_example.xcodeproj\n进入 /tensorflow/tensorflow/contrib/ios_examples/simple 文件夹打开工程 tf_ios_makefile_example.xcodeproj 运行 run\n\n![tf_ios_makefile_example.xcodeproj 运行出现的错误](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116143445255-1618884987.png)\n\n参考[TensorFlow iOS Examples 文档](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/ios_examples/README.md) 加载 iOS demo 工程所需要的数据模型，需要操作的命令如下\n\n```bash\nmkdir -p ~/graphs\ncurl -o ~/graphs/inception5h.zip \\\n https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip \\\n && unzip ~/graphs/inception5h.zip -d ~/graphs/inception5h\ncp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/benchmark/data/\ncp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/camera/data/\ncp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/simple/data/\n```\n\n具体操作：先进入 tensorflow 的根目录，然后依次执行上面的命令。\n\n![运行 ios examples 要执行的命令](http://images2015.cnblogs.com/blog/719115/201701/719115-20170116150401130-1501991403.png)\n\n此时，在 Xcode 中 clean（快捷键是 command + shift + k） 下 tf_ios_makefile_example.xcodeproj 工程。运行 run（快捷键是 command + r），success 后 iOS 设备出现的界面和点击按钮 Run Model 后的界面如下图所示：\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116150927114-514982468.png\" width=\"250\" height=\"445\" />\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116152640786-773711415.png\" width=\"250\" height=\"445\" />\n\n#### 3.2 camera_example.xcodeproj 可以识别出物体\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161341255-1424145846.png\" width=\"250\" height=\"445\" />\n\n#### 3.3 benchmark.xcodeproj\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161942833-341355774.png\" width=\"250\" height=\"445\" />\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161955317-1079763651.png\" width=\"250\" height=\"445\" />\n\n","slug":"tensorflow-iOS-application","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzu40030qxepe5ctqff4","content":"<p>Google 开源的深度学习框架 tensorflow 成为2016年最受欢迎的深度学习框架之一。tensorflow 除了支持 pc 端外，还较好的支持了 android，iOS 移动端平台。移动端作为现在互联网的终端主宰，tensorflow 毫无疑问地会引起移动互联网行业的广泛关注。深度学习在2016年的火爆，以及移动终端的主宰地位，作为程序员的我们，不玩玩 tensorflow  简直就 out 了。</p>\n<h3 id=\"1-fork-Github-上的-tensorflow-repo\"><a href=\"#1-fork-Github-上的-tensorflow-repo\" class=\"headerlink\" title=\"1. fork Github 上的 tensorflow repo\"></a>1. fork Github 上的 tensorflow repo</h3><p>tensorflow 的仓库 repo 位于 Github 上，我们作为开发者要在其基础上做开发，首先就需要 fork 一份 repo 到自己的 Github 账户下。</p>\n<h3 id=\"2-参考-tensorflow-的官方使用文档编译（使用-tensorflow-r1-0-版本）\"><a href=\"#2-参考-tensorflow-的官方使用文档编译（使用-tensorflow-r1-0-版本）\" class=\"headerlink\" title=\"2. 参考 tensorflow 的官方使用文档编译（使用 tensorflow r1.0 版本）\"></a>2. 参考 tensorflow 的官方使用文档编译（使用 tensorflow r1.0 版本）</h3><p>参考<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/makefile/README.md\" target=\"_blank\" rel=\"external\">tensorflow 的官方使用文档</a>编译 iOS 平台上的 tensorflow 库。</p>\n<a id=\"more\"></a>\n<p><strong>_Note: To use this library in an iOS application, see related instructions in<br>the <a href=\"../ios_examples/\">iOS examples</a> directory._</strong></p>\n<p>Install XCode 7.3 or more recent. If you have not already, you will need to<br>install the command-line tools using <code>xcode-select</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xcode-select --install</div></pre></td></tr></table></figure>\n<p>If this is a new install, you will need to run XCode once to agree to the<br>license before continuing.</p>\n<p>Then install <a href=\"https://en.wikipedia.org/wiki/Automake\" target=\"_blank\" rel=\"external\">automake</a>/<a href=\"https://en.wikipedia.org/wiki/GNU_Libtool\" target=\"_blank\" rel=\"external\">libtool</a>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install automake</div><div class=\"line\">brew install libtool</div></pre></td></tr></table></figure>\n<p>Also, download the graph if you haven’t already:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir -p ~/graphs</div><div class=\"line\">curl -o ~/graphs/inception.zip \\</div><div class=\"line\"> https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip \\</div><div class=\"line\"> &amp;&amp; unzip ~/graphs/inception.zip <span class=\"_\">-d</span> ~/graphs/inception</div></pre></td></tr></table></figure>\n<p><strong><em>Note: Building all at once.</em></strong></p>\n<p>If you just want to get the libraries compiled in a hurry, you can run this<br>from the root of your TensorFlow source folder:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tensorflow/contrib/makefile/build_all_ios.sh</div></pre></td></tr></table></figure>\n<p>This process will take around twenty minutes on a modern MacBook Pro.</p>\n<p>When it completes, you will have a library for a single architecture and the<br>benchmark program. Although successfully compiling the benchmark program is a<br>sign of success, the program is not a complete iOS app.</p>\n<p>To see TensorFlow running on iOS, the example Xcode project in<br><a href=\"../ios_examples\">tensorflow/contrib/ios_examples</a> shows how to use the static<br>library in a simple app.</p>\n<p>我使用的 Xcode 版本如下</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116142514333-1602060782.png\" alt=\"Xcode 版本\"></p>\n<p>我的 Mac Pro 设备参数如下，执行脚本 tensorflow/contrib/makefile/build_all_ios.sh 编译 iOS 平台的 tensorflow 库<code>花费了90分钟</code>。</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116134659802-716920306.png\" alt=\"Mac Pro 设备参数\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116135708880-1402615710.png\" alt=\"开始编译时的截图\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116140108661-2089552430.png\" alt=\"编译完成时的截图\"></p>\n<p>libtensorflow-core.a 所在的路径和支持的 CPU 架构 armv7，armv7s，i386，x86_64，arm64 如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116181935786-829505024.png\" alt=\"\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116181959052-862893730.png\" alt=\"\"></p>\n<h3 id=\"3-打开-tensorflow-contrib-ios-examples-下的-Xcode-工程\"><a href=\"#3-打开-tensorflow-contrib-ios-examples-下的-Xcode-工程\" class=\"headerlink\" title=\"3. 打开 tensorflow/contrib/ios_examples 下的 Xcode 工程\"></a>3. 打开 tensorflow/contrib/ios_examples 下的 Xcode 工程</h3><h4 id=\"3-1-tf-ios-makefile-example-xcodeproj\"><a href=\"#3-1-tf-ios-makefile-example-xcodeproj\" class=\"headerlink\" title=\"3.1 tf_ios_makefile_example.xcodeproj\"></a>3.1 tf_ios_makefile_example.xcodeproj</h4><p>进入 /tensorflow/tensorflow/contrib/ios_examples/simple 文件夹打开工程 tf_ios_makefile_example.xcodeproj 运行 run</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116143445255-1618884987.png\" alt=\"tf_ios_makefile_example.xcodeproj 运行出现的错误\"></p>\n<p>参考<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/ios_examples/README.md\" target=\"_blank\" rel=\"external\">TensorFlow iOS Examples 文档</a> 加载 iOS demo 工程所需要的数据模型，需要操作的命令如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir -p ~/graphs</div><div class=\"line\">curl -o ~/graphs/inception5h.zip \\</div><div class=\"line\"> https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip \\</div><div class=\"line\"> &amp;&amp; unzip ~/graphs/inception5h.zip <span class=\"_\">-d</span> ~/graphs/inception5h</div><div class=\"line\">cp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/benchmark/data/</div><div class=\"line\">cp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/camera/data/</div><div class=\"line\">cp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/simple/data/</div></pre></td></tr></table></figure>\n<p>具体操作：先进入 tensorflow 的根目录，然后依次执行上面的命令。</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116150401130-1501991403.png\" alt=\"运行 ios examples 要执行的命令\"></p>\n<p>此时，在 Xcode 中 clean（快捷键是 command + shift + k） 下 tf_ios_makefile_example.xcodeproj 工程。运行 run（快捷键是 command + r），success 后 iOS 设备出现的界面和点击按钮 Run Model 后的界面如下图所示：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116150927114-514982468.png\" width=\"250\" height=\"445\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116152640786-773711415.png\" width=\"250\" height=\"445\"></p>\n<h4 id=\"3-2-camera-example-xcodeproj-可以识别出物体\"><a href=\"#3-2-camera-example-xcodeproj-可以识别出物体\" class=\"headerlink\" title=\"3.2 camera_example.xcodeproj 可以识别出物体\"></a>3.2 camera_example.xcodeproj 可以识别出物体</h4><p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161341255-1424145846.png\" width=\"250\" height=\"445\"></p>\n<h4 id=\"3-3-benchmark-xcodeproj\"><a href=\"#3-3-benchmark-xcodeproj\" class=\"headerlink\" title=\"3.3 benchmark.xcodeproj\"></a>3.3 benchmark.xcodeproj</h4><p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161942833-341355774.png\" width=\"250\" height=\"445\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161955317-1079763651.png\" width=\"250\" height=\"445\"></p>\n","site":{"data":{}},"excerpt":"<p>Google 开源的深度学习框架 tensorflow 成为2016年最受欢迎的深度学习框架之一。tensorflow 除了支持 pc 端外，还较好的支持了 android，iOS 移动端平台。移动端作为现在互联网的终端主宰，tensorflow 毫无疑问地会引起移动互联网行业的广泛关注。深度学习在2016年的火爆，以及移动终端的主宰地位，作为程序员的我们，不玩玩 tensorflow  简直就 out 了。</p>\n<h3 id=\"1-fork-Github-上的-tensorflow-repo\"><a href=\"#1-fork-Github-上的-tensorflow-repo\" class=\"headerlink\" title=\"1. fork Github 上的 tensorflow repo\"></a>1. fork Github 上的 tensorflow repo</h3><p>tensorflow 的仓库 repo 位于 Github 上，我们作为开发者要在其基础上做开发，首先就需要 fork 一份 repo 到自己的 Github 账户下。</p>\n<h3 id=\"2-参考-tensorflow-的官方使用文档编译（使用-tensorflow-r1-0-版本）\"><a href=\"#2-参考-tensorflow-的官方使用文档编译（使用-tensorflow-r1-0-版本）\" class=\"headerlink\" title=\"2. 参考 tensorflow 的官方使用文档编译（使用 tensorflow r1.0 版本）\"></a>2. 参考 tensorflow 的官方使用文档编译（使用 tensorflow r1.0 版本）</h3><p>参考<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/makefile/README.md\" target=\"_blank\" rel=\"external\">tensorflow 的官方使用文档</a>编译 iOS 平台上的 tensorflow 库。</p>","more":"<p><strong>_Note: To use this library in an iOS application, see related instructions in<br>the <a href=\"../ios_examples/\">iOS examples</a> directory._</strong></p>\n<p>Install XCode 7.3 or more recent. If you have not already, you will need to<br>install the command-line tools using <code>xcode-select</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xcode-select --install</div></pre></td></tr></table></figure>\n<p>If this is a new install, you will need to run XCode once to agree to the<br>license before continuing.</p>\n<p>Then install <a href=\"https://en.wikipedia.org/wiki/Automake\" target=\"_blank\" rel=\"external\">automake</a>/<a href=\"https://en.wikipedia.org/wiki/GNU_Libtool\" target=\"_blank\" rel=\"external\">libtool</a>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install automake</div><div class=\"line\">brew install libtool</div></pre></td></tr></table></figure>\n<p>Also, download the graph if you haven’t already:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir -p ~/graphs</div><div class=\"line\">curl -o ~/graphs/inception.zip \\</div><div class=\"line\"> https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip \\</div><div class=\"line\"> &amp;&amp; unzip ~/graphs/inception.zip <span class=\"_\">-d</span> ~/graphs/inception</div></pre></td></tr></table></figure>\n<p><strong><em>Note: Building all at once.</em></strong></p>\n<p>If you just want to get the libraries compiled in a hurry, you can run this<br>from the root of your TensorFlow source folder:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tensorflow/contrib/makefile/build_all_ios.sh</div></pre></td></tr></table></figure>\n<p>This process will take around twenty minutes on a modern MacBook Pro.</p>\n<p>When it completes, you will have a library for a single architecture and the<br>benchmark program. Although successfully compiling the benchmark program is a<br>sign of success, the program is not a complete iOS app.</p>\n<p>To see TensorFlow running on iOS, the example Xcode project in<br><a href=\"../ios_examples\">tensorflow/contrib/ios_examples</a> shows how to use the static<br>library in a simple app.</p>\n<p>我使用的 Xcode 版本如下</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116142514333-1602060782.png\" alt=\"Xcode 版本\"></p>\n<p>我的 Mac Pro 设备参数如下，执行脚本 tensorflow/contrib/makefile/build_all_ios.sh 编译 iOS 平台的 tensorflow 库<code>花费了90分钟</code>。</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116134659802-716920306.png\" alt=\"Mac Pro 设备参数\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116135708880-1402615710.png\" alt=\"开始编译时的截图\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116140108661-2089552430.png\" alt=\"编译完成时的截图\"></p>\n<p>libtensorflow-core.a 所在的路径和支持的 CPU 架构 armv7，armv7s，i386，x86_64，arm64 如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116181935786-829505024.png\" alt=\"\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116181959052-862893730.png\" alt=\"\"></p>\n<h3 id=\"3-打开-tensorflow-contrib-ios-examples-下的-Xcode-工程\"><a href=\"#3-打开-tensorflow-contrib-ios-examples-下的-Xcode-工程\" class=\"headerlink\" title=\"3. 打开 tensorflow/contrib/ios_examples 下的 Xcode 工程\"></a>3. 打开 tensorflow/contrib/ios_examples 下的 Xcode 工程</h3><h4 id=\"3-1-tf-ios-makefile-example-xcodeproj\"><a href=\"#3-1-tf-ios-makefile-example-xcodeproj\" class=\"headerlink\" title=\"3.1 tf_ios_makefile_example.xcodeproj\"></a>3.1 tf_ios_makefile_example.xcodeproj</h4><p>进入 /tensorflow/tensorflow/contrib/ios_examples/simple 文件夹打开工程 tf_ios_makefile_example.xcodeproj 运行 run</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116143445255-1618884987.png\" alt=\"tf_ios_makefile_example.xcodeproj 运行出现的错误\"></p>\n<p>参考<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/ios_examples/README.md\" target=\"_blank\" rel=\"external\">TensorFlow iOS Examples 文档</a> 加载 iOS demo 工程所需要的数据模型，需要操作的命令如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir -p ~/graphs</div><div class=\"line\">curl -o ~/graphs/inception5h.zip \\</div><div class=\"line\"> https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip \\</div><div class=\"line\"> &amp;&amp; unzip ~/graphs/inception5h.zip <span class=\"_\">-d</span> ~/graphs/inception5h</div><div class=\"line\">cp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/benchmark/data/</div><div class=\"line\">cp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/camera/data/</div><div class=\"line\">cp ~/graphs/inception5h/* tensorflow/contrib/ios_examples/simple/data/</div></pre></td></tr></table></figure>\n<p>具体操作：先进入 tensorflow 的根目录，然后依次执行上面的命令。</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116150401130-1501991403.png\" alt=\"运行 ios examples 要执行的命令\"></p>\n<p>此时，在 Xcode 中 clean（快捷键是 command + shift + k） 下 tf_ios_makefile_example.xcodeproj 工程。运行 run（快捷键是 command + r），success 后 iOS 设备出现的界面和点击按钮 Run Model 后的界面如下图所示：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116150927114-514982468.png\" width=\"250\" height=\"445\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116152640786-773711415.png\" width=\"250\" height=\"445\"></p>\n<h4 id=\"3-2-camera-example-xcodeproj-可以识别出物体\"><a href=\"#3-2-camera-example-xcodeproj-可以识别出物体\" class=\"headerlink\" title=\"3.2 camera_example.xcodeproj 可以识别出物体\"></a>3.2 camera_example.xcodeproj 可以识别出物体</h4><p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161341255-1424145846.png\" width=\"250\" height=\"445\"></p>\n<h4 id=\"3-3-benchmark-xcodeproj\"><a href=\"#3-3-benchmark-xcodeproj\" class=\"headerlink\" title=\"3.3 benchmark.xcodeproj\"></a>3.3 benchmark.xcodeproj</h4><p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161942833-341355774.png\" width=\"250\" height=\"445\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170116161955317-1079763651.png\" width=\"250\" height=\"445\"></p>"},{"title":"使用 tensorflow 学习梵高画作","date":"2017-01-19T11:32:28.000Z","_content":"\n配一台个人使用的深度学习机器大概会花费2万人民币，比如其中的核心部件英伟达 Titan X GPU 售价大概9000人民币左右，这个价格对于一般人还是略贵的。想深层次进入深度学习应用领域，花点钱是必须的。正所谓有投入才有产出。本人现在还没有入手深度学习机器的预算，所以使用 Mac Pro 利用 CPU 计算来玩玩简单点的深度学习项目。\n\n我的 Mac Pro 配置为：\n\n```\nOS X EI Capitan\n版本 10.11.6 (15G1212)\nMacBook Pro（13 英寸，2015 年初期）\n处理器 2.7 GHz Intel Core i5\n内存 8 GB 1867 MHz DDR3\n启动磁盘 Macintosh HD\n图形卡 Intel Iris Graphics 6100 1536 MB\n```\n\n<!-- more -->\n\n### 1. 在 Mac 上安装 Anaconda 软件\n\n![Anaconda 软件界面](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119195435984-525274691.png)\n\n### 2. 建立 tensorflow 的 conda 计算环境\n\n这里提一下有关 python 版本的问题，现在最稳定最常用的 python 版本是 2.7 和 3.5。入门 python 的话，建议从 2.7 版本入手，然后再过渡到 python 3.x 版本。我这里选用 tensorflow 依赖的 python 版本为 2.7。\n\n在 Mac 终端执行命令：\n\n```\nconda create -n tensorflow python=2.7\n```\n![conda 创建 tensorflow 空间](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119210947859-1111890790.png)\n\n执行完命令后，可以看到\n\n\t#\n\t# To activate this environment, use:\n\t# > source activate tensorflow\n\t#\n\t# To deactivate this environment, use:\n\t# > source deactivate tensorflow\n\t#\n\t\n在 Mac 终端执行命令 `source activate tensorflow` 可以激活名为 tensorflow 的 conda 计算环境，执行命令 `source deactivate tensorflow` 能关闭 conda 计算环境。\n\n### 3. 运行名为 tensorflow 的 conda 计算环境\n\n在 Mac 终端执行命令激活 conda 计算环境\n\n```\nsource activate tensorflow\n```\n\n![激活 conda 计算环境](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119215425593-252567153.png)\n\n命令执行完之后，终端最左边会出现 (tensorflow) ，说明名为 tensorflow 的 conda 计算环境被激活了。\n\n### 4. 使用 pip 安装 tensorflow 深度学习框架\n\n仍然是在 Mac 终端执行命令：\n\n```\npip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/mac/tensorflow-0.8.0rc0-py2-none-any.whl\n```\n\n![pip 安装 tensorflow](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119220557046-2012970460.png)\n\n安装过程中，出现以下错误提示，说明网络不好，或者需要使用 vpn 翻墙。多试几次就能安装成功了。\n![安装超时，出错](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119220749421-424094784.png)\n\n### 5. 验证 tensorflow 深度学习框架安装成功\n\n在 Mac 终端执行命令，进入 python 环境\n\n```\npython\n```\n\n执行一个简单的 tensorflow 小程序来验证深度学习框架是否安装成功，小程序如下：\n\n\timport tensorflow as tf\n\thello = tf.constant('Hello, TensorFlow!')\n\tsess = tf.Session()\n\tprint sess.run(hello)\n\n\ta = tf.constant(10)\n\tb = tf.constant(32)\n\tprint sess.run(a+b)\n\n![执行 python 命令，运行 tensorflow 小程序](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119232634984-1600377688.png)\n\n上面的小程序能正常运行，说明 tensorflow 深度学习框架安装成功了。此时，可以在软件 Anaconda 中查看名称为 tensorflow 的 conda 计算环境，如下图所示：\n\n![Anaconda 中查看名称为 tensorflow 的 conda 计算环境](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119233341234-1329704415.png)\n\n### 6. 加载 neural-style 神经网络训练代码\n\n项目 neural-style 位于 github 上，地址为 [https://github.com/anishathalye/neural-style](https://github.com/anishathalye/neural-style)\n\n创建或者选择一个文件夹来存放 neural-style 代码，使用 git clone 方式 download 代码，命令如下：\n\n```\ngit clone https://github.com/anishathalye/neural-style.git\n```\n\n![下载 neural-style 代码](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235126296-418324233.png)\n\n项目 neural-style 会依赖 pillow，因此还需要安装 pillow，在终端执行命令：\n\n```\npip install pillow\n```\n\n![安装 pillow](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235240281-926099681.png)\n\n### 7. 加载数据模型 \n\n在终端执行命令：\n\n```\nwget http://www.vlfeat.org/matconvnet/models/beta16/imagenet-vgg-verydeep-19.mat\n```\n\n ![](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235505140-1370501613.png)\n \n ![](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235528781-103216887.png)\n\n\n使用 wget 下载数据模型太慢了，简直不能忍，imagenet-vgg-verydeep-19.mat 文件还挺大，有576M。时间就是生命，生命不该浪费在下载上，果断使用 `ctrl + c` 中断了 wget 下载，如果你能忍受 wget ，那你就用 wget 吧，反正也能下载，就是慢点。为了节约点时间，神奇的淘宝就要闪亮登场了，我在淘宝上先花了1毛钱买了一天的迅雷会员，可是并没有像商家说的秒发账号密码。为了节约时间，果断地又花了1块钱买了一个月的迅雷会员，嗯，这家发货挺快的，接下来就是用迅雷加速下载链接 [http://www.vlfeat.org/matconvnet/models/beta16/imagenet-vgg-verydeep-19.mat](http://www.vlfeat.org/matconvnet/models/beta16/imagenet-vgg-verydeep-19.mat)\n\nimagenet-vgg-verydeep-19.mat 下载完成后，将其移动到 neural-style 根目录下，如下图所示：\n\n![数据模型存放路径](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120001629546-441644004.png)\n\n### 8. 开启深度学习之梵高的大门\n\n进入 neural-style 目录，将需要处理的图片 nuc.jpg 放入目录 examples 中。nuc_output.jpg 为处理之后输出的文件名称。如果要处理图片 xyz.jpg 就将其放入 目录 examples 中，至于输出文件的名称可以随便设置，比如可以设置为 xyz_output.jpg。\n\n在终端执行命令 A\n\n```\npython neural_style.py --content ./examples/nuc.jpg --styles ./examples/1-style.jpg --output ./examples/nuc_output.jpg --iterations 1500\n```\n\n其中，1-style.jpg 为梵高大师画作，也就是需要学习的对象，这里也可以改为梵高的 2-style1.jpg 或 2-style2.jpg 来作为学习的对象。--iterations 1500 表示迭代次数，如果用笔记本或者普通的台式机就减少迭代次数，因为机器运算太慢了，1500 次迭代不知道要何年何月才能执行完。`但是迭代次数在 1000 至 2000 之间处理的效果会比较理想`。\n\n在我的 Mac Pro 上设置的迭代次数为 100 次，得到处理后的图片效果还可以。需要提一下，在我的 Mac pro （配置前面已经给出） 上迭代1次大概会花费3分钟，迭代 100 次需要花费 5小时，毕竟是基于 CPU 计算，运算慢。要是有台 GPU 机器该有多爽，哈哈，想想而已，嘻嘻。\n\n![开始迭代](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004050156-1048917434.png)\n\n哦呵，出现了 error 提示，原因在于没有安装 scipy。在终端执行命令安装 scipy\n\n```\npip install scipy\n```\n\n![安装 scipy](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004101859-1719031783.png)\n\n将迭代次数改为 100次，再次执行命令 A\n\n![迭代 100次](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004131406-901903984.png)\n\n![迭代 100次 续](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004140046-1598886231.png)\n\nOK，到此，所有步骤结束，我们可以看看经过深度学习处理之后的图片效果了。\n\n### 9. 查看处理后的图片效果\n\n进入 neural-style/examples 目录，查看目标图片 nuc_output.jpg \n\n![](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004950328-576212904.png)\n\n梵高大师画作 1-style.jpg 如下：\n\n![梵高画](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005037984-1130888407.jpg)\n\n选取了一张我就读过的大学的图书馆照片 nuc.jpg 作为需要处理的图片，如下：\n\n![原图，我的大学校园图书馆](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005049062-618427893.jpg)\n\n迭代 100次，学习梵高大师画风后得到的处理后的目标图片 nuc_output.jpg，如下：\n![梵高画风的大学图书馆](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005104421-824057092.jpg)\n\n\n##### 参考文献：\n\n[http://wiki.jikexueyuan.com/project/tensorflow-zh/get_started/os_setup.html](http://wiki.jikexueyuan.com/project/tensorflow-zh/get_started/os_setup.html)\n\n[https://github.com/anishathalye/neural-style](https://github.com/anishathalye/neural-style)\n\n迭代 1次，2次，10次，20次，30次，40次，100次输出的图片合成的 GIF 图，如下\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120013703062-275928298.gif\" width=\"240\" height=\"240\" />\n\n","source":"_posts/tensorflow-neural-style.md","raw":"---\ntitle: 使用 tensorflow 学习梵高画作\ndate: 2017-01-19 19:32:28\ntags:\n- 深度学习DL\n---\n\n配一台个人使用的深度学习机器大概会花费2万人民币，比如其中的核心部件英伟达 Titan X GPU 售价大概9000人民币左右，这个价格对于一般人还是略贵的。想深层次进入深度学习应用领域，花点钱是必须的。正所谓有投入才有产出。本人现在还没有入手深度学习机器的预算，所以使用 Mac Pro 利用 CPU 计算来玩玩简单点的深度学习项目。\n\n我的 Mac Pro 配置为：\n\n```\nOS X EI Capitan\n版本 10.11.6 (15G1212)\nMacBook Pro（13 英寸，2015 年初期）\n处理器 2.7 GHz Intel Core i5\n内存 8 GB 1867 MHz DDR3\n启动磁盘 Macintosh HD\n图形卡 Intel Iris Graphics 6100 1536 MB\n```\n\n<!-- more -->\n\n### 1. 在 Mac 上安装 Anaconda 软件\n\n![Anaconda 软件界面](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119195435984-525274691.png)\n\n### 2. 建立 tensorflow 的 conda 计算环境\n\n这里提一下有关 python 版本的问题，现在最稳定最常用的 python 版本是 2.7 和 3.5。入门 python 的话，建议从 2.7 版本入手，然后再过渡到 python 3.x 版本。我这里选用 tensorflow 依赖的 python 版本为 2.7。\n\n在 Mac 终端执行命令：\n\n```\nconda create -n tensorflow python=2.7\n```\n![conda 创建 tensorflow 空间](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119210947859-1111890790.png)\n\n执行完命令后，可以看到\n\n\t#\n\t# To activate this environment, use:\n\t# > source activate tensorflow\n\t#\n\t# To deactivate this environment, use:\n\t# > source deactivate tensorflow\n\t#\n\t\n在 Mac 终端执行命令 `source activate tensorflow` 可以激活名为 tensorflow 的 conda 计算环境，执行命令 `source deactivate tensorflow` 能关闭 conda 计算环境。\n\n### 3. 运行名为 tensorflow 的 conda 计算环境\n\n在 Mac 终端执行命令激活 conda 计算环境\n\n```\nsource activate tensorflow\n```\n\n![激活 conda 计算环境](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119215425593-252567153.png)\n\n命令执行完之后，终端最左边会出现 (tensorflow) ，说明名为 tensorflow 的 conda 计算环境被激活了。\n\n### 4. 使用 pip 安装 tensorflow 深度学习框架\n\n仍然是在 Mac 终端执行命令：\n\n```\npip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/mac/tensorflow-0.8.0rc0-py2-none-any.whl\n```\n\n![pip 安装 tensorflow](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119220557046-2012970460.png)\n\n安装过程中，出现以下错误提示，说明网络不好，或者需要使用 vpn 翻墙。多试几次就能安装成功了。\n![安装超时，出错](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119220749421-424094784.png)\n\n### 5. 验证 tensorflow 深度学习框架安装成功\n\n在 Mac 终端执行命令，进入 python 环境\n\n```\npython\n```\n\n执行一个简单的 tensorflow 小程序来验证深度学习框架是否安装成功，小程序如下：\n\n\timport tensorflow as tf\n\thello = tf.constant('Hello, TensorFlow!')\n\tsess = tf.Session()\n\tprint sess.run(hello)\n\n\ta = tf.constant(10)\n\tb = tf.constant(32)\n\tprint sess.run(a+b)\n\n![执行 python 命令，运行 tensorflow 小程序](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119232634984-1600377688.png)\n\n上面的小程序能正常运行，说明 tensorflow 深度学习框架安装成功了。此时，可以在软件 Anaconda 中查看名称为 tensorflow 的 conda 计算环境，如下图所示：\n\n![Anaconda 中查看名称为 tensorflow 的 conda 计算环境](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119233341234-1329704415.png)\n\n### 6. 加载 neural-style 神经网络训练代码\n\n项目 neural-style 位于 github 上，地址为 [https://github.com/anishathalye/neural-style](https://github.com/anishathalye/neural-style)\n\n创建或者选择一个文件夹来存放 neural-style 代码，使用 git clone 方式 download 代码，命令如下：\n\n```\ngit clone https://github.com/anishathalye/neural-style.git\n```\n\n![下载 neural-style 代码](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235126296-418324233.png)\n\n项目 neural-style 会依赖 pillow，因此还需要安装 pillow，在终端执行命令：\n\n```\npip install pillow\n```\n\n![安装 pillow](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235240281-926099681.png)\n\n### 7. 加载数据模型 \n\n在终端执行命令：\n\n```\nwget http://www.vlfeat.org/matconvnet/models/beta16/imagenet-vgg-verydeep-19.mat\n```\n\n ![](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235505140-1370501613.png)\n \n ![](http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235528781-103216887.png)\n\n\n使用 wget 下载数据模型太慢了，简直不能忍，imagenet-vgg-verydeep-19.mat 文件还挺大，有576M。时间就是生命，生命不该浪费在下载上，果断使用 `ctrl + c` 中断了 wget 下载，如果你能忍受 wget ，那你就用 wget 吧，反正也能下载，就是慢点。为了节约点时间，神奇的淘宝就要闪亮登场了，我在淘宝上先花了1毛钱买了一天的迅雷会员，可是并没有像商家说的秒发账号密码。为了节约时间，果断地又花了1块钱买了一个月的迅雷会员，嗯，这家发货挺快的，接下来就是用迅雷加速下载链接 [http://www.vlfeat.org/matconvnet/models/beta16/imagenet-vgg-verydeep-19.mat](http://www.vlfeat.org/matconvnet/models/beta16/imagenet-vgg-verydeep-19.mat)\n\nimagenet-vgg-verydeep-19.mat 下载完成后，将其移动到 neural-style 根目录下，如下图所示：\n\n![数据模型存放路径](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120001629546-441644004.png)\n\n### 8. 开启深度学习之梵高的大门\n\n进入 neural-style 目录，将需要处理的图片 nuc.jpg 放入目录 examples 中。nuc_output.jpg 为处理之后输出的文件名称。如果要处理图片 xyz.jpg 就将其放入 目录 examples 中，至于输出文件的名称可以随便设置，比如可以设置为 xyz_output.jpg。\n\n在终端执行命令 A\n\n```\npython neural_style.py --content ./examples/nuc.jpg --styles ./examples/1-style.jpg --output ./examples/nuc_output.jpg --iterations 1500\n```\n\n其中，1-style.jpg 为梵高大师画作，也就是需要学习的对象，这里也可以改为梵高的 2-style1.jpg 或 2-style2.jpg 来作为学习的对象。--iterations 1500 表示迭代次数，如果用笔记本或者普通的台式机就减少迭代次数，因为机器运算太慢了，1500 次迭代不知道要何年何月才能执行完。`但是迭代次数在 1000 至 2000 之间处理的效果会比较理想`。\n\n在我的 Mac Pro 上设置的迭代次数为 100 次，得到处理后的图片效果还可以。需要提一下，在我的 Mac pro （配置前面已经给出） 上迭代1次大概会花费3分钟，迭代 100 次需要花费 5小时，毕竟是基于 CPU 计算，运算慢。要是有台 GPU 机器该有多爽，哈哈，想想而已，嘻嘻。\n\n![开始迭代](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004050156-1048917434.png)\n\n哦呵，出现了 error 提示，原因在于没有安装 scipy。在终端执行命令安装 scipy\n\n```\npip install scipy\n```\n\n![安装 scipy](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004101859-1719031783.png)\n\n将迭代次数改为 100次，再次执行命令 A\n\n![迭代 100次](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004131406-901903984.png)\n\n![迭代 100次 续](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004140046-1598886231.png)\n\nOK，到此，所有步骤结束，我们可以看看经过深度学习处理之后的图片效果了。\n\n### 9. 查看处理后的图片效果\n\n进入 neural-style/examples 目录，查看目标图片 nuc_output.jpg \n\n![](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004950328-576212904.png)\n\n梵高大师画作 1-style.jpg 如下：\n\n![梵高画](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005037984-1130888407.jpg)\n\n选取了一张我就读过的大学的图书馆照片 nuc.jpg 作为需要处理的图片，如下：\n\n![原图，我的大学校园图书馆](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005049062-618427893.jpg)\n\n迭代 100次，学习梵高大师画风后得到的处理后的目标图片 nuc_output.jpg，如下：\n![梵高画风的大学图书馆](http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005104421-824057092.jpg)\n\n\n##### 参考文献：\n\n[http://wiki.jikexueyuan.com/project/tensorflow-zh/get_started/os_setup.html](http://wiki.jikexueyuan.com/project/tensorflow-zh/get_started/os_setup.html)\n\n[https://github.com/anishathalye/neural-style](https://github.com/anishathalye/neural-style)\n\n迭代 1次，2次，10次，20次，30次，40次，100次输出的图片合成的 GIF 图，如下\n\n<img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120013703062-275928298.gif\" width=\"240\" height=\"240\" />\n\n","slug":"tensorflow-neural-style","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzu50032qxepo4g60eye","content":"<p>配一台个人使用的深度学习机器大概会花费2万人民币，比如其中的核心部件英伟达 Titan X GPU 售价大概9000人民币左右，这个价格对于一般人还是略贵的。想深层次进入深度学习应用领域，花点钱是必须的。正所谓有投入才有产出。本人现在还没有入手深度学习机器的预算，所以使用 Mac Pro 利用 CPU 计算来玩玩简单点的深度学习项目。</p>\n<p>我的 Mac Pro 配置为：</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">OS X EI Capitan</div><div class=\"line\">版本 <span class=\"number\">10.11</span><span class=\"number\">.6</span> (<span class=\"number\">15</span>G1212)</div><div class=\"line\">MacBook Pro（<span class=\"number\">13</span> 英寸，<span class=\"number\">2015</span> 年初期）</div><div class=\"line\">处理器 <span class=\"number\">2.7</span> GHz Intel Core i5</div><div class=\"line\">内存 <span class=\"number\">8</span> GB <span class=\"number\">1867</span> MHz DDR3</div><div class=\"line\">启动磁盘 Macintosh HD</div><div class=\"line\">图形卡 Intel Iris Graphics <span class=\"number\">6100</span> <span class=\"number\">1536</span> MB</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"1-在-Mac-上安装-Anaconda-软件\"><a href=\"#1-在-Mac-上安装-Anaconda-软件\" class=\"headerlink\" title=\"1. 在 Mac 上安装 Anaconda 软件\"></a>1. 在 Mac 上安装 Anaconda 软件</h3><p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119195435984-525274691.png\" alt=\"Anaconda 软件界面\"></p>\n<h3 id=\"2-建立-tensorflow-的-conda-计算环境\"><a href=\"#2-建立-tensorflow-的-conda-计算环境\" class=\"headerlink\" title=\"2. 建立 tensorflow 的 conda 计算环境\"></a>2. 建立 tensorflow 的 conda 计算环境</h3><p>这里提一下有关 python 版本的问题，现在最稳定最常用的 python 版本是 2.7 和 3.5。入门 python 的话，建议从 2.7 版本入手，然后再过渡到 python 3.x 版本。我这里选用 tensorflow 依赖的 python 版本为 2.7。</p>\n<p>在 Mac 终端执行命令：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">conda create -n tensorflow python</span>=2.7</div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119210947859-1111890790.png\" alt=\"conda 创建 tensorflow 空间\"></p>\n<p>执行完命令后，可以看到</p>\n<pre><code>#\n# To activate this environment, use:\n# &gt; source activate tensorflow\n#\n# To deactivate this environment, use:\n# &gt; source deactivate tensorflow\n#\n</code></pre><p>在 Mac 终端执行命令 <code>source activate tensorflow</code> 可以激活名为 tensorflow 的 conda 计算环境，执行命令 <code>source deactivate tensorflow</code> 能关闭 conda 计算环境。</p>\n<h3 id=\"3-运行名为-tensorflow-的-conda-计算环境\"><a href=\"#3-运行名为-tensorflow-的-conda-计算环境\" class=\"headerlink\" title=\"3. 运行名为 tensorflow 的 conda 计算环境\"></a>3. 运行名为 tensorflow 的 conda 计算环境</h3><p>在 Mac 终端执行命令激活 conda 计算环境</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source <span class=\"built_in\">activate</span> tensorflow</div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119215425593-252567153.png\" alt=\"激活 conda 计算环境\"></p>\n<p>命令执行完之后，终端最左边会出现 (tensorflow) ，说明名为 tensorflow 的 conda 计算环境被激活了。</p>\n<h3 id=\"4-使用-pip-安装-tensorflow-深度学习框架\"><a href=\"#4-使用-pip-安装-tensorflow-深度学习框架\" class=\"headerlink\" title=\"4. 使用 pip 安装 tensorflow 深度学习框架\"></a>4. 使用 pip 安装 tensorflow 深度学习框架</h3><p>仍然是在 Mac 终端执行命令：</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install <span class=\"params\">--ignore-installed</span> <span class=\"params\">--upgrade</span> https:<span class=\"string\">//storage.googleapis.com/tensorflow/mac/tensorflow-0.8.0rc0-py2-none-any.whl</span></div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119220557046-2012970460.png\" alt=\"pip 安装 tensorflow\"></p>\n<p>安装过程中，出现以下错误提示，说明网络不好，或者需要使用 vpn 翻墙。多试几次就能安装成功了。<br><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119220749421-424094784.png\" alt=\"安装超时，出错\"></p>\n<h3 id=\"5-验证-tensorflow-深度学习框架安装成功\"><a href=\"#5-验证-tensorflow-深度学习框架安装成功\" class=\"headerlink\" title=\"5. 验证 tensorflow 深度学习框架安装成功\"></a>5. 验证 tensorflow 深度学习框架安装成功</h3><p>在 Mac 终端执行命令，进入 python 环境</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">python</span></div></pre></td></tr></table></figure>\n<p>执行一个简单的 tensorflow 小程序来验证深度学习框架是否安装成功，小程序如下：</p>\n<pre><code>import tensorflow as tf\nhello = tf.constant(&apos;Hello, TensorFlow!&apos;)\nsess = tf.Session()\nprint sess.run(hello)\n\na = tf.constant(10)\nb = tf.constant(32)\nprint sess.run(a+b)\n</code></pre><p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119232634984-1600377688.png\" alt=\"执行 python 命令，运行 tensorflow 小程序\"></p>\n<p>上面的小程序能正常运行，说明 tensorflow 深度学习框架安装成功了。此时，可以在软件 Anaconda 中查看名称为 tensorflow 的 conda 计算环境，如下图所示：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119233341234-1329704415.png\" alt=\"Anaconda 中查看名称为 tensorflow 的 conda 计算环境\"></p>\n<h3 id=\"6-加载-neural-style-神经网络训练代码\"><a href=\"#6-加载-neural-style-神经网络训练代码\" class=\"headerlink\" title=\"6. 加载 neural-style 神经网络训练代码\"></a>6. 加载 neural-style 神经网络训练代码</h3><p>项目 neural-style 位于 github 上，地址为 <a href=\"https://github.com/anishathalye/neural-style\" target=\"_blank\" rel=\"external\">https://github.com/anishathalye/neural-style</a></p>\n<p>创建或者选择一个文件夹来存放 neural-style 代码，使用 git clone 方式 download 代码，命令如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"keyword\">clone</span> <span class=\"title\">https</span>://github.com/anishathalye/neural-style.git</div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235126296-418324233.png\" alt=\"下载 neural-style 代码\"></p>\n<p>项目 neural-style 会依赖 pillow，因此还需要安装 pillow，在终端执行命令：</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip <span class=\"keyword\">install</span> pillow</div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235240281-926099681.png\" alt=\"安装 pillow\"></p>\n<h3 id=\"7-加载数据模型\"><a href=\"#7-加载数据模型\" class=\"headerlink\" title=\"7. 加载数据模型\"></a>7. 加载数据模型</h3><p>在终端执行命令：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http:<span class=\"regexp\">//</span>www.vlfeat.org<span class=\"regexp\">/matconvnet/m</span>odels<span class=\"regexp\">/beta16/im</span>agenet-vgg-verydeep-<span class=\"number\">19</span>.mat</div></pre></td></tr></table></figure>\n<p> <img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235505140-1370501613.png\" alt=\"\"></p>\n<p> <img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235528781-103216887.png\" alt=\"\"></p>\n<p>使用 wget 下载数据模型太慢了，简直不能忍，imagenet-vgg-verydeep-19.mat 文件还挺大，有576M。时间就是生命，生命不该浪费在下载上，果断使用 <code>ctrl + c</code> 中断了 wget 下载，如果你能忍受 wget ，那你就用 wget 吧，反正也能下载，就是慢点。为了节约点时间，神奇的淘宝就要闪亮登场了，我在淘宝上先花了1毛钱买了一天的迅雷会员，可是并没有像商家说的秒发账号密码。为了节约时间，果断地又花了1块钱买了一个月的迅雷会员，嗯，这家发货挺快的，接下来就是用迅雷加速下载链接 <a href=\"http://www.vlfeat.org/matconvnet/models/beta16/imagenet-vgg-verydeep-19.mat\" target=\"_blank\" rel=\"external\">http://www.vlfeat.org/matconvnet/models/beta16/imagenet-vgg-verydeep-19.mat</a></p>\n<p>imagenet-vgg-verydeep-19.mat 下载完成后，将其移动到 neural-style 根目录下，如下图所示：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120001629546-441644004.png\" alt=\"数据模型存放路径\"></p>\n<h3 id=\"8-开启深度学习之梵高的大门\"><a href=\"#8-开启深度学习之梵高的大门\" class=\"headerlink\" title=\"8. 开启深度学习之梵高的大门\"></a>8. 开启深度学习之梵高的大门</h3><p>进入 neural-style 目录，将需要处理的图片 nuc.jpg 放入目录 examples 中。nuc_output.jpg 为处理之后输出的文件名称。如果要处理图片 xyz.jpg 就将其放入 目录 examples 中，至于输出文件的名称可以随便设置，比如可以设置为 xyz_output.jpg。</p>\n<p>在终端执行命令 A</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">python neural_style.py <span class=\"params\">--content</span> <span class=\"string\">./examples/nuc.jpg</span> <span class=\"params\">--styles</span> <span class=\"string\">./examples/1-style.jpg</span> <span class=\"params\">--output</span> <span class=\"string\">./examples/nuc_output.jpg</span> <span class=\"params\">--iterations</span> 1500</div></pre></td></tr></table></figure>\n<p>其中，1-style.jpg 为梵高大师画作，也就是需要学习的对象，这里也可以改为梵高的 2-style1.jpg 或 2-style2.jpg 来作为学习的对象。–iterations 1500 表示迭代次数，如果用笔记本或者普通的台式机就减少迭代次数，因为机器运算太慢了，1500 次迭代不知道要何年何月才能执行完。<code>但是迭代次数在 1000 至 2000 之间处理的效果会比较理想</code>。</p>\n<p>在我的 Mac Pro 上设置的迭代次数为 100 次，得到处理后的图片效果还可以。需要提一下，在我的 Mac pro （配置前面已经给出） 上迭代1次大概会花费3分钟，迭代 100 次需要花费 5小时，毕竟是基于 CPU 计算，运算慢。要是有台 GPU 机器该有多爽，哈哈，想想而已，嘻嘻。</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004050156-1048917434.png\" alt=\"开始迭代\"></p>\n<p>哦呵，出现了 error 提示，原因在于没有安装 scipy。在终端执行命令安装 scipy</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip <span class=\"keyword\">install</span> scipy</div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004101859-1719031783.png\" alt=\"安装 scipy\"></p>\n<p>将迭代次数改为 100次，再次执行命令 A</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004131406-901903984.png\" alt=\"迭代 100次\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004140046-1598886231.png\" alt=\"迭代 100次 续\"></p>\n<p>OK，到此，所有步骤结束，我们可以看看经过深度学习处理之后的图片效果了。</p>\n<h3 id=\"9-查看处理后的图片效果\"><a href=\"#9-查看处理后的图片效果\" class=\"headerlink\" title=\"9. 查看处理后的图片效果\"></a>9. 查看处理后的图片效果</h3><p>进入 neural-style/examples 目录，查看目标图片 nuc_output.jpg </p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004950328-576212904.png\" alt=\"\"></p>\n<p>梵高大师画作 1-style.jpg 如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005037984-1130888407.jpg\" alt=\"梵高画\"></p>\n<p>选取了一张我就读过的大学的图书馆照片 nuc.jpg 作为需要处理的图片，如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005049062-618427893.jpg\" alt=\"原图，我的大学校园图书馆\"></p>\n<p>迭代 100次，学习梵高大师画风后得到的处理后的目标图片 nuc_output.jpg，如下：<br><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005104421-824057092.jpg\" alt=\"梵高画风的大学图书馆\"></p>\n<h5 id=\"参考文献：\"><a href=\"#参考文献：\" class=\"headerlink\" title=\"参考文献：\"></a>参考文献：</h5><p><a href=\"http://wiki.jikexueyuan.com/project/tensorflow-zh/get_started/os_setup.html\" target=\"_blank\" rel=\"external\">http://wiki.jikexueyuan.com/project/tensorflow-zh/get_started/os_setup.html</a></p>\n<p><a href=\"https://github.com/anishathalye/neural-style\" target=\"_blank\" rel=\"external\">https://github.com/anishathalye/neural-style</a></p>\n<p>迭代 1次，2次，10次，20次，30次，40次，100次输出的图片合成的 GIF 图，如下</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120013703062-275928298.gif\" width=\"240\" height=\"240\"></p>\n","site":{"data":{}},"excerpt":"<p>配一台个人使用的深度学习机器大概会花费2万人民币，比如其中的核心部件英伟达 Titan X GPU 售价大概9000人民币左右，这个价格对于一般人还是略贵的。想深层次进入深度学习应用领域，花点钱是必须的。正所谓有投入才有产出。本人现在还没有入手深度学习机器的预算，所以使用 Mac Pro 利用 CPU 计算来玩玩简单点的深度学习项目。</p>\n<p>我的 Mac Pro 配置为：</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">OS X EI Capitan</div><div class=\"line\">版本 <span class=\"number\">10.11</span><span class=\"number\">.6</span> (<span class=\"number\">15</span>G1212)</div><div class=\"line\">MacBook Pro（<span class=\"number\">13</span> 英寸，<span class=\"number\">2015</span> 年初期）</div><div class=\"line\">处理器 <span class=\"number\">2.7</span> GHz Intel Core i5</div><div class=\"line\">内存 <span class=\"number\">8</span> GB <span class=\"number\">1867</span> MHz DDR3</div><div class=\"line\">启动磁盘 Macintosh HD</div><div class=\"line\">图形卡 Intel Iris Graphics <span class=\"number\">6100</span> <span class=\"number\">1536</span> MB</div></pre></td></tr></table></figure>","more":"<h3 id=\"1-在-Mac-上安装-Anaconda-软件\"><a href=\"#1-在-Mac-上安装-Anaconda-软件\" class=\"headerlink\" title=\"1. 在 Mac 上安装 Anaconda 软件\"></a>1. 在 Mac 上安装 Anaconda 软件</h3><p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119195435984-525274691.png\" alt=\"Anaconda 软件界面\"></p>\n<h3 id=\"2-建立-tensorflow-的-conda-计算环境\"><a href=\"#2-建立-tensorflow-的-conda-计算环境\" class=\"headerlink\" title=\"2. 建立 tensorflow 的 conda 计算环境\"></a>2. 建立 tensorflow 的 conda 计算环境</h3><p>这里提一下有关 python 版本的问题，现在最稳定最常用的 python 版本是 2.7 和 3.5。入门 python 的话，建议从 2.7 版本入手，然后再过渡到 python 3.x 版本。我这里选用 tensorflow 依赖的 python 版本为 2.7。</p>\n<p>在 Mac 终端执行命令：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">conda create -n tensorflow python</span>=2.7</div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119210947859-1111890790.png\" alt=\"conda 创建 tensorflow 空间\"></p>\n<p>执行完命令后，可以看到</p>\n<pre><code>#\n# To activate this environment, use:\n# &gt; source activate tensorflow\n#\n# To deactivate this environment, use:\n# &gt; source deactivate tensorflow\n#\n</code></pre><p>在 Mac 终端执行命令 <code>source activate tensorflow</code> 可以激活名为 tensorflow 的 conda 计算环境，执行命令 <code>source deactivate tensorflow</code> 能关闭 conda 计算环境。</p>\n<h3 id=\"3-运行名为-tensorflow-的-conda-计算环境\"><a href=\"#3-运行名为-tensorflow-的-conda-计算环境\" class=\"headerlink\" title=\"3. 运行名为 tensorflow 的 conda 计算环境\"></a>3. 运行名为 tensorflow 的 conda 计算环境</h3><p>在 Mac 终端执行命令激活 conda 计算环境</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source <span class=\"built_in\">activate</span> tensorflow</div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119215425593-252567153.png\" alt=\"激活 conda 计算环境\"></p>\n<p>命令执行完之后，终端最左边会出现 (tensorflow) ，说明名为 tensorflow 的 conda 计算环境被激活了。</p>\n<h3 id=\"4-使用-pip-安装-tensorflow-深度学习框架\"><a href=\"#4-使用-pip-安装-tensorflow-深度学习框架\" class=\"headerlink\" title=\"4. 使用 pip 安装 tensorflow 深度学习框架\"></a>4. 使用 pip 安装 tensorflow 深度学习框架</h3><p>仍然是在 Mac 终端执行命令：</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install <span class=\"params\">--ignore-installed</span> <span class=\"params\">--upgrade</span> https:<span class=\"string\">//storage.googleapis.com/tensorflow/mac/tensorflow-0.8.0rc0-py2-none-any.whl</span></div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119220557046-2012970460.png\" alt=\"pip 安装 tensorflow\"></p>\n<p>安装过程中，出现以下错误提示，说明网络不好，或者需要使用 vpn 翻墙。多试几次就能安装成功了。<br><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119220749421-424094784.png\" alt=\"安装超时，出错\"></p>\n<h3 id=\"5-验证-tensorflow-深度学习框架安装成功\"><a href=\"#5-验证-tensorflow-深度学习框架安装成功\" class=\"headerlink\" title=\"5. 验证 tensorflow 深度学习框架安装成功\"></a>5. 验证 tensorflow 深度学习框架安装成功</h3><p>在 Mac 终端执行命令，进入 python 环境</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">python</span></div></pre></td></tr></table></figure>\n<p>执行一个简单的 tensorflow 小程序来验证深度学习框架是否安装成功，小程序如下：</p>\n<pre><code>import tensorflow as tf\nhello = tf.constant(&apos;Hello, TensorFlow!&apos;)\nsess = tf.Session()\nprint sess.run(hello)\n\na = tf.constant(10)\nb = tf.constant(32)\nprint sess.run(a+b)\n</code></pre><p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119232634984-1600377688.png\" alt=\"执行 python 命令，运行 tensorflow 小程序\"></p>\n<p>上面的小程序能正常运行，说明 tensorflow 深度学习框架安装成功了。此时，可以在软件 Anaconda 中查看名称为 tensorflow 的 conda 计算环境，如下图所示：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119233341234-1329704415.png\" alt=\"Anaconda 中查看名称为 tensorflow 的 conda 计算环境\"></p>\n<h3 id=\"6-加载-neural-style-神经网络训练代码\"><a href=\"#6-加载-neural-style-神经网络训练代码\" class=\"headerlink\" title=\"6. 加载 neural-style 神经网络训练代码\"></a>6. 加载 neural-style 神经网络训练代码</h3><p>项目 neural-style 位于 github 上，地址为 <a href=\"https://github.com/anishathalye/neural-style\" target=\"_blank\" rel=\"external\">https://github.com/anishathalye/neural-style</a></p>\n<p>创建或者选择一个文件夹来存放 neural-style 代码，使用 git clone 方式 download 代码，命令如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"keyword\">clone</span> <span class=\"title\">https</span>://github.com/anishathalye/neural-style.git</div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235126296-418324233.png\" alt=\"下载 neural-style 代码\"></p>\n<p>项目 neural-style 会依赖 pillow，因此还需要安装 pillow，在终端执行命令：</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip <span class=\"keyword\">install</span> pillow</div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235240281-926099681.png\" alt=\"安装 pillow\"></p>\n<h3 id=\"7-加载数据模型\"><a href=\"#7-加载数据模型\" class=\"headerlink\" title=\"7. 加载数据模型\"></a>7. 加载数据模型</h3><p>在终端执行命令：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http:<span class=\"regexp\">//</span>www.vlfeat.org<span class=\"regexp\">/matconvnet/m</span>odels<span class=\"regexp\">/beta16/im</span>agenet-vgg-verydeep-<span class=\"number\">19</span>.mat</div></pre></td></tr></table></figure>\n<p> <img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235505140-1370501613.png\" alt=\"\"></p>\n<p> <img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170119235528781-103216887.png\" alt=\"\"></p>\n<p>使用 wget 下载数据模型太慢了，简直不能忍，imagenet-vgg-verydeep-19.mat 文件还挺大，有576M。时间就是生命，生命不该浪费在下载上，果断使用 <code>ctrl + c</code> 中断了 wget 下载，如果你能忍受 wget ，那你就用 wget 吧，反正也能下载，就是慢点。为了节约点时间，神奇的淘宝就要闪亮登场了，我在淘宝上先花了1毛钱买了一天的迅雷会员，可是并没有像商家说的秒发账号密码。为了节约时间，果断地又花了1块钱买了一个月的迅雷会员，嗯，这家发货挺快的，接下来就是用迅雷加速下载链接 <a href=\"http://www.vlfeat.org/matconvnet/models/beta16/imagenet-vgg-verydeep-19.mat\" target=\"_blank\" rel=\"external\">http://www.vlfeat.org/matconvnet/models/beta16/imagenet-vgg-verydeep-19.mat</a></p>\n<p>imagenet-vgg-verydeep-19.mat 下载完成后，将其移动到 neural-style 根目录下，如下图所示：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120001629546-441644004.png\" alt=\"数据模型存放路径\"></p>\n<h3 id=\"8-开启深度学习之梵高的大门\"><a href=\"#8-开启深度学习之梵高的大门\" class=\"headerlink\" title=\"8. 开启深度学习之梵高的大门\"></a>8. 开启深度学习之梵高的大门</h3><p>进入 neural-style 目录，将需要处理的图片 nuc.jpg 放入目录 examples 中。nuc_output.jpg 为处理之后输出的文件名称。如果要处理图片 xyz.jpg 就将其放入 目录 examples 中，至于输出文件的名称可以随便设置，比如可以设置为 xyz_output.jpg。</p>\n<p>在终端执行命令 A</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">python neural_style.py <span class=\"params\">--content</span> <span class=\"string\">./examples/nuc.jpg</span> <span class=\"params\">--styles</span> <span class=\"string\">./examples/1-style.jpg</span> <span class=\"params\">--output</span> <span class=\"string\">./examples/nuc_output.jpg</span> <span class=\"params\">--iterations</span> 1500</div></pre></td></tr></table></figure>\n<p>其中，1-style.jpg 为梵高大师画作，也就是需要学习的对象，这里也可以改为梵高的 2-style1.jpg 或 2-style2.jpg 来作为学习的对象。–iterations 1500 表示迭代次数，如果用笔记本或者普通的台式机就减少迭代次数，因为机器运算太慢了，1500 次迭代不知道要何年何月才能执行完。<code>但是迭代次数在 1000 至 2000 之间处理的效果会比较理想</code>。</p>\n<p>在我的 Mac Pro 上设置的迭代次数为 100 次，得到处理后的图片效果还可以。需要提一下，在我的 Mac pro （配置前面已经给出） 上迭代1次大概会花费3分钟，迭代 100 次需要花费 5小时，毕竟是基于 CPU 计算，运算慢。要是有台 GPU 机器该有多爽，哈哈，想想而已，嘻嘻。</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004050156-1048917434.png\" alt=\"开始迭代\"></p>\n<p>哦呵，出现了 error 提示，原因在于没有安装 scipy。在终端执行命令安装 scipy</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip <span class=\"keyword\">install</span> scipy</div></pre></td></tr></table></figure>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004101859-1719031783.png\" alt=\"安装 scipy\"></p>\n<p>将迭代次数改为 100次，再次执行命令 A</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004131406-901903984.png\" alt=\"迭代 100次\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004140046-1598886231.png\" alt=\"迭代 100次 续\"></p>\n<p>OK，到此，所有步骤结束，我们可以看看经过深度学习处理之后的图片效果了。</p>\n<h3 id=\"9-查看处理后的图片效果\"><a href=\"#9-查看处理后的图片效果\" class=\"headerlink\" title=\"9. 查看处理后的图片效果\"></a>9. 查看处理后的图片效果</h3><p>进入 neural-style/examples 目录，查看目标图片 nuc_output.jpg </p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120004950328-576212904.png\" alt=\"\"></p>\n<p>梵高大师画作 1-style.jpg 如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005037984-1130888407.jpg\" alt=\"梵高画\"></p>\n<p>选取了一张我就读过的大学的图书馆照片 nuc.jpg 作为需要处理的图片，如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005049062-618427893.jpg\" alt=\"原图，我的大学校园图书馆\"></p>\n<p>迭代 100次，学习梵高大师画风后得到的处理后的目标图片 nuc_output.jpg，如下：<br><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120005104421-824057092.jpg\" alt=\"梵高画风的大学图书馆\"></p>\n<h5 id=\"参考文献：\"><a href=\"#参考文献：\" class=\"headerlink\" title=\"参考文献：\"></a>参考文献：</h5><p><a href=\"http://wiki.jikexueyuan.com/project/tensorflow-zh/get_started/os_setup.html\" target=\"_blank\" rel=\"external\">http://wiki.jikexueyuan.com/project/tensorflow-zh/get_started/os_setup.html</a></p>\n<p><a href=\"https://github.com/anishathalye/neural-style\" target=\"_blank\" rel=\"external\">https://github.com/anishathalye/neural-style</a></p>\n<p>迭代 1次，2次，10次，20次，30次，40次，100次输出的图片合成的 GIF 图，如下</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201701/719115-20170120013703062-275928298.gif\" width=\"240\" height=\"240\"></p>"},{"title":"2016年的总结","date":"2016-12-27T14:03:02.000Z","_content":"\n2016年，换了一份工作，换了一个城市去工作，能走到今天很感谢以前RCTX的部门老大给自己机会进入音视频这个行业，也非常感谢同事对自己的帮助，特别是一起历经RCTX，YF共事的搭档jia哥。\n\n前行的路上，是需要人帮助的，也是需要自我努力的。家人对自己的关心，就是自己精神上的支柱。朋友的帮助，是自己能走的更快的加速剂。\n\n28岁的自己在经历社会的洗炼后，其实活的也不明白，要是真明白了，人生也就结束了。人生路越走越长，就会出现不明白的事，从来不苟同某某某在什么时候活明白了，生命的延续，就会诞生新的事物，除非在某个时刻停止了思考，停止了接收新的事物，此刻的活着与死无异，这就是此刻的明白。\n\n2016年，经历了2家公司，8月5号从深圳辞职，8月8号到上海入职就加入项目的加急开发，期间没有一个缓冲让疲乏的身躯得到休整，心真的很疲惫。但是人接受的内外情景越多，人只会更强大，所以相信一切都是迎接美好而做的铺垫。\n\n2017年加强锻炼，有个好的身体才能更好的体验生活。希望家人都健健康康的，希望身边的朋友知足长乐，希望自己的学业能更上一层楼。\n\n<!-- more -->\n\n`写于2016年12月27日，北京`\n","source":"_posts/the-summary-of-2016-year.md","raw":"---\ntitle: 2016年的总结\ndate: 2016-12-27 22:03:02\ntags:\n- 生活\n- 工作\n---\n\n2016年，换了一份工作，换了一个城市去工作，能走到今天很感谢以前RCTX的部门老大给自己机会进入音视频这个行业，也非常感谢同事对自己的帮助，特别是一起历经RCTX，YF共事的搭档jia哥。\n\n前行的路上，是需要人帮助的，也是需要自我努力的。家人对自己的关心，就是自己精神上的支柱。朋友的帮助，是自己能走的更快的加速剂。\n\n28岁的自己在经历社会的洗炼后，其实活的也不明白，要是真明白了，人生也就结束了。人生路越走越长，就会出现不明白的事，从来不苟同某某某在什么时候活明白了，生命的延续，就会诞生新的事物，除非在某个时刻停止了思考，停止了接收新的事物，此刻的活着与死无异，这就是此刻的明白。\n\n2016年，经历了2家公司，8月5号从深圳辞职，8月8号到上海入职就加入项目的加急开发，期间没有一个缓冲让疲乏的身躯得到休整，心真的很疲惫。但是人接受的内外情景越多，人只会更强大，所以相信一切都是迎接美好而做的铺垫。\n\n2017年加强锻炼，有个好的身体才能更好的体验生活。希望家人都健健康康的，希望身边的朋友知足长乐，希望自己的学业能更上一层楼。\n\n<!-- more -->\n\n`写于2016年12月27日，北京`\n","slug":"the-summary-of-2016-year","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzu60035qxep33nlmugt","content":"<p>2016年，换了一份工作，换了一个城市去工作，能走到今天很感谢以前RCTX的部门老大给自己机会进入音视频这个行业，也非常感谢同事对自己的帮助，特别是一起历经RCTX，YF共事的搭档jia哥。</p>\n<p>前行的路上，是需要人帮助的，也是需要自我努力的。家人对自己的关心，就是自己精神上的支柱。朋友的帮助，是自己能走的更快的加速剂。</p>\n<p>28岁的自己在经历社会的洗炼后，其实活的也不明白，要是真明白了，人生也就结束了。人生路越走越长，就会出现不明白的事，从来不苟同某某某在什么时候活明白了，生命的延续，就会诞生新的事物，除非在某个时刻停止了思考，停止了接收新的事物，此刻的活着与死无异，这就是此刻的明白。</p>\n<p>2016年，经历了2家公司，8月5号从深圳辞职，8月8号到上海入职就加入项目的加急开发，期间没有一个缓冲让疲乏的身躯得到休整，心真的很疲惫。但是人接受的内外情景越多，人只会更强大，所以相信一切都是迎接美好而做的铺垫。</p>\n<p>2017年加强锻炼，有个好的身体才能更好的体验生活。希望家人都健健康康的，希望身边的朋友知足长乐，希望自己的学业能更上一层楼。</p>\n<a id=\"more\"></a>\n<p><code>写于2016年12月27日，北京</code></p>\n","site":{"data":{}},"excerpt":"<p>2016年，换了一份工作，换了一个城市去工作，能走到今天很感谢以前RCTX的部门老大给自己机会进入音视频这个行业，也非常感谢同事对自己的帮助，特别是一起历经RCTX，YF共事的搭档jia哥。</p>\n<p>前行的路上，是需要人帮助的，也是需要自我努力的。家人对自己的关心，就是自己精神上的支柱。朋友的帮助，是自己能走的更快的加速剂。</p>\n<p>28岁的自己在经历社会的洗炼后，其实活的也不明白，要是真明白了，人生也就结束了。人生路越走越长，就会出现不明白的事，从来不苟同某某某在什么时候活明白了，生命的延续，就会诞生新的事物，除非在某个时刻停止了思考，停止了接收新的事物，此刻的活着与死无异，这就是此刻的明白。</p>\n<p>2016年，经历了2家公司，8月5号从深圳辞职，8月8号到上海入职就加入项目的加急开发，期间没有一个缓冲让疲乏的身躯得到休整，心真的很疲惫。但是人接受的内外情景越多，人只会更强大，所以相信一切都是迎接美好而做的铺垫。</p>\n<p>2017年加强锻炼，有个好的身体才能更好的体验生活。希望家人都健健康康的，希望身边的朋友知足长乐，希望自己的学业能更上一层楼。</p>","more":"<p><code>写于2016年12月27日，北京</code></p>"},{"title":"对远程办公和时间统筹的思考","date":"2016-09-03T02:16:16.000Z","_content":"\n","source":"_posts/think-of-telecommuting-and-time-co-ordination.md","raw":"title: 对远程办公和时间统筹的思考\ndate: 2016-09-03 10:16:16\ntags:\n- 工作\n- 生活\n---\n\n","slug":"think-of-telecommuting-and-time-co-ordination","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzu70037qxep8q66vvz3","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"利用fdk-aac将iOS麦克风实时音频流编码为aac文件","date":"2016-07-08T05:37:38.000Z","_content":"\t\n　　\t近几天终于有点空闲时间写写东西了，将之前项目中自己做的东西更新上来，写写自己的心得感想。\n\n　　iOS系统上的音频硬编码器，可实现将pcm音频数据编码为aac格式的数据。但是，对于低码率下的音频编码，就是它的软肋了。通过函数扫描iOS各系统上音频硬编码支持的情况发现，aac-lc编码都是支持的，苹果的官方文档也说的很清楚。对于aac-he-v2编码，iOS现在所有的系统都不支持，aac-he编码需要iOS9.0以上系统才支持音频硬编码。\n\n<!-- more -->\n\n　　做直播的时候，利用iOS的音频硬编码器可以将码率降到80Kb/s，用128Kb/s虽然可以让音质更好，但有点浪费带宽，当主播的网络状况不好时，这就成了一个影响观众流畅观看的一个负面因子，一般选用96Kb/s的码率，这个码率在现今国内网络条件下，还是显得有那么点大。为降低码率同时保证音频音质的情形下，选择合适的编码器才是在有限带宽下优化直播体验的最好武器。\n\n　　音频编码器有很多，比如常见的有faac，vo_aacenc，fdk-aac，以及ffmpeg自带的音频编码器。ffmpeg3.0及之后的版本都已经移除了对faac，vo_aacenc的支持，对于ffmpeg3.0之后版本音频编码器的支持情况可以看看它的官网说明，从官网上看，ffmpeg组织建议使用他们的原生native音频编码器，可见，ffmpeg自带的编码器还是不错的。但是，为了一个音频编码功能引入一个这么强壮且庞大的库，有点不划算，虽然可裁剪ffmpeg，也可以将fdk-aac编译进ffmpeg中，但是如果应用中引入了基于ffmpeg开发的播放器的时候，ffmpeg库冲突的情形可能会出现。再说，有比ffmpeg原生音频编码器更好的fdk-aac音频编码器存在，就不需要考虑ffmpeg了，即便用ffmpeg做编码很方便。因为我们是用ffmpeg时间长了，就习惯依赖于ffmpeg了。\n\n　　fdk-aac音频编码器用起来也很简单，跟单独用faac差不多，但比faac编码效果好。使用fdk-aac实现了aac-lc，aac-he，aac-he-v2 采样率为44.1KHz，通道数为2（立体声），码率为32Kb/s的aac编码。\n\n\n","source":"_posts/use-fdk-aac-encode-iOS-mic-pcm-to-aac.md","raw":"---\ntitle: 利用fdk-aac将iOS麦克风实时音频流编码为aac文件\ndate: 2016-07-08 13:37:38\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n\t\n　　\t近几天终于有点空闲时间写写东西了，将之前项目中自己做的东西更新上来，写写自己的心得感想。\n\n　　iOS系统上的音频硬编码器，可实现将pcm音频数据编码为aac格式的数据。但是，对于低码率下的音频编码，就是它的软肋了。通过函数扫描iOS各系统上音频硬编码支持的情况发现，aac-lc编码都是支持的，苹果的官方文档也说的很清楚。对于aac-he-v2编码，iOS现在所有的系统都不支持，aac-he编码需要iOS9.0以上系统才支持音频硬编码。\n\n<!-- more -->\n\n　　做直播的时候，利用iOS的音频硬编码器可以将码率降到80Kb/s，用128Kb/s虽然可以让音质更好，但有点浪费带宽，当主播的网络状况不好时，这就成了一个影响观众流畅观看的一个负面因子，一般选用96Kb/s的码率，这个码率在现今国内网络条件下，还是显得有那么点大。为降低码率同时保证音频音质的情形下，选择合适的编码器才是在有限带宽下优化直播体验的最好武器。\n\n　　音频编码器有很多，比如常见的有faac，vo_aacenc，fdk-aac，以及ffmpeg自带的音频编码器。ffmpeg3.0及之后的版本都已经移除了对faac，vo_aacenc的支持，对于ffmpeg3.0之后版本音频编码器的支持情况可以看看它的官网说明，从官网上看，ffmpeg组织建议使用他们的原生native音频编码器，可见，ffmpeg自带的编码器还是不错的。但是，为了一个音频编码功能引入一个这么强壮且庞大的库，有点不划算，虽然可裁剪ffmpeg，也可以将fdk-aac编译进ffmpeg中，但是如果应用中引入了基于ffmpeg开发的播放器的时候，ffmpeg库冲突的情形可能会出现。再说，有比ffmpeg原生音频编码器更好的fdk-aac音频编码器存在，就不需要考虑ffmpeg了，即便用ffmpeg做编码很方便。因为我们是用ffmpeg时间长了，就习惯依赖于ffmpeg了。\n\n　　fdk-aac音频编码器用起来也很简单，跟单独用faac差不多，但比faac编码效果好。使用fdk-aac实现了aac-lc，aac-he，aac-he-v2 采样率为44.1KHz，通道数为2（立体声），码率为32Kb/s的aac编码。\n\n\n","slug":"use-fdk-aac-encode-iOS-mic-pcm-to-aac","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzu90039qxep1na3gf8c","content":"<p>　　    近几天终于有点空闲时间写写东西了，将之前项目中自己做的东西更新上来，写写自己的心得感想。</p>\n<p>　　iOS系统上的音频硬编码器，可实现将pcm音频数据编码为aac格式的数据。但是，对于低码率下的音频编码，就是它的软肋了。通过函数扫描iOS各系统上音频硬编码支持的情况发现，aac-lc编码都是支持的，苹果的官方文档也说的很清楚。对于aac-he-v2编码，iOS现在所有的系统都不支持，aac-he编码需要iOS9.0以上系统才支持音频硬编码。</p>\n<a id=\"more\"></a>\n<p>　　做直播的时候，利用iOS的音频硬编码器可以将码率降到80Kb/s，用128Kb/s虽然可以让音质更好，但有点浪费带宽，当主播的网络状况不好时，这就成了一个影响观众流畅观看的一个负面因子，一般选用96Kb/s的码率，这个码率在现今国内网络条件下，还是显得有那么点大。为降低码率同时保证音频音质的情形下，选择合适的编码器才是在有限带宽下优化直播体验的最好武器。</p>\n<p>　　音频编码器有很多，比如常见的有faac，vo_aacenc，fdk-aac，以及ffmpeg自带的音频编码器。ffmpeg3.0及之后的版本都已经移除了对faac，vo_aacenc的支持，对于ffmpeg3.0之后版本音频编码器的支持情况可以看看它的官网说明，从官网上看，ffmpeg组织建议使用他们的原生native音频编码器，可见，ffmpeg自带的编码器还是不错的。但是，为了一个音频编码功能引入一个这么强壮且庞大的库，有点不划算，虽然可裁剪ffmpeg，也可以将fdk-aac编译进ffmpeg中，但是如果应用中引入了基于ffmpeg开发的播放器的时候，ffmpeg库冲突的情形可能会出现。再说，有比ffmpeg原生音频编码器更好的fdk-aac音频编码器存在，就不需要考虑ffmpeg了，即便用ffmpeg做编码很方便。因为我们是用ffmpeg时间长了，就习惯依赖于ffmpeg了。</p>\n<p>　　fdk-aac音频编码器用起来也很简单，跟单独用faac差不多，但比faac编码效果好。使用fdk-aac实现了aac-lc，aac-he，aac-he-v2 采样率为44.1KHz，通道数为2（立体声），码率为32Kb/s的aac编码。</p>\n","site":{"data":{}},"excerpt":"<p>　　    近几天终于有点空闲时间写写东西了，将之前项目中自己做的东西更新上来，写写自己的心得感想。</p>\n<p>　　iOS系统上的音频硬编码器，可实现将pcm音频数据编码为aac格式的数据。但是，对于低码率下的音频编码，就是它的软肋了。通过函数扫描iOS各系统上音频硬编码支持的情况发现，aac-lc编码都是支持的，苹果的官方文档也说的很清楚。对于aac-he-v2编码，iOS现在所有的系统都不支持，aac-he编码需要iOS9.0以上系统才支持音频硬编码。</p>","more":"<p>　　做直播的时候，利用iOS的音频硬编码器可以将码率降到80Kb/s，用128Kb/s虽然可以让音质更好，但有点浪费带宽，当主播的网络状况不好时，这就成了一个影响观众流畅观看的一个负面因子，一般选用96Kb/s的码率，这个码率在现今国内网络条件下，还是显得有那么点大。为降低码率同时保证音频音质的情形下，选择合适的编码器才是在有限带宽下优化直播体验的最好武器。</p>\n<p>　　音频编码器有很多，比如常见的有faac，vo_aacenc，fdk-aac，以及ffmpeg自带的音频编码器。ffmpeg3.0及之后的版本都已经移除了对faac，vo_aacenc的支持，对于ffmpeg3.0之后版本音频编码器的支持情况可以看看它的官网说明，从官网上看，ffmpeg组织建议使用他们的原生native音频编码器，可见，ffmpeg自带的编码器还是不错的。但是，为了一个音频编码功能引入一个这么强壮且庞大的库，有点不划算，虽然可裁剪ffmpeg，也可以将fdk-aac编译进ffmpeg中，但是如果应用中引入了基于ffmpeg开发的播放器的时候，ffmpeg库冲突的情形可能会出现。再说，有比ffmpeg原生音频编码器更好的fdk-aac音频编码器存在，就不需要考虑ffmpeg了，即便用ffmpeg做编码很方便。因为我们是用ffmpeg时间长了，就习惯依赖于ffmpeg了。</p>\n<p>　　fdk-aac音频编码器用起来也很简单，跟单独用faac差不多，但比faac编码效果好。使用fdk-aac实现了aac-lc，aac-he，aac-he-v2 采样率为44.1KHz，通道数为2（立体声），码率为32Kb/s的aac编码。</p>"},{"title":"iOS上使用VideoToolBox硬解码h264","date":"2015-10-24T07:55:12.000Z","_content":"\n　　以下内容摘自我博客的[编译iOS平台上使用的X264库](http://depthlove.github.io/2015/09/16/build-X264-library-for-iOS-platform/)一文。\n\n　　从iOS8开始，苹果开放了硬解码和硬编码API，框架为VideoToolbox.framework， 此框架需要在iOS8及以上的系统上才能使用。\n\n　　此框架中的硬解码API是几个纯C函数，在任何OC或者 C++代码里都可以使用。使用的时候，首先，要把 VideoToolbox.framework 添加到工程里，并且在要使用该API的文件中包含头文件 #include <VideoToolbox/VideoToolbox.h>，然后，就可以畅快的高效的对视频流进行硬编码了。\n\n　　其实至少从iPhone4开始，苹果就是支持硬件解码了，但是硬解码API框架VideoToolBox一直是私有API，如果调用这个私有库，那么app在必须在越狱的设备上运行，正常的App如果想提交到AppStore是不允许使用私有API的。\n\n\n点评：对于如何使用iOS平台上的VideoToolbox框架对图像数据进行硬编码，github上已经有很多demo了，虽然苹果官方文档对VideoToolbox介绍的不全面，但足以搞清楚整个流程，至于细节需要花些时间自己去搞了，比如时间戳的计算。\n\n<!-- more -->","source":"_posts/use-VideoToolBox-decode-h264.md","raw":"title: iOS上使用VideoToolBox硬解码h264\ndate: 2015-10-24 15:55:12\ntags:\n- iOS中高级开发\n- 音视频处理\n---\n\n　　以下内容摘自我博客的[编译iOS平台上使用的X264库](http://depthlove.github.io/2015/09/16/build-X264-library-for-iOS-platform/)一文。\n\n　　从iOS8开始，苹果开放了硬解码和硬编码API，框架为VideoToolbox.framework， 此框架需要在iOS8及以上的系统上才能使用。\n\n　　此框架中的硬解码API是几个纯C函数，在任何OC或者 C++代码里都可以使用。使用的时候，首先，要把 VideoToolbox.framework 添加到工程里，并且在要使用该API的文件中包含头文件 #include <VideoToolbox/VideoToolbox.h>，然后，就可以畅快的高效的对视频流进行硬编码了。\n\n　　其实至少从iPhone4开始，苹果就是支持硬件解码了，但是硬解码API框架VideoToolBox一直是私有API，如果调用这个私有库，那么app在必须在越狱的设备上运行，正常的App如果想提交到AppStore是不允许使用私有API的。\n\n\n点评：对于如何使用iOS平台上的VideoToolbox框架对图像数据进行硬编码，github上已经有很多demo了，虽然苹果官方文档对VideoToolbox介绍的不全面，但足以搞清楚整个流程，至于细节需要花些时间自己去搞了，比如时间戳的计算。\n\n<!-- more -->","slug":"use-VideoToolBox-decode-h264","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzub003cqxep9xqrx6mb","content":"<p>　　以下内容摘自我博客的<a href=\"http://depthlove.github.io/2015/09/16/build-X264-library-for-iOS-platform/\">编译iOS平台上使用的X264库</a>一文。</p>\n<p>　　从iOS8开始，苹果开放了硬解码和硬编码API，框架为VideoToolbox.framework， 此框架需要在iOS8及以上的系统上才能使用。</p>\n<p>　　此框架中的硬解码API是几个纯C函数，在任何OC或者 C++代码里都可以使用。使用的时候，首先，要把 VideoToolbox.framework 添加到工程里，并且在要使用该API的文件中包含头文件 #include <videotoolbox videotoolbox.h=\"\">，然后，就可以畅快的高效的对视频流进行硬编码了。</videotoolbox></p>\n<p>　　其实至少从iPhone4开始，苹果就是支持硬件解码了，但是硬解码API框架VideoToolBox一直是私有API，如果调用这个私有库，那么app在必须在越狱的设备上运行，正常的App如果想提交到AppStore是不允许使用私有API的。</p>\n<p>点评：对于如何使用iOS平台上的VideoToolbox框架对图像数据进行硬编码，github上已经有很多demo了，虽然苹果官方文档对VideoToolbox介绍的不全面，但足以搞清楚整个流程，至于细节需要花些时间自己去搞了，比如时间戳的计算。</p>\n<a id=\"more\"></a>","site":{"data":{}},"excerpt":"<p>　　以下内容摘自我博客的<a href=\"http://depthlove.github.io/2015/09/16/build-X264-library-for-iOS-platform/\">编译iOS平台上使用的X264库</a>一文。</p>\n<p>　　从iOS8开始，苹果开放了硬解码和硬编码API，框架为VideoToolbox.framework， 此框架需要在iOS8及以上的系统上才能使用。</p>\n<p>　　此框架中的硬解码API是几个纯C函数，在任何OC或者 C++代码里都可以使用。使用的时候，首先，要把 VideoToolbox.framework 添加到工程里，并且在要使用该API的文件中包含头文件 #include <videotoolbox videotoolbox.h=\"\">，然后，就可以畅快的高效的对视频流进行硬编码了。</videotoolbox></p>\n<p>　　其实至少从iPhone4开始，苹果就是支持硬件解码了，但是硬解码API框架VideoToolBox一直是私有API，如果调用这个私有库，那么app在必须在越狱的设备上运行，正常的App如果想提交到AppStore是不允许使用私有API的。</p>\n<p>点评：对于如何使用iOS平台上的VideoToolbox框架对图像数据进行硬编码，github上已经有很多demo了，虽然苹果官方文档对VideoToolbox介绍的不全面，但足以搞清楚整个流程，至于细节需要花些时间自己去搞了，比如时间戳的计算。</p>","more":""},{"title":"深度学习项目移植之使用 cmake 编译 iOS 平台库","date":"2017-05-21T00:38:53.000Z","_content":"\n去年（2016年）做深度学习项目的移动端移植用到了 cmake，现在把当时写的一篇使用流程贴出来，主要目的是备忘。废话不多说，直接进入正题。\n\n## 1. 下载 X11 并安装\n\n关于 Mac 版 X11，Mac 不再随附 X11，但 XQuartz 项目会提供 X11 服务器和客户端库。XQuartz 项目提供适用于 MacOS 的 X11 服务器和客户端库，网址是 [https://www.xquartz.org](https://www.xquartz.org)。下载可用的最新版本并安装。具体说明见：[关于 Mac 版 X11](https://support.apple.com/zh-cn/HT201341)\n\n## 2. 下载 cmake 的 dmg 格式并安装\n\n下载地址: [https://cmake.org/download/](https://cmake.org/download/)，本文使用的是 Mac OSX 10.6 or later，cmake-3.7.1-Darwin-x86_64.dmg 版本。\n\n## 3. 终端安装 cmake\n在终端执行命令：\n\n\tsudo \"/Applications/CMake.app/Contents/bin/cmake-gui\" --install\n\t\n<!-- more -->\n\n## 4. 进入包含 CMakeLists.txt 文件的源码文件夹 xxx 并执行命令得到 Mac 工程（注意：命令的空格）\n\n在终端依次执行下面的命令：***（备注：xxx 为工程的名称）***\n\n\tcd xxx\n    \n\tmkdir build\n    \n\tcd build\n    \n\tcmake -G Xcode ..\n\n## 5. 将 Mac 工程改为 iOS 工程\n(1) 进入 build 文件夹，打开 Project.xcodeproj 工程，Duplicate TARGET \"xxx\"，生成了1个新的 TARGET \"xxx copy\" ***（备注：xxx 为 TARGET 的名称，跟 章节 4 中的 xxx 是同名的，也就是说章节 3 中的 xxx 决定了此处 Xcode 项目的 TARGET 名称）***\n    \n(2) 将 TARGET \"xxx copy\" 改名为 \"xxx-iOS\"\n    \n(3) 进入 TARGET \"xxx-iOS\" 的 Build Settings，将 Architectures 下的 Base SDK 改为 Latest iOS(iOS 10.2)，此时 Architectures，Supported Platforms，Valid Architectures 都会变成跟 iOS 平台相关的设置\n    \n(4) 修改 iOS Deployment Target 为想要支持的最低版本，此处设置支持的 iOS 最低版本为 iOS 7.0\n    \n(5) 在 Xcode 的左上角选择工程 xxx copy，接着进入 Manage Schemes，将 xxx copy 更名为 xxx-iOS\n\n## 6. 编译 xxx-iOS 即可得到 iOS 静态库 libxxx-iOS.a\n\n## 7. 终端执行命令 lipo -info libxxx-iOS.a 查看 iOS 静态库支持的 Architectures （如：armv7，arm64，x86_64，i386）\n\n在终端执行命令：\n\n\tlipo -info libxxx-iOS.a\n\n输出结果为\n\nArchitectures in the fat file: libxxx-iOS.a are: armv7 arm64\n\n若要生成 x86_64，i386 模拟器架构，就需要在使用 Xcode 编译的时候编译相应的 x86_64，i386 库。\n\t\n\t\n\n\n","source":"_posts/use-cmake-to-build-ios-lib.md","raw":"---\ntitle: 深度学习项目移植之使用 cmake 编译 iOS 平台库\ndate: 2017-05-21 08:38:53\ntags:\n- 工作\n- iOS中高级开发\n- 深度学习DL\n---\n\n去年（2016年）做深度学习项目的移动端移植用到了 cmake，现在把当时写的一篇使用流程贴出来，主要目的是备忘。废话不多说，直接进入正题。\n\n## 1. 下载 X11 并安装\n\n关于 Mac 版 X11，Mac 不再随附 X11，但 XQuartz 项目会提供 X11 服务器和客户端库。XQuartz 项目提供适用于 MacOS 的 X11 服务器和客户端库，网址是 [https://www.xquartz.org](https://www.xquartz.org)。下载可用的最新版本并安装。具体说明见：[关于 Mac 版 X11](https://support.apple.com/zh-cn/HT201341)\n\n## 2. 下载 cmake 的 dmg 格式并安装\n\n下载地址: [https://cmake.org/download/](https://cmake.org/download/)，本文使用的是 Mac OSX 10.6 or later，cmake-3.7.1-Darwin-x86_64.dmg 版本。\n\n## 3. 终端安装 cmake\n在终端执行命令：\n\n\tsudo \"/Applications/CMake.app/Contents/bin/cmake-gui\" --install\n\t\n<!-- more -->\n\n## 4. 进入包含 CMakeLists.txt 文件的源码文件夹 xxx 并执行命令得到 Mac 工程（注意：命令的空格）\n\n在终端依次执行下面的命令：***（备注：xxx 为工程的名称）***\n\n\tcd xxx\n    \n\tmkdir build\n    \n\tcd build\n    \n\tcmake -G Xcode ..\n\n## 5. 将 Mac 工程改为 iOS 工程\n(1) 进入 build 文件夹，打开 Project.xcodeproj 工程，Duplicate TARGET \"xxx\"，生成了1个新的 TARGET \"xxx copy\" ***（备注：xxx 为 TARGET 的名称，跟 章节 4 中的 xxx 是同名的，也就是说章节 3 中的 xxx 决定了此处 Xcode 项目的 TARGET 名称）***\n    \n(2) 将 TARGET \"xxx copy\" 改名为 \"xxx-iOS\"\n    \n(3) 进入 TARGET \"xxx-iOS\" 的 Build Settings，将 Architectures 下的 Base SDK 改为 Latest iOS(iOS 10.2)，此时 Architectures，Supported Platforms，Valid Architectures 都会变成跟 iOS 平台相关的设置\n    \n(4) 修改 iOS Deployment Target 为想要支持的最低版本，此处设置支持的 iOS 最低版本为 iOS 7.0\n    \n(5) 在 Xcode 的左上角选择工程 xxx copy，接着进入 Manage Schemes，将 xxx copy 更名为 xxx-iOS\n\n## 6. 编译 xxx-iOS 即可得到 iOS 静态库 libxxx-iOS.a\n\n## 7. 终端执行命令 lipo -info libxxx-iOS.a 查看 iOS 静态库支持的 Architectures （如：armv7，arm64，x86_64，i386）\n\n在终端执行命令：\n\n\tlipo -info libxxx-iOS.a\n\n输出结果为\n\nArchitectures in the fat file: libxxx-iOS.a are: armv7 arm64\n\n若要生成 x86_64，i386 模拟器架构，就需要在使用 Xcode 编译的时候编译相应的 x86_64，i386 库。\n\t\n\t\n\n\n","slug":"use-cmake-to-build-ios-lib","published":1,"updated":"2017-06-18T13:19:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzue003eqxep08io3uu0","content":"<p>去年（2016年）做深度学习项目的移动端移植用到了 cmake，现在把当时写的一篇使用流程贴出来，主要目的是备忘。废话不多说，直接进入正题。</p>\n<h2 id=\"1-下载-X11-并安装\"><a href=\"#1-下载-X11-并安装\" class=\"headerlink\" title=\"1. 下载 X11 并安装\"></a>1. 下载 X11 并安装</h2><p>关于 Mac 版 X11，Mac 不再随附 X11，但 XQuartz 项目会提供 X11 服务器和客户端库。XQuartz 项目提供适用于 MacOS 的 X11 服务器和客户端库，网址是 <a href=\"https://www.xquartz.org\" target=\"_blank\" rel=\"external\">https://www.xquartz.org</a>。下载可用的最新版本并安装。具体说明见：<a href=\"https://support.apple.com/zh-cn/HT201341\" target=\"_blank\" rel=\"external\">关于 Mac 版 X11</a></p>\n<h2 id=\"2-下载-cmake-的-dmg-格式并安装\"><a href=\"#2-下载-cmake-的-dmg-格式并安装\" class=\"headerlink\" title=\"2. 下载 cmake 的 dmg 格式并安装\"></a>2. 下载 cmake 的 dmg 格式并安装</h2><p>下载地址: <a href=\"https://cmake.org/download/\" target=\"_blank\" rel=\"external\">https://cmake.org/download/</a>，本文使用的是 Mac OSX 10.6 or later，cmake-3.7.1-Darwin-x86_64.dmg 版本。</p>\n<h2 id=\"3-终端安装-cmake\"><a href=\"#3-终端安装-cmake\" class=\"headerlink\" title=\"3. 终端安装 cmake\"></a>3. 终端安装 cmake</h2><p>在终端执行命令：</p>\n<pre><code>sudo &quot;/Applications/CMake.app/Contents/bin/cmake-gui&quot; --install\n</code></pre><a id=\"more\"></a>\n<h2 id=\"4-进入包含-CMakeLists-txt-文件的源码文件夹-xxx-并执行命令得到-Mac-工程（注意：命令的空格）\"><a href=\"#4-进入包含-CMakeLists-txt-文件的源码文件夹-xxx-并执行命令得到-Mac-工程（注意：命令的空格）\" class=\"headerlink\" title=\"4. 进入包含 CMakeLists.txt 文件的源码文件夹 xxx 并执行命令得到 Mac 工程（注意：命令的空格）\"></a>4. 进入包含 CMakeLists.txt 文件的源码文件夹 xxx 并执行命令得到 Mac 工程（注意：命令的空格）</h2><p>在终端依次执行下面的命令：<strong><em>（备注：xxx 为工程的名称）</em></strong></p>\n<pre><code>cd xxx\n\nmkdir build\n\ncd build\n\ncmake -G Xcode ..\n</code></pre><h2 id=\"5-将-Mac-工程改为-iOS-工程\"><a href=\"#5-将-Mac-工程改为-iOS-工程\" class=\"headerlink\" title=\"5. 将 Mac 工程改为 iOS 工程\"></a>5. 将 Mac 工程改为 iOS 工程</h2><p>(1) 进入 build 文件夹，打开 Project.xcodeproj 工程，Duplicate TARGET “xxx”，生成了1个新的 TARGET “xxx copy” <strong><em>（备注：xxx 为 TARGET 的名称，跟 章节 4 中的 xxx 是同名的，也就是说章节 3 中的 xxx 决定了此处 Xcode 项目的 TARGET 名称）</em></strong></p>\n<p>(2) 将 TARGET “xxx copy” 改名为 “xxx-iOS”</p>\n<p>(3) 进入 TARGET “xxx-iOS” 的 Build Settings，将 Architectures 下的 Base SDK 改为 Latest iOS(iOS 10.2)，此时 Architectures，Supported Platforms，Valid Architectures 都会变成跟 iOS 平台相关的设置</p>\n<p>(4) 修改 iOS Deployment Target 为想要支持的最低版本，此处设置支持的 iOS 最低版本为 iOS 7.0</p>\n<p>(5) 在 Xcode 的左上角选择工程 xxx copy，接着进入 Manage Schemes，将 xxx copy 更名为 xxx-iOS</p>\n<h2 id=\"6-编译-xxx-iOS-即可得到-iOS-静态库-libxxx-iOS-a\"><a href=\"#6-编译-xxx-iOS-即可得到-iOS-静态库-libxxx-iOS-a\" class=\"headerlink\" title=\"6. 编译 xxx-iOS 即可得到 iOS 静态库 libxxx-iOS.a\"></a>6. 编译 xxx-iOS 即可得到 iOS 静态库 libxxx-iOS.a</h2><h2 id=\"7-终端执行命令-lipo-info-libxxx-iOS-a-查看-iOS-静态库支持的-Architectures-（如：armv7，arm64，x86-64，i386）\"><a href=\"#7-终端执行命令-lipo-info-libxxx-iOS-a-查看-iOS-静态库支持的-Architectures-（如：armv7，arm64，x86-64，i386）\" class=\"headerlink\" title=\"7. 终端执行命令 lipo -info libxxx-iOS.a 查看 iOS 静态库支持的 Architectures （如：armv7，arm64，x86_64，i386）\"></a>7. 终端执行命令 lipo -info libxxx-iOS.a 查看 iOS 静态库支持的 Architectures （如：armv7，arm64，x86_64，i386）</h2><p>在终端执行命令：</p>\n<pre><code>lipo -info libxxx-iOS.a\n</code></pre><p>输出结果为</p>\n<p>Architectures in the fat file: libxxx-iOS.a are: armv7 arm64</p>\n<p>若要生成 x86_64，i386 模拟器架构，就需要在使用 Xcode 编译的时候编译相应的 x86_64，i386 库。</p>\n","site":{"data":{}},"excerpt":"<p>去年（2016年）做深度学习项目的移动端移植用到了 cmake，现在把当时写的一篇使用流程贴出来，主要目的是备忘。废话不多说，直接进入正题。</p>\n<h2 id=\"1-下载-X11-并安装\"><a href=\"#1-下载-X11-并安装\" class=\"headerlink\" title=\"1. 下载 X11 并安装\"></a>1. 下载 X11 并安装</h2><p>关于 Mac 版 X11，Mac 不再随附 X11，但 XQuartz 项目会提供 X11 服务器和客户端库。XQuartz 项目提供适用于 MacOS 的 X11 服务器和客户端库，网址是 <a href=\"https://www.xquartz.org\" target=\"_blank\" rel=\"external\">https://www.xquartz.org</a>。下载可用的最新版本并安装。具体说明见：<a href=\"https://support.apple.com/zh-cn/HT201341\" target=\"_blank\" rel=\"external\">关于 Mac 版 X11</a></p>\n<h2 id=\"2-下载-cmake-的-dmg-格式并安装\"><a href=\"#2-下载-cmake-的-dmg-格式并安装\" class=\"headerlink\" title=\"2. 下载 cmake 的 dmg 格式并安装\"></a>2. 下载 cmake 的 dmg 格式并安装</h2><p>下载地址: <a href=\"https://cmake.org/download/\" target=\"_blank\" rel=\"external\">https://cmake.org/download/</a>，本文使用的是 Mac OSX 10.6 or later，cmake-3.7.1-Darwin-x86_64.dmg 版本。</p>\n<h2 id=\"3-终端安装-cmake\"><a href=\"#3-终端安装-cmake\" class=\"headerlink\" title=\"3. 终端安装 cmake\"></a>3. 终端安装 cmake</h2><p>在终端执行命令：</p>\n<pre><code>sudo &quot;/Applications/CMake.app/Contents/bin/cmake-gui&quot; --install\n</code></pre>","more":"<h2 id=\"4-进入包含-CMakeLists-txt-文件的源码文件夹-xxx-并执行命令得到-Mac-工程（注意：命令的空格）\"><a href=\"#4-进入包含-CMakeLists-txt-文件的源码文件夹-xxx-并执行命令得到-Mac-工程（注意：命令的空格）\" class=\"headerlink\" title=\"4. 进入包含 CMakeLists.txt 文件的源码文件夹 xxx 并执行命令得到 Mac 工程（注意：命令的空格）\"></a>4. 进入包含 CMakeLists.txt 文件的源码文件夹 xxx 并执行命令得到 Mac 工程（注意：命令的空格）</h2><p>在终端依次执行下面的命令：<strong><em>（备注：xxx 为工程的名称）</em></strong></p>\n<pre><code>cd xxx\n\nmkdir build\n\ncd build\n\ncmake -G Xcode ..\n</code></pre><h2 id=\"5-将-Mac-工程改为-iOS-工程\"><a href=\"#5-将-Mac-工程改为-iOS-工程\" class=\"headerlink\" title=\"5. 将 Mac 工程改为 iOS 工程\"></a>5. 将 Mac 工程改为 iOS 工程</h2><p>(1) 进入 build 文件夹，打开 Project.xcodeproj 工程，Duplicate TARGET “xxx”，生成了1个新的 TARGET “xxx copy” <strong><em>（备注：xxx 为 TARGET 的名称，跟 章节 4 中的 xxx 是同名的，也就是说章节 3 中的 xxx 决定了此处 Xcode 项目的 TARGET 名称）</em></strong></p>\n<p>(2) 将 TARGET “xxx copy” 改名为 “xxx-iOS”</p>\n<p>(3) 进入 TARGET “xxx-iOS” 的 Build Settings，将 Architectures 下的 Base SDK 改为 Latest iOS(iOS 10.2)，此时 Architectures，Supported Platforms，Valid Architectures 都会变成跟 iOS 平台相关的设置</p>\n<p>(4) 修改 iOS Deployment Target 为想要支持的最低版本，此处设置支持的 iOS 最低版本为 iOS 7.0</p>\n<p>(5) 在 Xcode 的左上角选择工程 xxx copy，接着进入 Manage Schemes，将 xxx copy 更名为 xxx-iOS</p>\n<h2 id=\"6-编译-xxx-iOS-即可得到-iOS-静态库-libxxx-iOS-a\"><a href=\"#6-编译-xxx-iOS-即可得到-iOS-静态库-libxxx-iOS-a\" class=\"headerlink\" title=\"6. 编译 xxx-iOS 即可得到 iOS 静态库 libxxx-iOS.a\"></a>6. 编译 xxx-iOS 即可得到 iOS 静态库 libxxx-iOS.a</h2><h2 id=\"7-终端执行命令-lipo-info-libxxx-iOS-a-查看-iOS-静态库支持的-Architectures-（如：armv7，arm64，x86-64，i386）\"><a href=\"#7-终端执行命令-lipo-info-libxxx-iOS-a-查看-iOS-静态库支持的-Architectures-（如：armv7，arm64，x86-64，i386）\" class=\"headerlink\" title=\"7. 终端执行命令 lipo -info libxxx-iOS.a 查看 iOS 静态库支持的 Architectures （如：armv7，arm64，x86_64，i386）\"></a>7. 终端执行命令 lipo -info libxxx-iOS.a 查看 iOS 静态库支持的 Architectures （如：armv7，arm64，x86_64，i386）</h2><p>在终端执行命令：</p>\n<pre><code>lipo -info libxxx-iOS.a\n</code></pre><p>输出结果为</p>\n<p>Architectures in the fat file: libxxx-iOS.a are: armv7 arm64</p>\n<p>若要生成 x86_64，i386 模拟器架构，就需要在使用 Xcode 编译的时候编译相应的 x86_64，i386 库。</p>"},{"title":"利用FFmpeg和rtmp实现iOS设备上摄像头视频流的推送","date":"2015-10-13T06:06:55.000Z","_content":"\n\n","source":"_posts/use-ffmpeg-and-rtmp-to-push-iOS-camera-streaming.md","raw":"title: 利用FFmpeg和rtmp实现iOS设备上摄像头视频流的推送\ndate: 2015-10-13 14:06:55\ntags:\n- iOS中高级开发\n- 音视频处理\n---\n\n\n","slug":"use-ffmpeg-and-rtmp-to-push-iOS-camera-streaming","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzuh003gqxeprix4qhqf","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"利用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件","date":"2015-09-18T01:43:27.000Z","_content":"### 一、编译x264库\n如何编译x264源码获取支持iOS平台的静态库，可参考我的文章[《编译iOS平台上使用的X264库》](http://depthlove.github.io/2015/09/16/build-X264-library-for-iOS-platform/)\n\n### 二、编译FFmpeg库\n如何编译FFmpeg源码获取支持iOS平台的静态库，可参考我的博客园上的文章[《实战FFmpeg－－编译iOS平台使用的FFmpeg库（支持arm64的FFmpeg2.6.2）》](http://www.cnblogs.com/sunminmin/p/4463741.html#3195954)\n\n### 三、将x264库编译进FFmpeg库\n通过步骤二，知道了如何编译FFmpeg库，但是要在FFmpeg中使用x264进行h264编码，还需要修改步骤二中的脚本。\n\n步骤二中，使用的脚本的下载地址为：[build-ffmpeg.sh](https://github.com/kewlbear/FFmpeg-iOS-build-script)\n\n现在，FFmpeg的最新版本是 2.8，iOS系统的最新版本是 iOS 9.0.2，Xcode 最新版本是 Xcode 7.0.1，从 Xcode 7.0 开始支持 bitcode 选项了，bitcode 是什么，在百度上搜一搜就知道了。\n\n<!-- more -->\n\n看一看从下载地址获取的脚本，脚本内容如下：\n\n```\n#!/bin/sh\n\n# directories\nSOURCE=\"ffmpeg-2.8\"\nFAT=\"FFmpeg-iOS\"\n\nSCRATCH=\"scratch\"\n# must be an absolute path\nTHIN=`pwd`/\"thin\"\n\n# absolute path to x264 library\n#X264=`pwd`/fat-x264\n\n#FDK_AAC=`pwd`/fdk-aac/fdk-aac-ios\n\nCONFIGURE_FLAGS=\"--enable-cross-compile --disable-debug --disable-programs \\\n                 --disable-doc --enable-pic\"\n\nif [ \"$X264\" ]\nthen\n\tCONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-gpl --enable-libx264\"\nfi\n\nif [ \"$FDK_AAC\" ]\nthen\n\tCONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-libfdk-aac\"\nfi\n\n# avresample\n#CONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-avresample\"\n\nARCHS=\"arm64 armv7 x86_64 i386\"\n\nCOMPILE=\"y\"\nLIPO=\"y\"\n\nDEPLOYMENT_TARGET=\"6.0\"\n\nif [ \"$*\" ]\nthen\n\tif [ \"$*\" = \"lipo\" ]\n\tthen\n\t\t# skip compile\n\t\tCOMPILE=\n\telse\n\t\tARCHS=\"$*\"\n\t\tif [ $# -eq 1 ]\n\t\tthen\n\t\t\t# skip lipo\n\t\t\tLIPO=\n\t\tfi\n\tfi\nfi\n\nif [ \"$COMPILE\" ]\nthen\n\tif [ ! `which yasm` ]\n\tthen\n\t\techo 'Yasm not found'\n\t\tif [ ! `which brew` ]\n\t\tthen\n\t\t\techo 'Homebrew not found. Trying to install...'\n                        ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" \\\n\t\t\t\t|| exit 1\n\t\tfi\n\t\techo 'Trying to install Yasm...'\n\t\tbrew install yasm || exit 1\n\tfi\n\tif [ ! `which gas-preprocessor.pl` ]\n\tthen\n\t\techo 'gas-preprocessor.pl not found. Trying to install...'\n\t\t(curl -L https://github.com/libav/gas-preprocessor/raw/master/gas-preprocessor.pl \\\n\t\t\t-o /usr/local/bin/gas-preprocessor.pl \\\n\t\t\t&& chmod +x /usr/local/bin/gas-preprocessor.pl) \\\n\t\t\t|| exit 1\n\tfi\n\n\tif [ ! -r $SOURCE ]\n\tthen\n\t\techo 'FFmpeg source not found. Trying to download...'\n\t\tcurl http://www.ffmpeg.org/releases/$SOURCE.tar.bz2 | tar xj \\\n\t\t\t|| exit 1\n\tfi\n\n\tCWD=`pwd`\n\tfor ARCH in $ARCHS\n\tdo\n\t\techo \"building $ARCH...\"\n\t\tmkdir -p \"$SCRATCH/$ARCH\"\n\t\tcd \"$SCRATCH/$ARCH\"\n\n\t\tCFLAGS=\"-arch $ARCH\"\n\t\tif [ \"$ARCH\" = \"i386\" -o \"$ARCH\" = \"x86_64\" ]\n\t\tthen\n\t\t    PLATFORM=\"iPhoneSimulator\"\n\t\t    CFLAGS=\"$CFLAGS -mios-simulator-version-min=$DEPLOYMENT_TARGET\"\n\t\telse\n\t\t    PLATFORM=\"iPhoneOS\"\n\t\t    CFLAGS=\"$CFLAGS -mios-version-min=$DEPLOYMENT_TARGET -fembed-bitcode\"\n\t\t    if [ \"$ARCH\" = \"arm64\" ]\n\t\t    then\n\t\t        EXPORT=\"GASPP_FIX_XCODE5=1\"\n\t\t    fi\n\t\tfi\n\n\t\tXCRUN_SDK=`echo $PLATFORM | tr '[:upper:]' '[:lower:]'`\n\t\tCC=\"xcrun -sdk $XCRUN_SDK clang\"\n\t\tCXXFLAGS=\"$CFLAGS\"\n\t\tLDFLAGS=\"$CFLAGS\"\n\t\tif [ \"$X264\" ]\n\t\tthen\n\t\t\tCFLAGS=\"$CFLAGS -I$X264/include\"\n\t\t\tLDFLAGS=\"$LDFLAGS -L$X264/lib\"\n\t\tfi\n\t\tif [ \"$FDK_AAC\" ]\n\t\tthen\n\t\t\tCFLAGS=\"$CFLAGS -I$FDK_AAC/include\"\n\t\t\tLDFLAGS=\"$LDFLAGS -L$FDK_AAC/lib\"\n\t\tfi\n\n\t\tTMPDIR=${TMPDIR/%\\/} $CWD/$SOURCE/configure \\\n\t\t    --target-os=darwin \\\n\t\t    --arch=$ARCH \\\n\t\t    --cc=\"$CC\" \\\n\t\t    $CONFIGURE_FLAGS \\\n\t\t    --extra-cflags=\"$CFLAGS\" \\\n\t\t    --extra-ldflags=\"$LDFLAGS\" \\\n\t\t    --prefix=\"$THIN/$ARCH\" \\\n\t\t|| exit 1\n\n\t\tmake -j3 install $EXPORT || exit 1\n\t\tcd $CWD\n\tdone\nfi\n\nif [ \"$LIPO\" ]\nthen\n\techo \"building fat binaries...\"\n\tmkdir -p $FAT/lib\n\tset - $ARCHS\n\tCWD=`pwd`\n\tcd $THIN/$1/lib\n\tfor LIB in *.a\n\tdo\n\t\tcd $CWD\n\t\techo lipo -create `find $THIN -name $LIB` -output $FAT/lib/$LIB 1>&2\n\t\tlipo -create `find $THIN -name $LIB` -output $FAT/lib/$LIB || exit 1\n\tdone\n\n\tcd $CWD\n\tcp -rf $THIN/$1/include $FAT\nfi\n\necho Done\n\n```\n\n#### 三（一）、注意内容1\n\n```\n# absolute path to x264 library\n#X264=`pwd`/fat-x264\n\n#FDK_AAC=`pwd`/fdk-aac/fdk-aac-ios\n\nCONFIGURE_FLAGS=\"--enable-cross-compile --disable-debug --disable-programs \\\n                 --disable-doc --enable-pic\"\n\nif [ \"$X264\" ]\nthen\n\tCONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-gpl --enable-libx264\"\nfi\n\nif [ \"$FDK_AAC\" ]\nthen\n\tCONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-libfdk-aac\"\nfi\n\n# avresample\n#CONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-avresample\"\n```\n\n要将x264编译进FFmpeg中，需要取消对该句代码的注销 \n\t\n\tX264=`pwd`/fat-x264\n\t\n即，\n\t\n\t#X264=`pwd`/fat-x264\n\t\n改为\n\n\tX264=`pwd`/fat-x264\n\t\n#### 三（二）、注意内容2\n经过步骤三（一）的修改后，在Mac终端执行FFmpeg，脚本的时候，可能会存在因为bitcode引起编译出错。\n\n需要将脚本中\n\n```\nCFLAGS=\"$CFLAGS -mios-version-min=$DEPLOYMENT_TARGET -fembed-bitcode\"\n```\n\n修改为\n\n```\nCFLAGS=\"$CFLAGS -mios-version-min=$DEPLOYMENT_TARGET\"\n```\n\n### 四、总结编译x264以及支持x264的FFmpeg的步骤\n\n1. 编译得到 x264 静态库\n2. 将存放x264静态库（头文件，库文件）的文件夹名称改为 fat-x264 （因为编译FFmpeg的脚本中定义存放x264文件的文件夹名称为fat-x264，看步骤三（一）中的内容）\n3. 修改编译FFmpeg的脚本build-ffmpeg.sh，具体见步骤 三（一），三（二）\n4. 将编译FFmpeg的脚本build-ffmpeg.sh 与 fat-x264 存放到同一个目录下\n5. 在Mac终端执行脚本build-ffmpeg.sh\n6. 最后x264静态库，支持x264的FFmpeg静态库，内容如下\n\n![x264静态库](http://images2015.cnblogs.com/blog/719115/201510/719115-20151012182722241-1784823013.png)\n\n![FFmpeg静态库](http://images2015.cnblogs.com/blog/719115/201510/719115-20151012182739491-661413965.png)\n\n### 五、获取iOS设备摄像头实时视频\n\n### 六，采用x264和FFmpeg对iOS实时视频流编码为h264\n\n### 七、完整的代码下载地址\n\n采用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件的工程的下载地址为：[FFmpeg-X264-Encode-for-iOS\n](https://github.com/depthlove/FFmpeg-X264-Encode-for-iOS)\n\t\n\n\t","source":"_posts/use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264.md","raw":"title: 利用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件\ndate: 2015-09-18 09:43:27\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n### 一、编译x264库\n如何编译x264源码获取支持iOS平台的静态库，可参考我的文章[《编译iOS平台上使用的X264库》](http://depthlove.github.io/2015/09/16/build-X264-library-for-iOS-platform/)\n\n### 二、编译FFmpeg库\n如何编译FFmpeg源码获取支持iOS平台的静态库，可参考我的博客园上的文章[《实战FFmpeg－－编译iOS平台使用的FFmpeg库（支持arm64的FFmpeg2.6.2）》](http://www.cnblogs.com/sunminmin/p/4463741.html#3195954)\n\n### 三、将x264库编译进FFmpeg库\n通过步骤二，知道了如何编译FFmpeg库，但是要在FFmpeg中使用x264进行h264编码，还需要修改步骤二中的脚本。\n\n步骤二中，使用的脚本的下载地址为：[build-ffmpeg.sh](https://github.com/kewlbear/FFmpeg-iOS-build-script)\n\n现在，FFmpeg的最新版本是 2.8，iOS系统的最新版本是 iOS 9.0.2，Xcode 最新版本是 Xcode 7.0.1，从 Xcode 7.0 开始支持 bitcode 选项了，bitcode 是什么，在百度上搜一搜就知道了。\n\n<!-- more -->\n\n看一看从下载地址获取的脚本，脚本内容如下：\n\n```\n#!/bin/sh\n\n# directories\nSOURCE=\"ffmpeg-2.8\"\nFAT=\"FFmpeg-iOS\"\n\nSCRATCH=\"scratch\"\n# must be an absolute path\nTHIN=`pwd`/\"thin\"\n\n# absolute path to x264 library\n#X264=`pwd`/fat-x264\n\n#FDK_AAC=`pwd`/fdk-aac/fdk-aac-ios\n\nCONFIGURE_FLAGS=\"--enable-cross-compile --disable-debug --disable-programs \\\n                 --disable-doc --enable-pic\"\n\nif [ \"$X264\" ]\nthen\n\tCONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-gpl --enable-libx264\"\nfi\n\nif [ \"$FDK_AAC\" ]\nthen\n\tCONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-libfdk-aac\"\nfi\n\n# avresample\n#CONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-avresample\"\n\nARCHS=\"arm64 armv7 x86_64 i386\"\n\nCOMPILE=\"y\"\nLIPO=\"y\"\n\nDEPLOYMENT_TARGET=\"6.0\"\n\nif [ \"$*\" ]\nthen\n\tif [ \"$*\" = \"lipo\" ]\n\tthen\n\t\t# skip compile\n\t\tCOMPILE=\n\telse\n\t\tARCHS=\"$*\"\n\t\tif [ $# -eq 1 ]\n\t\tthen\n\t\t\t# skip lipo\n\t\t\tLIPO=\n\t\tfi\n\tfi\nfi\n\nif [ \"$COMPILE\" ]\nthen\n\tif [ ! `which yasm` ]\n\tthen\n\t\techo 'Yasm not found'\n\t\tif [ ! `which brew` ]\n\t\tthen\n\t\t\techo 'Homebrew not found. Trying to install...'\n                        ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" \\\n\t\t\t\t|| exit 1\n\t\tfi\n\t\techo 'Trying to install Yasm...'\n\t\tbrew install yasm || exit 1\n\tfi\n\tif [ ! `which gas-preprocessor.pl` ]\n\tthen\n\t\techo 'gas-preprocessor.pl not found. Trying to install...'\n\t\t(curl -L https://github.com/libav/gas-preprocessor/raw/master/gas-preprocessor.pl \\\n\t\t\t-o /usr/local/bin/gas-preprocessor.pl \\\n\t\t\t&& chmod +x /usr/local/bin/gas-preprocessor.pl) \\\n\t\t\t|| exit 1\n\tfi\n\n\tif [ ! -r $SOURCE ]\n\tthen\n\t\techo 'FFmpeg source not found. Trying to download...'\n\t\tcurl http://www.ffmpeg.org/releases/$SOURCE.tar.bz2 | tar xj \\\n\t\t\t|| exit 1\n\tfi\n\n\tCWD=`pwd`\n\tfor ARCH in $ARCHS\n\tdo\n\t\techo \"building $ARCH...\"\n\t\tmkdir -p \"$SCRATCH/$ARCH\"\n\t\tcd \"$SCRATCH/$ARCH\"\n\n\t\tCFLAGS=\"-arch $ARCH\"\n\t\tif [ \"$ARCH\" = \"i386\" -o \"$ARCH\" = \"x86_64\" ]\n\t\tthen\n\t\t    PLATFORM=\"iPhoneSimulator\"\n\t\t    CFLAGS=\"$CFLAGS -mios-simulator-version-min=$DEPLOYMENT_TARGET\"\n\t\telse\n\t\t    PLATFORM=\"iPhoneOS\"\n\t\t    CFLAGS=\"$CFLAGS -mios-version-min=$DEPLOYMENT_TARGET -fembed-bitcode\"\n\t\t    if [ \"$ARCH\" = \"arm64\" ]\n\t\t    then\n\t\t        EXPORT=\"GASPP_FIX_XCODE5=1\"\n\t\t    fi\n\t\tfi\n\n\t\tXCRUN_SDK=`echo $PLATFORM | tr '[:upper:]' '[:lower:]'`\n\t\tCC=\"xcrun -sdk $XCRUN_SDK clang\"\n\t\tCXXFLAGS=\"$CFLAGS\"\n\t\tLDFLAGS=\"$CFLAGS\"\n\t\tif [ \"$X264\" ]\n\t\tthen\n\t\t\tCFLAGS=\"$CFLAGS -I$X264/include\"\n\t\t\tLDFLAGS=\"$LDFLAGS -L$X264/lib\"\n\t\tfi\n\t\tif [ \"$FDK_AAC\" ]\n\t\tthen\n\t\t\tCFLAGS=\"$CFLAGS -I$FDK_AAC/include\"\n\t\t\tLDFLAGS=\"$LDFLAGS -L$FDK_AAC/lib\"\n\t\tfi\n\n\t\tTMPDIR=${TMPDIR/%\\/} $CWD/$SOURCE/configure \\\n\t\t    --target-os=darwin \\\n\t\t    --arch=$ARCH \\\n\t\t    --cc=\"$CC\" \\\n\t\t    $CONFIGURE_FLAGS \\\n\t\t    --extra-cflags=\"$CFLAGS\" \\\n\t\t    --extra-ldflags=\"$LDFLAGS\" \\\n\t\t    --prefix=\"$THIN/$ARCH\" \\\n\t\t|| exit 1\n\n\t\tmake -j3 install $EXPORT || exit 1\n\t\tcd $CWD\n\tdone\nfi\n\nif [ \"$LIPO\" ]\nthen\n\techo \"building fat binaries...\"\n\tmkdir -p $FAT/lib\n\tset - $ARCHS\n\tCWD=`pwd`\n\tcd $THIN/$1/lib\n\tfor LIB in *.a\n\tdo\n\t\tcd $CWD\n\t\techo lipo -create `find $THIN -name $LIB` -output $FAT/lib/$LIB 1>&2\n\t\tlipo -create `find $THIN -name $LIB` -output $FAT/lib/$LIB || exit 1\n\tdone\n\n\tcd $CWD\n\tcp -rf $THIN/$1/include $FAT\nfi\n\necho Done\n\n```\n\n#### 三（一）、注意内容1\n\n```\n# absolute path to x264 library\n#X264=`pwd`/fat-x264\n\n#FDK_AAC=`pwd`/fdk-aac/fdk-aac-ios\n\nCONFIGURE_FLAGS=\"--enable-cross-compile --disable-debug --disable-programs \\\n                 --disable-doc --enable-pic\"\n\nif [ \"$X264\" ]\nthen\n\tCONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-gpl --enable-libx264\"\nfi\n\nif [ \"$FDK_AAC\" ]\nthen\n\tCONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-libfdk-aac\"\nfi\n\n# avresample\n#CONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-avresample\"\n```\n\n要将x264编译进FFmpeg中，需要取消对该句代码的注销 \n\t\n\tX264=`pwd`/fat-x264\n\t\n即，\n\t\n\t#X264=`pwd`/fat-x264\n\t\n改为\n\n\tX264=`pwd`/fat-x264\n\t\n#### 三（二）、注意内容2\n经过步骤三（一）的修改后，在Mac终端执行FFmpeg，脚本的时候，可能会存在因为bitcode引起编译出错。\n\n需要将脚本中\n\n```\nCFLAGS=\"$CFLAGS -mios-version-min=$DEPLOYMENT_TARGET -fembed-bitcode\"\n```\n\n修改为\n\n```\nCFLAGS=\"$CFLAGS -mios-version-min=$DEPLOYMENT_TARGET\"\n```\n\n### 四、总结编译x264以及支持x264的FFmpeg的步骤\n\n1. 编译得到 x264 静态库\n2. 将存放x264静态库（头文件，库文件）的文件夹名称改为 fat-x264 （因为编译FFmpeg的脚本中定义存放x264文件的文件夹名称为fat-x264，看步骤三（一）中的内容）\n3. 修改编译FFmpeg的脚本build-ffmpeg.sh，具体见步骤 三（一），三（二）\n4. 将编译FFmpeg的脚本build-ffmpeg.sh 与 fat-x264 存放到同一个目录下\n5. 在Mac终端执行脚本build-ffmpeg.sh\n6. 最后x264静态库，支持x264的FFmpeg静态库，内容如下\n\n![x264静态库](http://images2015.cnblogs.com/blog/719115/201510/719115-20151012182722241-1784823013.png)\n\n![FFmpeg静态库](http://images2015.cnblogs.com/blog/719115/201510/719115-20151012182739491-661413965.png)\n\n### 五、获取iOS设备摄像头实时视频\n\n### 六，采用x264和FFmpeg对iOS实时视频流编码为h264\n\n### 七、完整的代码下载地址\n\n采用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件的工程的下载地址为：[FFmpeg-X264-Encode-for-iOS\n](https://github.com/depthlove/FFmpeg-X264-Encode-for-iOS)\n\t\n\n\t","slug":"use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzui003iqxepcrld8ziz","content":"<h3 id=\"一、编译x264库\"><a href=\"#一、编译x264库\" class=\"headerlink\" title=\"一、编译x264库\"></a>一、编译x264库</h3><p>如何编译x264源码获取支持iOS平台的静态库，可参考我的文章<a href=\"http://depthlove.github.io/2015/09/16/build-X264-library-for-iOS-platform/\">《编译iOS平台上使用的X264库》</a></p>\n<h3 id=\"二、编译FFmpeg库\"><a href=\"#二、编译FFmpeg库\" class=\"headerlink\" title=\"二、编译FFmpeg库\"></a>二、编译FFmpeg库</h3><p>如何编译FFmpeg源码获取支持iOS平台的静态库，可参考我的博客园上的文章<a href=\"http://www.cnblogs.com/sunminmin/p/4463741.html#3195954\" target=\"_blank\" rel=\"external\">《实战FFmpeg－－编译iOS平台使用的FFmpeg库（支持arm64的FFmpeg2.6.2）》</a></p>\n<h3 id=\"三、将x264库编译进FFmpeg库\"><a href=\"#三、将x264库编译进FFmpeg库\" class=\"headerlink\" title=\"三、将x264库编译进FFmpeg库\"></a>三、将x264库编译进FFmpeg库</h3><p>通过步骤二，知道了如何编译FFmpeg库，但是要在FFmpeg中使用x264进行h264编码，还需要修改步骤二中的脚本。</p>\n<p>步骤二中，使用的脚本的下载地址为：<a href=\"https://github.com/kewlbear/FFmpeg-iOS-build-script\" target=\"_blank\" rel=\"external\">build-ffmpeg.sh</a></p>\n<p>现在，FFmpeg的最新版本是 2.8，iOS系统的最新版本是 iOS 9.0.2，Xcode 最新版本是 Xcode 7.0.1，从 Xcode 7.0 开始支持 bitcode 选项了，bitcode 是什么，在百度上搜一搜就知道了。</p>\n<a id=\"more\"></a>\n<p>看一看从下载地址获取的脚本，脚本内容如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/sh</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># directories</span></div><div class=\"line\">SOURCE=<span class=\"string\">\"ffmpeg-2.8\"</span></div><div class=\"line\">FAT=<span class=\"string\">\"FFmpeg-iOS\"</span></div><div class=\"line\"></div><div class=\"line\">SCRATCH=<span class=\"string\">\"scratch\"</span></div><div class=\"line\"><span class=\"comment\"># must be an absolute path</span></div><div class=\"line\">THIN=`<span class=\"built_in\">pwd</span>`/<span class=\"string\">\"thin\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># absolute path to x264 library</span></div><div class=\"line\"><span class=\"comment\">#X264=`pwd`/fat-x264</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#FDK_AAC=`pwd`/fdk-aac/fdk-aac-ios</span></div><div class=\"line\"></div><div class=\"line\">CONFIGURE_FLAGS=<span class=\"string\">\"--enable-cross-compile --disable-debug --disable-programs \\</span></div><div class=\"line\">                 --disable-doc --enable-pic\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$X264</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\tCONFIGURE_FLAGS=<span class=\"string\">\"<span class=\"variable\">$CONFIGURE_FLAGS</span> --enable-gpl --enable-libx264\"</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$FDK_AAC</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\tCONFIGURE_FLAGS=<span class=\"string\">\"<span class=\"variable\">$CONFIGURE_FLAGS</span> --enable-libfdk-aac\"</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># avresample</span></div><div class=\"line\"><span class=\"comment\">#CONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-avresample\"</span></div><div class=\"line\"></div><div class=\"line\">ARCHS=<span class=\"string\">\"arm64 armv7 x86_64 i386\"</span></div><div class=\"line\"></div><div class=\"line\">COMPILE=<span class=\"string\">\"y\"</span></div><div class=\"line\">LIPO=<span class=\"string\">\"y\"</span></div><div class=\"line\"></div><div class=\"line\">DEPLOYMENT_TARGET=<span class=\"string\">\"6.0\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"$*\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> [ <span class=\"string\">\"$*\"</span> = <span class=\"string\">\"lipo\"</span> ]</div><div class=\"line\">\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t<span class=\"comment\"># skip compile</span></div><div class=\"line\">\t\tCOMPILE=</div><div class=\"line\">\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\tARCHS=<span class=\"string\">\"$*\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> <span class=\"_\">-eq</span> 1 ]</div><div class=\"line\">\t\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t\t<span class=\"comment\"># skip lipo</span></div><div class=\"line\">\t\t\tLIPO=</div><div class=\"line\">\t\t<span class=\"keyword\">fi</span></div><div class=\"line\">\t<span class=\"keyword\">fi</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$COMPILE</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> [ ! `<span class=\"built_in\">which</span> yasm` ]</div><div class=\"line\">\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'Yasm not found'</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> [ ! `<span class=\"built_in\">which</span> brew` ]</div><div class=\"line\">\t\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'Homebrew not found. Trying to install...'</span></div><div class=\"line\">                        ruby <span class=\"_\">-e</span> <span class=\"string\">\"<span class=\"variable\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>\"</span> \\</div><div class=\"line\">\t\t\t\t|| <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t\t<span class=\"keyword\">fi</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'Trying to install Yasm...'</span></div><div class=\"line\">\t\tbrew install yasm || <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t<span class=\"keyword\">fi</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> [ ! `<span class=\"built_in\">which</span> gas-preprocessor.pl` ]</div><div class=\"line\">\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'gas-preprocessor.pl not found. Trying to install...'</span></div><div class=\"line\">\t\t(curl -L https://github.com/libav/gas-preprocessor/raw/master/gas-preprocessor.pl \\</div><div class=\"line\">\t\t\t-o /usr/<span class=\"built_in\">local</span>/bin/gas-preprocessor.pl \\</div><div class=\"line\">\t\t\t&amp;&amp; chmod +x /usr/<span class=\"built_in\">local</span>/bin/gas-preprocessor.pl) \\</div><div class=\"line\">\t\t\t|| <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">if</span> [ ! -r <span class=\"variable\">$SOURCE</span> ]</div><div class=\"line\">\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'FFmpeg source not found. Trying to download...'</span></div><div class=\"line\">\t\tcurl http://www.ffmpeg.org/releases/<span class=\"variable\">$SOURCE</span>.tar.bz2 | tar xj \\</div><div class=\"line\">\t\t\t|| <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">\tCWD=`<span class=\"built_in\">pwd</span>`</div><div class=\"line\">\t<span class=\"keyword\">for</span> ARCH <span class=\"keyword\">in</span> <span class=\"variable\">$ARCHS</span></div><div class=\"line\">\t<span class=\"keyword\">do</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">\"building <span class=\"variable\">$ARCH</span>...\"</span></div><div class=\"line\">\t\tmkdir -p <span class=\"string\">\"<span class=\"variable\">$SCRATCH</span>/<span class=\"variable\">$ARCH</span>\"</span></div><div class=\"line\">\t\t<span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$SCRATCH</span>/<span class=\"variable\">$ARCH</span>\"</span></div><div class=\"line\"></div><div class=\"line\">\t\tCFLAGS=<span class=\"string\">\"-arch <span class=\"variable\">$ARCH</span>\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$ARCH</span>\"</span> = <span class=\"string\">\"i386\"</span> -o <span class=\"string\">\"<span class=\"variable\">$ARCH</span>\"</span> = <span class=\"string\">\"x86_64\"</span> ]</div><div class=\"line\">\t\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t    PLATFORM=<span class=\"string\">\"iPhoneSimulator\"</span></div><div class=\"line\">\t\t    CFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -mios-simulator-version-min=<span class=\"variable\">$DEPLOYMENT_TARGET</span>\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t    PLATFORM=<span class=\"string\">\"iPhoneOS\"</span></div><div class=\"line\">\t\t    CFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -mios-version-min=<span class=\"variable\">$DEPLOYMENT_TARGET</span> -fembed-bitcode\"</span></div><div class=\"line\">\t\t    <span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$ARCH</span>\"</span> = <span class=\"string\">\"arm64\"</span> ]</div><div class=\"line\">\t\t    <span class=\"keyword\">then</span></div><div class=\"line\">\t\t        EXPORT=<span class=\"string\">\"GASPP_FIX_XCODE5=1\"</span></div><div class=\"line\">\t\t    <span class=\"keyword\">fi</span></div><div class=\"line\">\t\t<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">\t\tXCRUN_SDK=`<span class=\"built_in\">echo</span> <span class=\"variable\">$PLATFORM</span> | tr <span class=\"string\">'[:upper:]'</span> <span class=\"string\">'[:lower:]'</span>`</div><div class=\"line\">\t\tCC=<span class=\"string\">\"xcrun -sdk <span class=\"variable\">$XCRUN_SDK</span> clang\"</span></div><div class=\"line\">\t\tCXXFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span>\"</span></div><div class=\"line\">\t\tLDFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span>\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$X264</span>\"</span> ]</div><div class=\"line\">\t\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t\tCFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -I<span class=\"variable\">$X264</span>/include\"</span></div><div class=\"line\">\t\t\tLDFLAGS=<span class=\"string\">\"<span class=\"variable\">$LDFLAGS</span> -L<span class=\"variable\">$X264</span>/lib\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">fi</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$FDK_AAC</span>\"</span> ]</div><div class=\"line\">\t\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t\tCFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -I<span class=\"variable\">$FDK_AAC</span>/include\"</span></div><div class=\"line\">\t\t\tLDFLAGS=<span class=\"string\">\"<span class=\"variable\">$LDFLAGS</span> -L<span class=\"variable\">$FDK_AAC</span>/lib\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">\t\tTMPDIR=<span class=\"variable\">$&#123;TMPDIR/%\\/&#125;</span> <span class=\"variable\">$CWD</span>/<span class=\"variable\">$SOURCE</span>/configure \\</div><div class=\"line\">\t\t    --target-os=darwin \\</div><div class=\"line\">\t\t    --arch=<span class=\"variable\">$ARCH</span> \\</div><div class=\"line\">\t\t    --cc=<span class=\"string\">\"<span class=\"variable\">$CC</span>\"</span> \\</div><div class=\"line\">\t\t    <span class=\"variable\">$CONFIGURE_FLAGS</span> \\</div><div class=\"line\">\t\t    --extra-cflags=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span>\"</span> \\</div><div class=\"line\">\t\t    --extra-ldflags=<span class=\"string\">\"<span class=\"variable\">$LDFLAGS</span>\"</span> \\</div><div class=\"line\">\t\t    --prefix=<span class=\"string\">\"<span class=\"variable\">$THIN</span>/<span class=\"variable\">$ARCH</span>\"</span> \\</div><div class=\"line\">\t\t|| <span class=\"built_in\">exit</span> 1</div><div class=\"line\"></div><div class=\"line\">\t\tmake -j3 install <span class=\"variable\">$EXPORT</span> || <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t\t<span class=\"built_in\">cd</span> <span class=\"variable\">$CWD</span></div><div class=\"line\">\t<span class=\"keyword\">done</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$LIPO</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"building fat binaries...\"</span></div><div class=\"line\">\tmkdir -p <span class=\"variable\">$FAT</span>/lib</div><div class=\"line\">\t<span class=\"built_in\">set</span> - <span class=\"variable\">$ARCHS</span></div><div class=\"line\">\tCWD=`<span class=\"built_in\">pwd</span>`</div><div class=\"line\">\t<span class=\"built_in\">cd</span> <span class=\"variable\">$THIN</span>/<span class=\"variable\">$1</span>/lib</div><div class=\"line\">\t<span class=\"keyword\">for</span> LIB <span class=\"keyword\">in</span> *.a</div><div class=\"line\">\t<span class=\"keyword\">do</span></div><div class=\"line\">\t\t<span class=\"built_in\">cd</span> <span class=\"variable\">$CWD</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> lipo -create `find <span class=\"variable\">$THIN</span> -name <span class=\"variable\">$LIB</span>` -output <span class=\"variable\">$FAT</span>/lib/<span class=\"variable\">$LIB</span> 1&gt;&amp;2</div><div class=\"line\">\t\tlipo -create `find <span class=\"variable\">$THIN</span> -name <span class=\"variable\">$LIB</span>` -output <span class=\"variable\">$FAT</span>/lib/<span class=\"variable\">$LIB</span> || <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t<span class=\"keyword\">done</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">cd</span> <span class=\"variable\">$CWD</span></div><div class=\"line\">\tcp -rf <span class=\"variable\">$THIN</span>/<span class=\"variable\">$1</span>/include <span class=\"variable\">$FAT</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> Done</div></pre></td></tr></table></figure>\n<h4 id=\"三（一）、注意内容1\"><a href=\"#三（一）、注意内容1\" class=\"headerlink\" title=\"三（一）、注意内容1\"></a>三（一）、注意内容1</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># absolute path to x264 library</span></div><div class=\"line\"><span class=\"comment\">#X264=`pwd`/fat-x264</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#FDK_AAC=`pwd`/fdk-aac/fdk-aac-ios</span></div><div class=\"line\"></div><div class=\"line\">CONFIGURE_FLAGS=<span class=\"string\">\"--enable-cross-compile --disable-debug --disable-programs \\</span></div><div class=\"line\">                 --disable-doc --enable-pic\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$X264</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\tCONFIGURE_FLAGS=<span class=\"string\">\"<span class=\"variable\">$CONFIGURE_FLAGS</span> --enable-gpl --enable-libx264\"</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$FDK_AAC</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\tCONFIGURE_FLAGS=<span class=\"string\">\"<span class=\"variable\">$CONFIGURE_FLAGS</span> --enable-libfdk-aac\"</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># avresample</span></div><div class=\"line\"><span class=\"comment\">#CONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-avresample\"</span></div></pre></td></tr></table></figure>\n<p>要将x264编译进FFmpeg中，需要取消对该句代码的注销 </p>\n<pre><code>X264=`pwd`/fat-x264\n</code></pre><p>即，</p>\n<pre><code>#X264=`pwd`/fat-x264\n</code></pre><p>改为</p>\n<pre><code>X264=`pwd`/fat-x264\n</code></pre><h4 id=\"三（二）、注意内容2\"><a href=\"#三（二）、注意内容2\" class=\"headerlink\" title=\"三（二）、注意内容2\"></a>三（二）、注意内容2</h4><p>经过步骤三（一）的修改后，在Mac终端执行FFmpeg，脚本的时候，可能会存在因为bitcode引起编译出错。</p>\n<p>需要将脚本中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -mios-version-min=<span class=\"variable\">$DEPLOYMENT_TARGET</span> -fembed-bitcode\"</span></div></pre></td></tr></table></figure>\n<p>修改为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -mios-version-min=<span class=\"variable\">$DEPLOYMENT_TARGET</span>\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"四、总结编译x264以及支持x264的FFmpeg的步骤\"><a href=\"#四、总结编译x264以及支持x264的FFmpeg的步骤\" class=\"headerlink\" title=\"四、总结编译x264以及支持x264的FFmpeg的步骤\"></a>四、总结编译x264以及支持x264的FFmpeg的步骤</h3><ol>\n<li>编译得到 x264 静态库</li>\n<li>将存放x264静态库（头文件，库文件）的文件夹名称改为 fat-x264 （因为编译FFmpeg的脚本中定义存放x264文件的文件夹名称为fat-x264，看步骤三（一）中的内容）</li>\n<li>修改编译FFmpeg的脚本build-ffmpeg.sh，具体见步骤 三（一），三（二）</li>\n<li>将编译FFmpeg的脚本build-ffmpeg.sh 与 fat-x264 存放到同一个目录下</li>\n<li>在Mac终端执行脚本build-ffmpeg.sh</li>\n<li>最后x264静态库，支持x264的FFmpeg静态库，内容如下</li>\n</ol>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201510/719115-20151012182722241-1784823013.png\" alt=\"x264静态库\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201510/719115-20151012182739491-661413965.png\" alt=\"FFmpeg静态库\"></p>\n<h3 id=\"五、获取iOS设备摄像头实时视频\"><a href=\"#五、获取iOS设备摄像头实时视频\" class=\"headerlink\" title=\"五、获取iOS设备摄像头实时视频\"></a>五、获取iOS设备摄像头实时视频</h3><h3 id=\"六，采用x264和FFmpeg对iOS实时视频流编码为h264\"><a href=\"#六，采用x264和FFmpeg对iOS实时视频流编码为h264\" class=\"headerlink\" title=\"六，采用x264和FFmpeg对iOS实时视频流编码为h264\"></a>六，采用x264和FFmpeg对iOS实时视频流编码为h264</h3><h3 id=\"七、完整的代码下载地址\"><a href=\"#七、完整的代码下载地址\" class=\"headerlink\" title=\"七、完整的代码下载地址\"></a>七、完整的代码下载地址</h3><p>采用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件的工程的下载地址为：<a href=\"https://github.com/depthlove/FFmpeg-X264-Encode-for-iOS\" target=\"_blank\" rel=\"external\">FFmpeg-X264-Encode-for-iOS\n</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"一、编译x264库\"><a href=\"#一、编译x264库\" class=\"headerlink\" title=\"一、编译x264库\"></a>一、编译x264库</h3><p>如何编译x264源码获取支持iOS平台的静态库，可参考我的文章<a href=\"http://depthlove.github.io/2015/09/16/build-X264-library-for-iOS-platform/\">《编译iOS平台上使用的X264库》</a></p>\n<h3 id=\"二、编译FFmpeg库\"><a href=\"#二、编译FFmpeg库\" class=\"headerlink\" title=\"二、编译FFmpeg库\"></a>二、编译FFmpeg库</h3><p>如何编译FFmpeg源码获取支持iOS平台的静态库，可参考我的博客园上的文章<a href=\"http://www.cnblogs.com/sunminmin/p/4463741.html#3195954\" target=\"_blank\" rel=\"external\">《实战FFmpeg－－编译iOS平台使用的FFmpeg库（支持arm64的FFmpeg2.6.2）》</a></p>\n<h3 id=\"三、将x264库编译进FFmpeg库\"><a href=\"#三、将x264库编译进FFmpeg库\" class=\"headerlink\" title=\"三、将x264库编译进FFmpeg库\"></a>三、将x264库编译进FFmpeg库</h3><p>通过步骤二，知道了如何编译FFmpeg库，但是要在FFmpeg中使用x264进行h264编码，还需要修改步骤二中的脚本。</p>\n<p>步骤二中，使用的脚本的下载地址为：<a href=\"https://github.com/kewlbear/FFmpeg-iOS-build-script\" target=\"_blank\" rel=\"external\">build-ffmpeg.sh</a></p>\n<p>现在，FFmpeg的最新版本是 2.8，iOS系统的最新版本是 iOS 9.0.2，Xcode 最新版本是 Xcode 7.0.1，从 Xcode 7.0 开始支持 bitcode 选项了，bitcode 是什么，在百度上搜一搜就知道了。</p>","more":"<p>看一看从下载地址获取的脚本，脚本内容如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/sh</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># directories</span></div><div class=\"line\">SOURCE=<span class=\"string\">\"ffmpeg-2.8\"</span></div><div class=\"line\">FAT=<span class=\"string\">\"FFmpeg-iOS\"</span></div><div class=\"line\"></div><div class=\"line\">SCRATCH=<span class=\"string\">\"scratch\"</span></div><div class=\"line\"><span class=\"comment\"># must be an absolute path</span></div><div class=\"line\">THIN=`<span class=\"built_in\">pwd</span>`/<span class=\"string\">\"thin\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># absolute path to x264 library</span></div><div class=\"line\"><span class=\"comment\">#X264=`pwd`/fat-x264</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#FDK_AAC=`pwd`/fdk-aac/fdk-aac-ios</span></div><div class=\"line\"></div><div class=\"line\">CONFIGURE_FLAGS=<span class=\"string\">\"--enable-cross-compile --disable-debug --disable-programs \\</span></div><div class=\"line\">                 --disable-doc --enable-pic\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$X264</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\tCONFIGURE_FLAGS=<span class=\"string\">\"<span class=\"variable\">$CONFIGURE_FLAGS</span> --enable-gpl --enable-libx264\"</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$FDK_AAC</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\tCONFIGURE_FLAGS=<span class=\"string\">\"<span class=\"variable\">$CONFIGURE_FLAGS</span> --enable-libfdk-aac\"</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># avresample</span></div><div class=\"line\"><span class=\"comment\">#CONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-avresample\"</span></div><div class=\"line\"></div><div class=\"line\">ARCHS=<span class=\"string\">\"arm64 armv7 x86_64 i386\"</span></div><div class=\"line\"></div><div class=\"line\">COMPILE=<span class=\"string\">\"y\"</span></div><div class=\"line\">LIPO=<span class=\"string\">\"y\"</span></div><div class=\"line\"></div><div class=\"line\">DEPLOYMENT_TARGET=<span class=\"string\">\"6.0\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"$*\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> [ <span class=\"string\">\"$*\"</span> = <span class=\"string\">\"lipo\"</span> ]</div><div class=\"line\">\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t<span class=\"comment\"># skip compile</span></div><div class=\"line\">\t\tCOMPILE=</div><div class=\"line\">\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\tARCHS=<span class=\"string\">\"$*\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> <span class=\"_\">-eq</span> 1 ]</div><div class=\"line\">\t\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t\t<span class=\"comment\"># skip lipo</span></div><div class=\"line\">\t\t\tLIPO=</div><div class=\"line\">\t\t<span class=\"keyword\">fi</span></div><div class=\"line\">\t<span class=\"keyword\">fi</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$COMPILE</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> [ ! `<span class=\"built_in\">which</span> yasm` ]</div><div class=\"line\">\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'Yasm not found'</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> [ ! `<span class=\"built_in\">which</span> brew` ]</div><div class=\"line\">\t\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'Homebrew not found. Trying to install...'</span></div><div class=\"line\">                        ruby <span class=\"_\">-e</span> <span class=\"string\">\"<span class=\"variable\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>\"</span> \\</div><div class=\"line\">\t\t\t\t|| <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t\t<span class=\"keyword\">fi</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'Trying to install Yasm...'</span></div><div class=\"line\">\t\tbrew install yasm || <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t<span class=\"keyword\">fi</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> [ ! `<span class=\"built_in\">which</span> gas-preprocessor.pl` ]</div><div class=\"line\">\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'gas-preprocessor.pl not found. Trying to install...'</span></div><div class=\"line\">\t\t(curl -L https://github.com/libav/gas-preprocessor/raw/master/gas-preprocessor.pl \\</div><div class=\"line\">\t\t\t-o /usr/<span class=\"built_in\">local</span>/bin/gas-preprocessor.pl \\</div><div class=\"line\">\t\t\t&amp;&amp; chmod +x /usr/<span class=\"built_in\">local</span>/bin/gas-preprocessor.pl) \\</div><div class=\"line\">\t\t\t|| <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">if</span> [ ! -r <span class=\"variable\">$SOURCE</span> ]</div><div class=\"line\">\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">'FFmpeg source not found. Trying to download...'</span></div><div class=\"line\">\t\tcurl http://www.ffmpeg.org/releases/<span class=\"variable\">$SOURCE</span>.tar.bz2 | tar xj \\</div><div class=\"line\">\t\t\t|| <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">\tCWD=`<span class=\"built_in\">pwd</span>`</div><div class=\"line\">\t<span class=\"keyword\">for</span> ARCH <span class=\"keyword\">in</span> <span class=\"variable\">$ARCHS</span></div><div class=\"line\">\t<span class=\"keyword\">do</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">\"building <span class=\"variable\">$ARCH</span>...\"</span></div><div class=\"line\">\t\tmkdir -p <span class=\"string\">\"<span class=\"variable\">$SCRATCH</span>/<span class=\"variable\">$ARCH</span>\"</span></div><div class=\"line\">\t\t<span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$SCRATCH</span>/<span class=\"variable\">$ARCH</span>\"</span></div><div class=\"line\"></div><div class=\"line\">\t\tCFLAGS=<span class=\"string\">\"-arch <span class=\"variable\">$ARCH</span>\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$ARCH</span>\"</span> = <span class=\"string\">\"i386\"</span> -o <span class=\"string\">\"<span class=\"variable\">$ARCH</span>\"</span> = <span class=\"string\">\"x86_64\"</span> ]</div><div class=\"line\">\t\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t    PLATFORM=<span class=\"string\">\"iPhoneSimulator\"</span></div><div class=\"line\">\t\t    CFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -mios-simulator-version-min=<span class=\"variable\">$DEPLOYMENT_TARGET</span>\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t    PLATFORM=<span class=\"string\">\"iPhoneOS\"</span></div><div class=\"line\">\t\t    CFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -mios-version-min=<span class=\"variable\">$DEPLOYMENT_TARGET</span> -fembed-bitcode\"</span></div><div class=\"line\">\t\t    <span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$ARCH</span>\"</span> = <span class=\"string\">\"arm64\"</span> ]</div><div class=\"line\">\t\t    <span class=\"keyword\">then</span></div><div class=\"line\">\t\t        EXPORT=<span class=\"string\">\"GASPP_FIX_XCODE5=1\"</span></div><div class=\"line\">\t\t    <span class=\"keyword\">fi</span></div><div class=\"line\">\t\t<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">\t\tXCRUN_SDK=`<span class=\"built_in\">echo</span> <span class=\"variable\">$PLATFORM</span> | tr <span class=\"string\">'[:upper:]'</span> <span class=\"string\">'[:lower:]'</span>`</div><div class=\"line\">\t\tCC=<span class=\"string\">\"xcrun -sdk <span class=\"variable\">$XCRUN_SDK</span> clang\"</span></div><div class=\"line\">\t\tCXXFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span>\"</span></div><div class=\"line\">\t\tLDFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span>\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$X264</span>\"</span> ]</div><div class=\"line\">\t\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t\tCFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -I<span class=\"variable\">$X264</span>/include\"</span></div><div class=\"line\">\t\t\tLDFLAGS=<span class=\"string\">\"<span class=\"variable\">$LDFLAGS</span> -L<span class=\"variable\">$X264</span>/lib\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">fi</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$FDK_AAC</span>\"</span> ]</div><div class=\"line\">\t\t<span class=\"keyword\">then</span></div><div class=\"line\">\t\t\tCFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -I<span class=\"variable\">$FDK_AAC</span>/include\"</span></div><div class=\"line\">\t\t\tLDFLAGS=<span class=\"string\">\"<span class=\"variable\">$LDFLAGS</span> -L<span class=\"variable\">$FDK_AAC</span>/lib\"</span></div><div class=\"line\">\t\t<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">\t\tTMPDIR=<span class=\"variable\">$&#123;TMPDIR/%\\/&#125;</span> <span class=\"variable\">$CWD</span>/<span class=\"variable\">$SOURCE</span>/configure \\</div><div class=\"line\">\t\t    --target-os=darwin \\</div><div class=\"line\">\t\t    --arch=<span class=\"variable\">$ARCH</span> \\</div><div class=\"line\">\t\t    --cc=<span class=\"string\">\"<span class=\"variable\">$CC</span>\"</span> \\</div><div class=\"line\">\t\t    <span class=\"variable\">$CONFIGURE_FLAGS</span> \\</div><div class=\"line\">\t\t    --extra-cflags=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span>\"</span> \\</div><div class=\"line\">\t\t    --extra-ldflags=<span class=\"string\">\"<span class=\"variable\">$LDFLAGS</span>\"</span> \\</div><div class=\"line\">\t\t    --prefix=<span class=\"string\">\"<span class=\"variable\">$THIN</span>/<span class=\"variable\">$ARCH</span>\"</span> \\</div><div class=\"line\">\t\t|| <span class=\"built_in\">exit</span> 1</div><div class=\"line\"></div><div class=\"line\">\t\tmake -j3 install <span class=\"variable\">$EXPORT</span> || <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t\t<span class=\"built_in\">cd</span> <span class=\"variable\">$CWD</span></div><div class=\"line\">\t<span class=\"keyword\">done</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$LIPO</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"building fat binaries...\"</span></div><div class=\"line\">\tmkdir -p <span class=\"variable\">$FAT</span>/lib</div><div class=\"line\">\t<span class=\"built_in\">set</span> - <span class=\"variable\">$ARCHS</span></div><div class=\"line\">\tCWD=`<span class=\"built_in\">pwd</span>`</div><div class=\"line\">\t<span class=\"built_in\">cd</span> <span class=\"variable\">$THIN</span>/<span class=\"variable\">$1</span>/lib</div><div class=\"line\">\t<span class=\"keyword\">for</span> LIB <span class=\"keyword\">in</span> *.a</div><div class=\"line\">\t<span class=\"keyword\">do</span></div><div class=\"line\">\t\t<span class=\"built_in\">cd</span> <span class=\"variable\">$CWD</span></div><div class=\"line\">\t\t<span class=\"built_in\">echo</span> lipo -create `find <span class=\"variable\">$THIN</span> -name <span class=\"variable\">$LIB</span>` -output <span class=\"variable\">$FAT</span>/lib/<span class=\"variable\">$LIB</span> 1&gt;&amp;2</div><div class=\"line\">\t\tlipo -create `find <span class=\"variable\">$THIN</span> -name <span class=\"variable\">$LIB</span>` -output <span class=\"variable\">$FAT</span>/lib/<span class=\"variable\">$LIB</span> || <span class=\"built_in\">exit</span> 1</div><div class=\"line\">\t<span class=\"keyword\">done</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">cd</span> <span class=\"variable\">$CWD</span></div><div class=\"line\">\tcp -rf <span class=\"variable\">$THIN</span>/<span class=\"variable\">$1</span>/include <span class=\"variable\">$FAT</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> Done</div></pre></td></tr></table></figure>\n<h4 id=\"三（一）、注意内容1\"><a href=\"#三（一）、注意内容1\" class=\"headerlink\" title=\"三（一）、注意内容1\"></a>三（一）、注意内容1</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># absolute path to x264 library</span></div><div class=\"line\"><span class=\"comment\">#X264=`pwd`/fat-x264</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#FDK_AAC=`pwd`/fdk-aac/fdk-aac-ios</span></div><div class=\"line\"></div><div class=\"line\">CONFIGURE_FLAGS=<span class=\"string\">\"--enable-cross-compile --disable-debug --disable-programs \\</span></div><div class=\"line\">                 --disable-doc --enable-pic\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$X264</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\tCONFIGURE_FLAGS=<span class=\"string\">\"<span class=\"variable\">$CONFIGURE_FLAGS</span> --enable-gpl --enable-libx264\"</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$FDK_AAC</span>\"</span> ]</div><div class=\"line\"><span class=\"keyword\">then</span></div><div class=\"line\">\tCONFIGURE_FLAGS=<span class=\"string\">\"<span class=\"variable\">$CONFIGURE_FLAGS</span> --enable-libfdk-aac\"</span></div><div class=\"line\"><span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># avresample</span></div><div class=\"line\"><span class=\"comment\">#CONFIGURE_FLAGS=\"$CONFIGURE_FLAGS --enable-avresample\"</span></div></pre></td></tr></table></figure>\n<p>要将x264编译进FFmpeg中，需要取消对该句代码的注销 </p>\n<pre><code>X264=`pwd`/fat-x264\n</code></pre><p>即，</p>\n<pre><code>#X264=`pwd`/fat-x264\n</code></pre><p>改为</p>\n<pre><code>X264=`pwd`/fat-x264\n</code></pre><h4 id=\"三（二）、注意内容2\"><a href=\"#三（二）、注意内容2\" class=\"headerlink\" title=\"三（二）、注意内容2\"></a>三（二）、注意内容2</h4><p>经过步骤三（一）的修改后，在Mac终端执行FFmpeg，脚本的时候，可能会存在因为bitcode引起编译出错。</p>\n<p>需要将脚本中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -mios-version-min=<span class=\"variable\">$DEPLOYMENT_TARGET</span> -fembed-bitcode\"</span></div></pre></td></tr></table></figure>\n<p>修改为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -mios-version-min=<span class=\"variable\">$DEPLOYMENT_TARGET</span>\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"四、总结编译x264以及支持x264的FFmpeg的步骤\"><a href=\"#四、总结编译x264以及支持x264的FFmpeg的步骤\" class=\"headerlink\" title=\"四、总结编译x264以及支持x264的FFmpeg的步骤\"></a>四、总结编译x264以及支持x264的FFmpeg的步骤</h3><ol>\n<li>编译得到 x264 静态库</li>\n<li>将存放x264静态库（头文件，库文件）的文件夹名称改为 fat-x264 （因为编译FFmpeg的脚本中定义存放x264文件的文件夹名称为fat-x264，看步骤三（一）中的内容）</li>\n<li>修改编译FFmpeg的脚本build-ffmpeg.sh，具体见步骤 三（一），三（二）</li>\n<li>将编译FFmpeg的脚本build-ffmpeg.sh 与 fat-x264 存放到同一个目录下</li>\n<li>在Mac终端执行脚本build-ffmpeg.sh</li>\n<li>最后x264静态库，支持x264的FFmpeg静态库，内容如下</li>\n</ol>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201510/719115-20151012182722241-1784823013.png\" alt=\"x264静态库\"></p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201510/719115-20151012182739491-661413965.png\" alt=\"FFmpeg静态库\"></p>\n<h3 id=\"五、获取iOS设备摄像头实时视频\"><a href=\"#五、获取iOS设备摄像头实时视频\" class=\"headerlink\" title=\"五、获取iOS设备摄像头实时视频\"></a>五、获取iOS设备摄像头实时视频</h3><h3 id=\"六，采用x264和FFmpeg对iOS实时视频流编码为h264\"><a href=\"#六，采用x264和FFmpeg对iOS实时视频流编码为h264\" class=\"headerlink\" title=\"六，采用x264和FFmpeg对iOS实时视频流编码为h264\"></a>六，采用x264和FFmpeg对iOS实时视频流编码为h264</h3><h3 id=\"七、完整的代码下载地址\"><a href=\"#七、完整的代码下载地址\" class=\"headerlink\" title=\"七、完整的代码下载地址\"></a>七、完整的代码下载地址</h3><p>采用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件的工程的下载地址为：<a href=\"https://github.com/depthlove/FFmpeg-X264-Encode-for-iOS\" target=\"_blank\" rel=\"external\">FFmpeg-X264-Encode-for-iOS\n</a></p>"},{"title":"使用FFmpeg开发iOS播放器（第一部分）","date":"2015-10-08T10:10:53.000Z","_content":"\n### 一、开发需求\n* #### 支持多种流媒体协议（rtsp, rtmp, hls）\n* #### 播放，暂停，拖动\n* #### 录像，截图\n* #### 语音对讲，视频对讲\n* #### 视频上传流媒体服务器\n\n<!-- more -->\n\n### 二、开发准备工作\n* #### 查看流媒体协议知识点\n* #### 理解音视频流的分离与复合\n* #### 编译FFmpeg库\n* #### 通读FFmpeg源码中ffplay.c\n* #### 理解OpengGL ES的渲染流程\n\n### 三、开发执行\n* #### 记录开发过程中的心得\n* #### 完成iOS播放器库(*.a)\n\n","source":"_posts/use-ffmpeg-to-create-a-iOS-player-part1.md","raw":"title: 使用FFmpeg开发iOS播放器（第一部分）\ndate: 2015-10-08 18:10:53\ntags:\n- iOS中高级开发\n- 音视频处理\n---\n\n### 一、开发需求\n* #### 支持多种流媒体协议（rtsp, rtmp, hls）\n* #### 播放，暂停，拖动\n* #### 录像，截图\n* #### 语音对讲，视频对讲\n* #### 视频上传流媒体服务器\n\n<!-- more -->\n\n### 二、开发准备工作\n* #### 查看流媒体协议知识点\n* #### 理解音视频流的分离与复合\n* #### 编译FFmpeg库\n* #### 通读FFmpeg源码中ffplay.c\n* #### 理解OpengGL ES的渲染流程\n\n### 三、开发执行\n* #### 记录开发过程中的心得\n* #### 完成iOS播放器库(*.a)\n\n","slug":"use-ffmpeg-to-create-a-iOS-player-part1","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzuk003kqxep9dvh0ci4","content":"<h3 id=\"一、开发需求\"><a href=\"#一、开发需求\" class=\"headerlink\" title=\"一、开发需求\"></a>一、开发需求</h3><ul>\n<li><h4 id=\"支持多种流媒体协议（rtsp-rtmp-hls）\"><a href=\"#支持多种流媒体协议（rtsp-rtmp-hls）\" class=\"headerlink\" title=\"支持多种流媒体协议（rtsp, rtmp, hls）\"></a>支持多种流媒体协议（rtsp, rtmp, hls）</h4></li>\n<li><h4 id=\"播放，暂停，拖动\"><a href=\"#播放，暂停，拖动\" class=\"headerlink\" title=\"播放，暂停，拖动\"></a>播放，暂停，拖动</h4></li>\n<li><h4 id=\"录像，截图\"><a href=\"#录像，截图\" class=\"headerlink\" title=\"录像，截图\"></a>录像，截图</h4></li>\n<li><h4 id=\"语音对讲，视频对讲\"><a href=\"#语音对讲，视频对讲\" class=\"headerlink\" title=\"语音对讲，视频对讲\"></a>语音对讲，视频对讲</h4></li>\n<li><h4 id=\"视频上传流媒体服务器\"><a href=\"#视频上传流媒体服务器\" class=\"headerlink\" title=\"视频上传流媒体服务器\"></a>视频上传流媒体服务器</h4></li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"二、开发准备工作\"><a href=\"#二、开发准备工作\" class=\"headerlink\" title=\"二、开发准备工作\"></a>二、开发准备工作</h3><ul>\n<li><h4 id=\"查看流媒体协议知识点\"><a href=\"#查看流媒体协议知识点\" class=\"headerlink\" title=\"查看流媒体协议知识点\"></a>查看流媒体协议知识点</h4></li>\n<li><h4 id=\"理解音视频流的分离与复合\"><a href=\"#理解音视频流的分离与复合\" class=\"headerlink\" title=\"理解音视频流的分离与复合\"></a>理解音视频流的分离与复合</h4></li>\n<li><h4 id=\"编译FFmpeg库\"><a href=\"#编译FFmpeg库\" class=\"headerlink\" title=\"编译FFmpeg库\"></a>编译FFmpeg库</h4></li>\n<li><h4 id=\"通读FFmpeg源码中ffplay-c\"><a href=\"#通读FFmpeg源码中ffplay-c\" class=\"headerlink\" title=\"通读FFmpeg源码中ffplay.c\"></a>通读FFmpeg源码中ffplay.c</h4></li>\n<li><h4 id=\"理解OpengGL-ES的渲染流程\"><a href=\"#理解OpengGL-ES的渲染流程\" class=\"headerlink\" title=\"理解OpengGL ES的渲染流程\"></a>理解OpengGL ES的渲染流程</h4></li>\n</ul>\n<h3 id=\"三、开发执行\"><a href=\"#三、开发执行\" class=\"headerlink\" title=\"三、开发执行\"></a>三、开发执行</h3><ul>\n<li><h4 id=\"记录开发过程中的心得\"><a href=\"#记录开发过程中的心得\" class=\"headerlink\" title=\"记录开发过程中的心得\"></a>记录开发过程中的心得</h4></li>\n<li><h4 id=\"完成iOS播放器库-a\"><a href=\"#完成iOS播放器库-a\" class=\"headerlink\" title=\"完成iOS播放器库(*.a)\"></a>完成iOS播放器库(*.a)</h4></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"一、开发需求\"><a href=\"#一、开发需求\" class=\"headerlink\" title=\"一、开发需求\"></a>一、开发需求</h3><ul>\n<li><h4 id=\"支持多种流媒体协议（rtsp-rtmp-hls）\"><a href=\"#支持多种流媒体协议（rtsp-rtmp-hls）\" class=\"headerlink\" title=\"支持多种流媒体协议（rtsp, rtmp, hls）\"></a>支持多种流媒体协议（rtsp, rtmp, hls）</h4></li>\n<li><h4 id=\"播放，暂停，拖动\"><a href=\"#播放，暂停，拖动\" class=\"headerlink\" title=\"播放，暂停，拖动\"></a>播放，暂停，拖动</h4></li>\n<li><h4 id=\"录像，截图\"><a href=\"#录像，截图\" class=\"headerlink\" title=\"录像，截图\"></a>录像，截图</h4></li>\n<li><h4 id=\"语音对讲，视频对讲\"><a href=\"#语音对讲，视频对讲\" class=\"headerlink\" title=\"语音对讲，视频对讲\"></a>语音对讲，视频对讲</h4></li>\n<li><h4 id=\"视频上传流媒体服务器\"><a href=\"#视频上传流媒体服务器\" class=\"headerlink\" title=\"视频上传流媒体服务器\"></a>视频上传流媒体服务器</h4></li>\n</ul>","more":"<h3 id=\"二、开发准备工作\"><a href=\"#二、开发准备工作\" class=\"headerlink\" title=\"二、开发准备工作\"></a>二、开发准备工作</h3><ul>\n<li><h4 id=\"查看流媒体协议知识点\"><a href=\"#查看流媒体协议知识点\" class=\"headerlink\" title=\"查看流媒体协议知识点\"></a>查看流媒体协议知识点</h4></li>\n<li><h4 id=\"理解音视频流的分离与复合\"><a href=\"#理解音视频流的分离与复合\" class=\"headerlink\" title=\"理解音视频流的分离与复合\"></a>理解音视频流的分离与复合</h4></li>\n<li><h4 id=\"编译FFmpeg库\"><a href=\"#编译FFmpeg库\" class=\"headerlink\" title=\"编译FFmpeg库\"></a>编译FFmpeg库</h4></li>\n<li><h4 id=\"通读FFmpeg源码中ffplay-c\"><a href=\"#通读FFmpeg源码中ffplay-c\" class=\"headerlink\" title=\"通读FFmpeg源码中ffplay.c\"></a>通读FFmpeg源码中ffplay.c</h4></li>\n<li><h4 id=\"理解OpengGL-ES的渲染流程\"><a href=\"#理解OpengGL-ES的渲染流程\" class=\"headerlink\" title=\"理解OpengGL ES的渲染流程\"></a>理解OpengGL ES的渲染流程</h4></li>\n</ul>\n<h3 id=\"三、开发执行\"><a href=\"#三、开发执行\" class=\"headerlink\" title=\"三、开发执行\"></a>三、开发执行</h3><ul>\n<li><h4 id=\"记录开发过程中的心得\"><a href=\"#记录开发过程中的心得\" class=\"headerlink\" title=\"记录开发过程中的心得\"></a>记录开发过程中的心得</h4></li>\n<li><h4 id=\"完成iOS播放器库-a\"><a href=\"#完成iOS播放器库-a\" class=\"headerlink\" title=\"完成iOS播放器库(*.a)\"></a>完成iOS播放器库(*.a)</h4></li>\n</ul>"},{"title":"使用 gitment 制作 GitHub 博客的评论系统","date":"2017-08-11T16:31:13.000Z","_content":"\n多说评论系统在2017年6月1日关闭服务后，对于自建博客该使用哪款评论系统我犯愁了。我仔细对比了国内的一些评论系统，发现没有一款能比得上多说。虽然我之前的多说评论在导出时发生了数据错乱以至于数据无法导进新的评论系统，但是我从内心底对维护多说服务的技术人员表示认可。在知道多说即将关闭服务之后，我立即就选用了 Disqus。Disqus 真的很难用，一是需要翻墙，二是可视化界面做的太糟糕。不想在评论系统上大费周折，就将就用到了现在。终于忍无可忍，搜索了些资料发现了基于 GitHub issue 的 [gitment](https://github.com/imsun/gitment) 和 [gitalk](https://github.com/gitalk/gitalk) 两款评论插件。经过比较我选用了 [gitment](https://github.com/imsun/gitment)。\n\n<!-- more -->\n\n[gitment](https://github.com/imsun/gitment) 和 [gitalk](https://github.com/gitalk/gitalk) 这两款评论插件对于如何部署都没有说的很清晰。建议参考\n[gitment readme](https://github.com/imsun/gitment/blob/master/README.md) 和 [Add Gitment Support](https://github.com/iissnan/hexo-theme-next/pull/1634/files)，即可部署成功。\n\n本人博客基于 [github托管平台](https://github.com/) + [hexo博客框架](https://hexo.io) + [next博客主题](https://github.com/iissnan/hexo-theme-next) + [gitment评论插件](https://github.com/imsun/gitment) 资源构建。  \n\n<p align=\"right\">二〇一七年八月十二日，北京</p>\n\n","source":"_posts/use-gitment-as-comment-system.md","raw":"---\ntitle: 使用 gitment 制作 GitHub 博客的评论系统\ndate: 2017-08-12 00:31:13\ntags:\n- 工作\n- hexo\n---\n\n多说评论系统在2017年6月1日关闭服务后，对于自建博客该使用哪款评论系统我犯愁了。我仔细对比了国内的一些评论系统，发现没有一款能比得上多说。虽然我之前的多说评论在导出时发生了数据错乱以至于数据无法导进新的评论系统，但是我从内心底对维护多说服务的技术人员表示认可。在知道多说即将关闭服务之后，我立即就选用了 Disqus。Disqus 真的很难用，一是需要翻墙，二是可视化界面做的太糟糕。不想在评论系统上大费周折，就将就用到了现在。终于忍无可忍，搜索了些资料发现了基于 GitHub issue 的 [gitment](https://github.com/imsun/gitment) 和 [gitalk](https://github.com/gitalk/gitalk) 两款评论插件。经过比较我选用了 [gitment](https://github.com/imsun/gitment)。\n\n<!-- more -->\n\n[gitment](https://github.com/imsun/gitment) 和 [gitalk](https://github.com/gitalk/gitalk) 这两款评论插件对于如何部署都没有说的很清晰。建议参考\n[gitment readme](https://github.com/imsun/gitment/blob/master/README.md) 和 [Add Gitment Support](https://github.com/iissnan/hexo-theme-next/pull/1634/files)，即可部署成功。\n\n本人博客基于 [github托管平台](https://github.com/) + [hexo博客框架](https://hexo.io) + [next博客主题](https://github.com/iissnan/hexo-theme-next) + [gitment评论插件](https://github.com/imsun/gitment) 资源构建。  \n\n<p align=\"right\">二〇一七年八月十二日，北京</p>\n\n","slug":"use-gitment-as-comment-system","published":1,"updated":"2017-08-11T17:39:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzum003mqxepibh994i9","content":"<p>多说评论系统在2017年6月1日关闭服务后，对于自建博客该使用哪款评论系统我犯愁了。我仔细对比了国内的一些评论系统，发现没有一款能比得上多说。虽然我之前的多说评论在导出时发生了数据错乱以至于数据无法导进新的评论系统，但是我从内心底对维护多说服务的技术人员表示认可。在知道多说即将关闭服务之后，我立即就选用了 Disqus。Disqus 真的很难用，一是需要翻墙，二是可视化界面做的太糟糕。不想在评论系统上大费周折，就将就用到了现在。终于忍无可忍，搜索了些资料发现了基于 GitHub issue 的 <a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"external\">gitment</a> 和 <a href=\"https://github.com/gitalk/gitalk\" target=\"_blank\" rel=\"external\">gitalk</a> 两款评论插件。经过比较我选用了 <a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"external\">gitment</a>。</p>\n<a id=\"more\"></a>\n<p><a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"external\">gitment</a> 和 <a href=\"https://github.com/gitalk/gitalk\" target=\"_blank\" rel=\"external\">gitalk</a> 这两款评论插件对于如何部署都没有说的很清晰。建议参考<br><a href=\"https://github.com/imsun/gitment/blob/master/README.md\" target=\"_blank\" rel=\"external\">gitment readme</a> 和 <a href=\"https://github.com/iissnan/hexo-theme-next/pull/1634/files\" target=\"_blank\" rel=\"external\">Add Gitment Support</a>，即可部署成功。</p>\n<p>本人博客基于 <a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">github托管平台</a> + <a href=\"https://hexo.io\" target=\"_blank\" rel=\"external\">hexo博客框架</a> + <a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"external\">next博客主题</a> + <a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"external\">gitment评论插件</a> 资源构建。  </p>\n<p align=\"right\">二〇一七年八月十二日，北京</p>\n\n","site":{"data":{}},"excerpt":"<p>多说评论系统在2017年6月1日关闭服务后，对于自建博客该使用哪款评论系统我犯愁了。我仔细对比了国内的一些评论系统，发现没有一款能比得上多说。虽然我之前的多说评论在导出时发生了数据错乱以至于数据无法导进新的评论系统，但是我从内心底对维护多说服务的技术人员表示认可。在知道多说即将关闭服务之后，我立即就选用了 Disqus。Disqus 真的很难用，一是需要翻墙，二是可视化界面做的太糟糕。不想在评论系统上大费周折，就将就用到了现在。终于忍无可忍，搜索了些资料发现了基于 GitHub issue 的 <a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"external\">gitment</a> 和 <a href=\"https://github.com/gitalk/gitalk\" target=\"_blank\" rel=\"external\">gitalk</a> 两款评论插件。经过比较我选用了 <a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"external\">gitment</a>。</p>","more":"<p><a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"external\">gitment</a> 和 <a href=\"https://github.com/gitalk/gitalk\" target=\"_blank\" rel=\"external\">gitalk</a> 这两款评论插件对于如何部署都没有说的很清晰。建议参考<br><a href=\"https://github.com/imsun/gitment/blob/master/README.md\" target=\"_blank\" rel=\"external\">gitment readme</a> 和 <a href=\"https://github.com/iissnan/hexo-theme-next/pull/1634/files\" target=\"_blank\" rel=\"external\">Add Gitment Support</a>，即可部署成功。</p>\n<p>本人博客基于 <a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">github托管平台</a> + <a href=\"https://hexo.io\" target=\"_blank\" rel=\"external\">hexo博客框架</a> + <a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"external\">next博客主题</a> + <a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"external\">gitment评论插件</a> 资源构建。  </p>\n<p align=\"right\">二〇一七年八月十二日，北京</p>"},{"title":"Mac搭建hexo博客","date":"2015-06-12T08:16:31.000Z","_content":"\n## 一、安装git\n\n#### 启动Mac终端，在终端执行命令\n\n\truby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n\tbrew install git\n\n## 二、安装Node.js\n\n#### nvm (Node Version Manager)，详见官方介绍：https://github.com/creationix/nvm#node-version-manager\n\n<!-- more -->\n\n在终端执行命令\n\n\tgit clone git://github.com/creationix/nvm.git ~/.nvm\n\n\tcd /Users/dev.temobi/.nvm  （备注：/Users/dev.temobi/.nvm 是执行上一条命令的结果显示.nvm所在的路径）\n\n\tsh install.sh\n\t\n#### 补充说明：对于Mac系统而言，可以跳过步骤一、步骤二，直接去node.js官网[https://nodejs.org/en/#download](https://nodejs.org/en/#download)下载软件，然后安装到Mac电脑上，node.js 就成功安装到了电脑上了，采用这种方法更简单，更直接。\n\n\n## 三、安装hexo\n\n在终端执行命令\n\t\n\tnpm install -g hexo\n\n#### 创建文件夹，根据自己实际情况，文件夹名可以任取，文件夹的路径可以选择你想放文件夹的路径。\n我创建的文件夹为 ZZ_HexoBlog，路径为 /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog\n\n进入文件夹ZZ_HexoBlog所在路径，在终端执行命令\n\n\tcd /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog\n\n继续执行命令\n\n\thexo init\n\n\tnpm install\n\n现在已经搭建起本地的hexo博客了。\n\n执行命令\n\n\thexo generate\n\n\thexo server\n\n然后到浏览器输入 http://0.0.0.0:4000/ 就可以预览博客了\n\n## 四、部署hexo博客到github\n\n#### 在自己的github账号中创建Repository\n\nRepository name需要符合username.github.io的命名规则。比如我的Github账号是depthlove，我就要创建名为depthlove.github.io 的仓库。\n\n#### 获取自己的Repository地址\n\n我的为 https://github.com/depthlove/depthlove.github.io.git\n\n#### 修改_config.yml文件\n\n在终端上执行命令 \n\n\tvim _config.yml\n\n找到 \n\n\tdeploy:\n\t  type:\n\n修改为：\n\n\tdeploy:\n   \t  type: git\n   \t  repo: https://github.com/depthlove/depthlove.github.io.git\n\t  branch: master\n\n保存退出\n\n在终端执行命令 ls -al ~/.ssh，查看是否已经有SSH keys，如果之前在该电脑上使用过git管理过代码，结果是~/.ssh中会存在 id_rsa id_rsa.pub known_hosts 三个文件\n\n在终端继续执行命令 \n\n\tls -al ~/.ssh\n\n若之前没有使用过git，该目录就是空的。有用过git管理项目结果如下\n\n\ttotal 32\n\tdrwx------   5 dev.temobi  staff   170  6  8 17:00 .\n\tdrwxr-xr-x+ 69 dev.temobi  staff  2346  6 12 13:47 ..\n\t-rw-------   1 dev.temobi  staff  1675  6  8 16:46 id_rsa\n\t-rw-r--r--@  1 dev.temobi  staff   399  6  8 17:04 id_rsa.pub\n\t-rw-r--r--   1 dev.temobi  staff  1593  6  8 18:27 known_hosts\n\n执行命令 \n\t\n\tssh-keygen -t rsa -C \"depthlove@163.com\"  \n\ndepthlove@163.com 是注册github账号时所用的邮箱\n\n\n执行上面的命令后，会出现一些提示，什么都不用管，直接回车，再回车\n\n继续输入命令\n\n\tssh-agent -s\n\n结果为\n\n\tSSH_AUTH_SOCK=/var/folders/0r/y1__8yjx579743zfttfrflsr0000gq/T//ssh-a9zU09oKAnpw/agent.17852;\n\texport SSH_AUTH_SOCK;\n\tSSH_AGENT_PID=17853; export SSH_AGENT_PID;\n\techo Agent pid 17853;\n\n继续输入命令 \n\n\tssh-add ~/.ssh/id_rsa\n\n结果为\n\n\tIdentity added: /Users/dev.temobi/.ssh/id_rsa (/Users/dev.temobi/.ssh/id_rsa)\n\n如果执行ssh-add ~/.ssh/id_rsa 出错，就输入以下指令：\n\n\teval `ssh-agent -s`\n\n\tssh-add\n\n现在就成功生成了 SSH keys。\n\n#### 把SSH keys添加到github账户中。\n\n\n前往文件夹 ~/.ssh，用文本编辑器打开文件id_rsa.pub，复制其中的内容，然后粘贴到github add SSH keys的文本框中。操作完之后，github会要求输入github的登陆密码，输入完密码就成功添加了 SSH keys。\n\n若还不放心，还可以通过 ssh -T git@github.com 命令查看SSH keys是否添加成功，继续在终端执行命令\n\t\n\tssh -T git@github.com\n\n结果如下\n\n\tAre you sure you want to continue connecting (yes/no)?yes // 输入yes\n\tWarning: Permanently added the RSA host key for IP address '192.xx.xxx.xxx’ to the list of known hosts.\n\tHi depthlove! You've successfully authenticated, but GitHub does not provide shell access.\n\n到这里准备工作都已做好，现在就是部署了。\n\n继续在终端执行命令\n\t\n\thexo generate\n\t\n\thexo deploy\n\n结果出现错误\n\n\tERROR Deployer not found: git\n\n此时，就要检查为什么出现这种错误了，解决方法是上网百度寻求解决方案，还有一种就是靠自己的经验了。我发现在我修改文件_config.yml的时候发现\n\n\t# Deployment\n\t## Docs: http://hexo.io/docs/deployment.html\n\tdeploy:\n  \ttype:\n  \t\n发现有个word文档说明，而且我在执行hexo deploy出错，说明解决方法肯定在word链接中，结果是答案真的就在这里面。\n\n在浏览器中输入 http://hexo.io/docs/deployment.html\n\n然后按照网页上的文档说明，继续在终端上执行命令\n\n\tnpm install hexo-deployer-git --save\n\n最后在终端上执行命令 \n\t\n\thexo deploy\n\nOK，成功了！结果如下\n\n\tINFO  Deploying: git\n\tINFO  Setting up Git deployment...\n\t初始化空的 Git 版本库于 /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog/.deploy_git/.git/\n\t[master（根提交） e8f14ef] First commit\n\t Committer: dev.temobi <dev.temobi@devtemobideMac-mini.local>\n\t您的姓名和邮件地址基于登录名和主机名进行了自动设置。请检查它们正确\n\t与否。您可以通过下面的命令对其进行明确地设置以免再出现本提示信息：\n\n    git config --global user.name \"Your Name\"\n    git config --global user.email you@example.com\n\n\t设置完毕后，您可以用下面的命令来修正本次提交所使用的用户身份：\n\n    git commit --amend --reset-author\n\t……\n\t……\n\t……\n\tcreate mode 100644 index.html\n\tcreate mode 100644 js/script.js\n\tdelete mode 100644 placeholder\n\tUsername for 'https://github.com': depthlove  // 输入自己的github用户名\n\tPassword for 'https://depthlove@github.com':  // 输入自己的github密码\n\tTo https://github.com/depthlove/depthlove.github.io.git\n \t+ f0b2e27...cd56463 master -> master (forced update)\n\t分支 master 设置为跟踪来自 https://github.com/depthlove/depthlove.github.io.git 的远程分支 master。\n\tINFO  Deploy done: git\n\n现在，就可以在浏览器中输入 http://depthlove.github.io ，访问我的hexo博客了\n\n\n`注意：每次修改本地文件后，都要在hexo博客所在的目录下，执行命令 hexo generate 保存；想要上传文件到Github时，就应该在hexo博客所在的目录下先执行命令 hexo generate 保存之后，再执行命令 hexo deploy`\n\n#### 补充\n\nhexo现在支持更加简单的命令格式了，比如：\n\nhexo g == hexo generate\n\nhexo d == hexo deploy\n\nhexo s == hexo server\n\nhexo n == hexo new\n\n\n\n\n","source":"_posts/use-hexo-create-blog-in-mac.md","raw":"title: Mac搭建hexo博客\ndate: 2015-06-12 16:16:31\ntags: hexo\n---\n\n## 一、安装git\n\n#### 启动Mac终端，在终端执行命令\n\n\truby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n\tbrew install git\n\n## 二、安装Node.js\n\n#### nvm (Node Version Manager)，详见官方介绍：https://github.com/creationix/nvm#node-version-manager\n\n<!-- more -->\n\n在终端执行命令\n\n\tgit clone git://github.com/creationix/nvm.git ~/.nvm\n\n\tcd /Users/dev.temobi/.nvm  （备注：/Users/dev.temobi/.nvm 是执行上一条命令的结果显示.nvm所在的路径）\n\n\tsh install.sh\n\t\n#### 补充说明：对于Mac系统而言，可以跳过步骤一、步骤二，直接去node.js官网[https://nodejs.org/en/#download](https://nodejs.org/en/#download)下载软件，然后安装到Mac电脑上，node.js 就成功安装到了电脑上了，采用这种方法更简单，更直接。\n\n\n## 三、安装hexo\n\n在终端执行命令\n\t\n\tnpm install -g hexo\n\n#### 创建文件夹，根据自己实际情况，文件夹名可以任取，文件夹的路径可以选择你想放文件夹的路径。\n我创建的文件夹为 ZZ_HexoBlog，路径为 /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog\n\n进入文件夹ZZ_HexoBlog所在路径，在终端执行命令\n\n\tcd /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog\n\n继续执行命令\n\n\thexo init\n\n\tnpm install\n\n现在已经搭建起本地的hexo博客了。\n\n执行命令\n\n\thexo generate\n\n\thexo server\n\n然后到浏览器输入 http://0.0.0.0:4000/ 就可以预览博客了\n\n## 四、部署hexo博客到github\n\n#### 在自己的github账号中创建Repository\n\nRepository name需要符合username.github.io的命名规则。比如我的Github账号是depthlove，我就要创建名为depthlove.github.io 的仓库。\n\n#### 获取自己的Repository地址\n\n我的为 https://github.com/depthlove/depthlove.github.io.git\n\n#### 修改_config.yml文件\n\n在终端上执行命令 \n\n\tvim _config.yml\n\n找到 \n\n\tdeploy:\n\t  type:\n\n修改为：\n\n\tdeploy:\n   \t  type: git\n   \t  repo: https://github.com/depthlove/depthlove.github.io.git\n\t  branch: master\n\n保存退出\n\n在终端执行命令 ls -al ~/.ssh，查看是否已经有SSH keys，如果之前在该电脑上使用过git管理过代码，结果是~/.ssh中会存在 id_rsa id_rsa.pub known_hosts 三个文件\n\n在终端继续执行命令 \n\n\tls -al ~/.ssh\n\n若之前没有使用过git，该目录就是空的。有用过git管理项目结果如下\n\n\ttotal 32\n\tdrwx------   5 dev.temobi  staff   170  6  8 17:00 .\n\tdrwxr-xr-x+ 69 dev.temobi  staff  2346  6 12 13:47 ..\n\t-rw-------   1 dev.temobi  staff  1675  6  8 16:46 id_rsa\n\t-rw-r--r--@  1 dev.temobi  staff   399  6  8 17:04 id_rsa.pub\n\t-rw-r--r--   1 dev.temobi  staff  1593  6  8 18:27 known_hosts\n\n执行命令 \n\t\n\tssh-keygen -t rsa -C \"depthlove@163.com\"  \n\ndepthlove@163.com 是注册github账号时所用的邮箱\n\n\n执行上面的命令后，会出现一些提示，什么都不用管，直接回车，再回车\n\n继续输入命令\n\n\tssh-agent -s\n\n结果为\n\n\tSSH_AUTH_SOCK=/var/folders/0r/y1__8yjx579743zfttfrflsr0000gq/T//ssh-a9zU09oKAnpw/agent.17852;\n\texport SSH_AUTH_SOCK;\n\tSSH_AGENT_PID=17853; export SSH_AGENT_PID;\n\techo Agent pid 17853;\n\n继续输入命令 \n\n\tssh-add ~/.ssh/id_rsa\n\n结果为\n\n\tIdentity added: /Users/dev.temobi/.ssh/id_rsa (/Users/dev.temobi/.ssh/id_rsa)\n\n如果执行ssh-add ~/.ssh/id_rsa 出错，就输入以下指令：\n\n\teval `ssh-agent -s`\n\n\tssh-add\n\n现在就成功生成了 SSH keys。\n\n#### 把SSH keys添加到github账户中。\n\n\n前往文件夹 ~/.ssh，用文本编辑器打开文件id_rsa.pub，复制其中的内容，然后粘贴到github add SSH keys的文本框中。操作完之后，github会要求输入github的登陆密码，输入完密码就成功添加了 SSH keys。\n\n若还不放心，还可以通过 ssh -T git@github.com 命令查看SSH keys是否添加成功，继续在终端执行命令\n\t\n\tssh -T git@github.com\n\n结果如下\n\n\tAre you sure you want to continue connecting (yes/no)?yes // 输入yes\n\tWarning: Permanently added the RSA host key for IP address '192.xx.xxx.xxx’ to the list of known hosts.\n\tHi depthlove! You've successfully authenticated, but GitHub does not provide shell access.\n\n到这里准备工作都已做好，现在就是部署了。\n\n继续在终端执行命令\n\t\n\thexo generate\n\t\n\thexo deploy\n\n结果出现错误\n\n\tERROR Deployer not found: git\n\n此时，就要检查为什么出现这种错误了，解决方法是上网百度寻求解决方案，还有一种就是靠自己的经验了。我发现在我修改文件_config.yml的时候发现\n\n\t# Deployment\n\t## Docs: http://hexo.io/docs/deployment.html\n\tdeploy:\n  \ttype:\n  \t\n发现有个word文档说明，而且我在执行hexo deploy出错，说明解决方法肯定在word链接中，结果是答案真的就在这里面。\n\n在浏览器中输入 http://hexo.io/docs/deployment.html\n\n然后按照网页上的文档说明，继续在终端上执行命令\n\n\tnpm install hexo-deployer-git --save\n\n最后在终端上执行命令 \n\t\n\thexo deploy\n\nOK，成功了！结果如下\n\n\tINFO  Deploying: git\n\tINFO  Setting up Git deployment...\n\t初始化空的 Git 版本库于 /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog/.deploy_git/.git/\n\t[master（根提交） e8f14ef] First commit\n\t Committer: dev.temobi <dev.temobi@devtemobideMac-mini.local>\n\t您的姓名和邮件地址基于登录名和主机名进行了自动设置。请检查它们正确\n\t与否。您可以通过下面的命令对其进行明确地设置以免再出现本提示信息：\n\n    git config --global user.name \"Your Name\"\n    git config --global user.email you@example.com\n\n\t设置完毕后，您可以用下面的命令来修正本次提交所使用的用户身份：\n\n    git commit --amend --reset-author\n\t……\n\t……\n\t……\n\tcreate mode 100644 index.html\n\tcreate mode 100644 js/script.js\n\tdelete mode 100644 placeholder\n\tUsername for 'https://github.com': depthlove  // 输入自己的github用户名\n\tPassword for 'https://depthlove@github.com':  // 输入自己的github密码\n\tTo https://github.com/depthlove/depthlove.github.io.git\n \t+ f0b2e27...cd56463 master -> master (forced update)\n\t分支 master 设置为跟踪来自 https://github.com/depthlove/depthlove.github.io.git 的远程分支 master。\n\tINFO  Deploy done: git\n\n现在，就可以在浏览器中输入 http://depthlove.github.io ，访问我的hexo博客了\n\n\n`注意：每次修改本地文件后，都要在hexo博客所在的目录下，执行命令 hexo generate 保存；想要上传文件到Github时，就应该在hexo博客所在的目录下先执行命令 hexo generate 保存之后，再执行命令 hexo deploy`\n\n#### 补充\n\nhexo现在支持更加简单的命令格式了，比如：\n\nhexo g == hexo generate\n\nhexo d == hexo deploy\n\nhexo s == hexo server\n\nhexo n == hexo new\n\n\n\n\n","slug":"use-hexo-create-blog-in-mac","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzuq003oqxephm2hj68t","content":"<h2 id=\"一、安装git\"><a href=\"#一、安装git\" class=\"headerlink\" title=\"一、安装git\"></a>一、安装git</h2><h4 id=\"启动Mac终端，在终端执行命令\"><a href=\"#启动Mac终端，在终端执行命令\" class=\"headerlink\" title=\"启动Mac终端，在终端执行命令\"></a>启动Mac终端，在终端执行命令</h4><pre><code>ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;\n\nbrew install git\n</code></pre><h2 id=\"二、安装Node-js\"><a href=\"#二、安装Node-js\" class=\"headerlink\" title=\"二、安装Node.js\"></a>二、安装Node.js</h2><h4 id=\"nvm-Node-Version-Manager-，详见官方介绍：https-github-com-creationix-nvm-node-version-manager\"><a href=\"#nvm-Node-Version-Manager-，详见官方介绍：https-github-com-creationix-nvm-node-version-manager\" class=\"headerlink\" title=\"nvm (Node Version Manager)，详见官方介绍：https://github.com/creationix/nvm#node-version-manager\"></a>nvm (Node Version Manager)，详见官方介绍：<a href=\"https://github.com/creationix/nvm#node-version-manager\" target=\"_blank\" rel=\"external\">https://github.com/creationix/nvm#node-version-manager</a></h4><a id=\"more\"></a>\n<p>在终端执行命令</p>\n<pre><code>git clone git://github.com/creationix/nvm.git ~/.nvm\n\ncd /Users/dev.temobi/.nvm  （备注：/Users/dev.temobi/.nvm 是执行上一条命令的结果显示.nvm所在的路径）\n\nsh install.sh\n</code></pre><h4 id=\"补充说明：对于Mac系统而言，可以跳过步骤一、步骤二，直接去node-js官网https-nodejs-org-en-download下载软件，然后安装到Mac电脑上，node-js-就成功安装到了电脑上了，采用这种方法更简单，更直接。\"><a href=\"#补充说明：对于Mac系统而言，可以跳过步骤一、步骤二，直接去node-js官网https-nodejs-org-en-download下载软件，然后安装到Mac电脑上，node-js-就成功安装到了电脑上了，采用这种方法更简单，更直接。\" class=\"headerlink\" title=\"补充说明：对于Mac系统而言，可以跳过步骤一、步骤二，直接去node.js官网https://nodejs.org/en/#download下载软件，然后安装到Mac电脑上，node.js 就成功安装到了电脑上了，采用这种方法更简单，更直接。\"></a>补充说明：对于Mac系统而言，可以跳过步骤一、步骤二，直接去node.js官网<a href=\"https://nodejs.org/en/#download\" target=\"_blank\" rel=\"external\">https://nodejs.org/en/#download</a>下载软件，然后安装到Mac电脑上，node.js 就成功安装到了电脑上了，采用这种方法更简单，更直接。</h4><h2 id=\"三、安装hexo\"><a href=\"#三、安装hexo\" class=\"headerlink\" title=\"三、安装hexo\"></a>三、安装hexo</h2><p>在终端执行命令</p>\n<pre><code>npm install -g hexo\n</code></pre><h4 id=\"创建文件夹，根据自己实际情况，文件夹名可以任取，文件夹的路径可以选择你想放文件夹的路径。\"><a href=\"#创建文件夹，根据自己实际情况，文件夹名可以任取，文件夹的路径可以选择你想放文件夹的路径。\" class=\"headerlink\" title=\"创建文件夹，根据自己实际情况，文件夹名可以任取，文件夹的路径可以选择你想放文件夹的路径。\"></a>创建文件夹，根据自己实际情况，文件夹名可以任取，文件夹的路径可以选择你想放文件夹的路径。</h4><p>我创建的文件夹为 ZZ_HexoBlog，路径为 /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog</p>\n<p>进入文件夹ZZ_HexoBlog所在路径，在终端执行命令</p>\n<pre><code>cd /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog\n</code></pre><p>继续执行命令</p>\n<pre><code>hexo init\n\nnpm install\n</code></pre><p>现在已经搭建起本地的hexo博客了。</p>\n<p>执行命令</p>\n<pre><code>hexo generate\n\nhexo server\n</code></pre><p>然后到浏览器输入 <a href=\"http://0.0.0.0:4000/\" target=\"_blank\" rel=\"external\">http://0.0.0.0:4000/</a> 就可以预览博客了</p>\n<h2 id=\"四、部署hexo博客到github\"><a href=\"#四、部署hexo博客到github\" class=\"headerlink\" title=\"四、部署hexo博客到github\"></a>四、部署hexo博客到github</h2><h4 id=\"在自己的github账号中创建Repository\"><a href=\"#在自己的github账号中创建Repository\" class=\"headerlink\" title=\"在自己的github账号中创建Repository\"></a>在自己的github账号中创建Repository</h4><p>Repository name需要符合username.github.io的命名规则。比如我的Github账号是depthlove，我就要创建名为depthlove.github.io 的仓库。</p>\n<h4 id=\"获取自己的Repository地址\"><a href=\"#获取自己的Repository地址\" class=\"headerlink\" title=\"获取自己的Repository地址\"></a>获取自己的Repository地址</h4><p>我的为 <a href=\"https://github.com/depthlove/depthlove.github.io.git\" target=\"_blank\" rel=\"external\">https://github.com/depthlove/depthlove.github.io.git</a></p>\n<h4 id=\"修改-config-yml文件\"><a href=\"#修改-config-yml文件\" class=\"headerlink\" title=\"修改_config.yml文件\"></a>修改_config.yml文件</h4><p>在终端上执行命令 </p>\n<pre><code>vim _config.yml\n</code></pre><p>找到 </p>\n<pre><code>deploy:\n  type:\n</code></pre><p>修改为：</p>\n<pre><code>deploy:\n     type: git\n     repo: https://github.com/depthlove/depthlove.github.io.git\n  branch: master\n</code></pre><p>保存退出</p>\n<p>在终端执行命令 ls -al ~/.ssh，查看是否已经有SSH keys，如果之前在该电脑上使用过git管理过代码，结果是~/.ssh中会存在 id_rsa id_rsa.pub known_hosts 三个文件</p>\n<p>在终端继续执行命令 </p>\n<pre><code>ls -al ~/.ssh\n</code></pre><p>若之前没有使用过git，该目录就是空的。有用过git管理项目结果如下</p>\n<pre><code>total 32\ndrwx------   5 dev.temobi  staff   170  6  8 17:00 .\ndrwxr-xr-x+ 69 dev.temobi  staff  2346  6 12 13:47 ..\n-rw-------   1 dev.temobi  staff  1675  6  8 16:46 id_rsa\n-rw-r--r--@  1 dev.temobi  staff   399  6  8 17:04 id_rsa.pub\n-rw-r--r--   1 dev.temobi  staff  1593  6  8 18:27 known_hosts\n</code></pre><p>执行命令 </p>\n<pre><code>ssh-keygen -t rsa -C &quot;depthlove@163.com&quot;  \n</code></pre><p>depthlove@163.com 是注册github账号时所用的邮箱</p>\n<p>执行上面的命令后，会出现一些提示，什么都不用管，直接回车，再回车</p>\n<p>继续输入命令</p>\n<pre><code>ssh-agent -s\n</code></pre><p>结果为</p>\n<pre><code>SSH_AUTH_SOCK=/var/folders/0r/y1__8yjx579743zfttfrflsr0000gq/T//ssh-a9zU09oKAnpw/agent.17852;\nexport SSH_AUTH_SOCK;\nSSH_AGENT_PID=17853; export SSH_AGENT_PID;\necho Agent pid 17853;\n</code></pre><p>继续输入命令 </p>\n<pre><code>ssh-add ~/.ssh/id_rsa\n</code></pre><p>结果为</p>\n<pre><code>Identity added: /Users/dev.temobi/.ssh/id_rsa (/Users/dev.temobi/.ssh/id_rsa)\n</code></pre><p>如果执行ssh-add ~/.ssh/id_rsa 出错，就输入以下指令：</p>\n<pre><code>eval `ssh-agent -s`\n\nssh-add\n</code></pre><p>现在就成功生成了 SSH keys。</p>\n<h4 id=\"把SSH-keys添加到github账户中。\"><a href=\"#把SSH-keys添加到github账户中。\" class=\"headerlink\" title=\"把SSH keys添加到github账户中。\"></a>把SSH keys添加到github账户中。</h4><p>前往文件夹 ~/.ssh，用文本编辑器打开文件id_rsa.pub，复制其中的内容，然后粘贴到github add SSH keys的文本框中。操作完之后，github会要求输入github的登陆密码，输入完密码就成功添加了 SSH keys。</p>\n<p>若还不放心，还可以通过 ssh -T git@github.com 命令查看SSH keys是否添加成功，继续在终端执行命令</p>\n<pre><code>ssh -T git@github.com\n</code></pre><p>结果如下</p>\n<pre><code>Are you sure you want to continue connecting (yes/no)?yes // 输入yes\nWarning: Permanently added the RSA host key for IP address &apos;192.xx.xxx.xxx’ to the list of known hosts.\nHi depthlove! You&apos;ve successfully authenticated, but GitHub does not provide shell access.\n</code></pre><p>到这里准备工作都已做好，现在就是部署了。</p>\n<p>继续在终端执行命令</p>\n<pre><code>hexo generate\n\nhexo deploy\n</code></pre><p>结果出现错误</p>\n<pre><code>ERROR Deployer not found: git\n</code></pre><p>此时，就要检查为什么出现这种错误了，解决方法是上网百度寻求解决方案，还有一种就是靠自己的经验了。我发现在我修改文件_config.yml的时候发现</p>\n<pre><code># Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type:\n</code></pre><p>发现有个word文档说明，而且我在执行hexo deploy出错，说明解决方法肯定在word链接中，结果是答案真的就在这里面。</p>\n<p>在浏览器中输入 <a href=\"http://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">http://hexo.io/docs/deployment.html</a></p>\n<p>然后按照网页上的文档说明，继续在终端上执行命令</p>\n<pre><code>npm install hexo-deployer-git --save\n</code></pre><p>最后在终端上执行命令 </p>\n<pre><code>hexo deploy\n</code></pre><p>OK，成功了！结果如下</p>\n<pre><code>INFO  Deploying: git\nINFO  Setting up Git deployment...\n初始化空的 Git 版本库于 /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog/.deploy_git/.git/\n[master（根提交） e8f14ef] First commit\n Committer: dev.temobi &lt;dev.temobi@devtemobideMac-mini.local&gt;\n您的姓名和邮件地址基于登录名和主机名进行了自动设置。请检查它们正确\n与否。您可以通过下面的命令对其进行明确地设置以免再出现本提示信息：\n\ngit config --global user.name &quot;Your Name&quot;\ngit config --global user.email you@example.com\n\n设置完毕后，您可以用下面的命令来修正本次提交所使用的用户身份：\n\ngit commit --amend --reset-author\n……\n……\n……\ncreate mode 100644 index.html\ncreate mode 100644 js/script.js\ndelete mode 100644 placeholder\nUsername for &apos;https://github.com&apos;: depthlove  // 输入自己的github用户名\nPassword for &apos;https://depthlove@github.com&apos;:  // 输入自己的github密码\nTo https://github.com/depthlove/depthlove.github.io.git\n + f0b2e27...cd56463 master -&gt; master (forced update)\n分支 master 设置为跟踪来自 https://github.com/depthlove/depthlove.github.io.git 的远程分支 master。\nINFO  Deploy done: git\n</code></pre><p>现在，就可以在浏览器中输入 <a href=\"http://depthlove.github.io\">http://depthlove.github.io</a> ，访问我的hexo博客了</p>\n<p><code>注意：每次修改本地文件后，都要在hexo博客所在的目录下，执行命令 hexo generate 保存；想要上传文件到Github时，就应该在hexo博客所在的目录下先执行命令 hexo generate 保存之后，再执行命令 hexo deploy</code></p>\n<h4 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h4><p>hexo现在支持更加简单的命令格式了，比如：</p>\n<p>hexo g == hexo generate</p>\n<p>hexo d == hexo deploy</p>\n<p>hexo s == hexo server</p>\n<p>hexo n == hexo new</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"一、安装git\"><a href=\"#一、安装git\" class=\"headerlink\" title=\"一、安装git\"></a>一、安装git</h2><h4 id=\"启动Mac终端，在终端执行命令\"><a href=\"#启动Mac终端，在终端执行命令\" class=\"headerlink\" title=\"启动Mac终端，在终端执行命令\"></a>启动Mac终端，在终端执行命令</h4><pre><code>ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;\n\nbrew install git\n</code></pre><h2 id=\"二、安装Node-js\"><a href=\"#二、安装Node-js\" class=\"headerlink\" title=\"二、安装Node.js\"></a>二、安装Node.js</h2><h4 id=\"nvm-Node-Version-Manager-，详见官方介绍：https-github-com-creationix-nvm-node-version-manager\"><a href=\"#nvm-Node-Version-Manager-，详见官方介绍：https-github-com-creationix-nvm-node-version-manager\" class=\"headerlink\" title=\"nvm (Node Version Manager)，详见官方介绍：https://github.com/creationix/nvm#node-version-manager\"></a>nvm (Node Version Manager)，详见官方介绍：<a href=\"https://github.com/creationix/nvm#node-version-manager\" target=\"_blank\" rel=\"external\">https://github.com/creationix/nvm#node-version-manager</a></h4>","more":"<p>在终端执行命令</p>\n<pre><code>git clone git://github.com/creationix/nvm.git ~/.nvm\n\ncd /Users/dev.temobi/.nvm  （备注：/Users/dev.temobi/.nvm 是执行上一条命令的结果显示.nvm所在的路径）\n\nsh install.sh\n</code></pre><h4 id=\"补充说明：对于Mac系统而言，可以跳过步骤一、步骤二，直接去node-js官网https-nodejs-org-en-download下载软件，然后安装到Mac电脑上，node-js-就成功安装到了电脑上了，采用这种方法更简单，更直接。\"><a href=\"#补充说明：对于Mac系统而言，可以跳过步骤一、步骤二，直接去node-js官网https-nodejs-org-en-download下载软件，然后安装到Mac电脑上，node-js-就成功安装到了电脑上了，采用这种方法更简单，更直接。\" class=\"headerlink\" title=\"补充说明：对于Mac系统而言，可以跳过步骤一、步骤二，直接去node.js官网https://nodejs.org/en/#download下载软件，然后安装到Mac电脑上，node.js 就成功安装到了电脑上了，采用这种方法更简单，更直接。\"></a>补充说明：对于Mac系统而言，可以跳过步骤一、步骤二，直接去node.js官网<a href=\"https://nodejs.org/en/#download\" target=\"_blank\" rel=\"external\">https://nodejs.org/en/#download</a>下载软件，然后安装到Mac电脑上，node.js 就成功安装到了电脑上了，采用这种方法更简单，更直接。</h4><h2 id=\"三、安装hexo\"><a href=\"#三、安装hexo\" class=\"headerlink\" title=\"三、安装hexo\"></a>三、安装hexo</h2><p>在终端执行命令</p>\n<pre><code>npm install -g hexo\n</code></pre><h4 id=\"创建文件夹，根据自己实际情况，文件夹名可以任取，文件夹的路径可以选择你想放文件夹的路径。\"><a href=\"#创建文件夹，根据自己实际情况，文件夹名可以任取，文件夹的路径可以选择你想放文件夹的路径。\" class=\"headerlink\" title=\"创建文件夹，根据自己实际情况，文件夹名可以任取，文件夹的路径可以选择你想放文件夹的路径。\"></a>创建文件夹，根据自己实际情况，文件夹名可以任取，文件夹的路径可以选择你想放文件夹的路径。</h4><p>我创建的文件夹为 ZZ_HexoBlog，路径为 /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog</p>\n<p>进入文件夹ZZ_HexoBlog所在路径，在终端执行命令</p>\n<pre><code>cd /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog\n</code></pre><p>继续执行命令</p>\n<pre><code>hexo init\n\nnpm install\n</code></pre><p>现在已经搭建起本地的hexo博客了。</p>\n<p>执行命令</p>\n<pre><code>hexo generate\n\nhexo server\n</code></pre><p>然后到浏览器输入 <a href=\"http://0.0.0.0:4000/\" target=\"_blank\" rel=\"external\">http://0.0.0.0:4000/</a> 就可以预览博客了</p>\n<h2 id=\"四、部署hexo博客到github\"><a href=\"#四、部署hexo博客到github\" class=\"headerlink\" title=\"四、部署hexo博客到github\"></a>四、部署hexo博客到github</h2><h4 id=\"在自己的github账号中创建Repository\"><a href=\"#在自己的github账号中创建Repository\" class=\"headerlink\" title=\"在自己的github账号中创建Repository\"></a>在自己的github账号中创建Repository</h4><p>Repository name需要符合username.github.io的命名规则。比如我的Github账号是depthlove，我就要创建名为depthlove.github.io 的仓库。</p>\n<h4 id=\"获取自己的Repository地址\"><a href=\"#获取自己的Repository地址\" class=\"headerlink\" title=\"获取自己的Repository地址\"></a>获取自己的Repository地址</h4><p>我的为 <a href=\"https://github.com/depthlove/depthlove.github.io.git\" target=\"_blank\" rel=\"external\">https://github.com/depthlove/depthlove.github.io.git</a></p>\n<h4 id=\"修改-config-yml文件\"><a href=\"#修改-config-yml文件\" class=\"headerlink\" title=\"修改_config.yml文件\"></a>修改_config.yml文件</h4><p>在终端上执行命令 </p>\n<pre><code>vim _config.yml\n</code></pre><p>找到 </p>\n<pre><code>deploy:\n  type:\n</code></pre><p>修改为：</p>\n<pre><code>deploy:\n     type: git\n     repo: https://github.com/depthlove/depthlove.github.io.git\n  branch: master\n</code></pre><p>保存退出</p>\n<p>在终端执行命令 ls -al ~/.ssh，查看是否已经有SSH keys，如果之前在该电脑上使用过git管理过代码，结果是~/.ssh中会存在 id_rsa id_rsa.pub known_hosts 三个文件</p>\n<p>在终端继续执行命令 </p>\n<pre><code>ls -al ~/.ssh\n</code></pre><p>若之前没有使用过git，该目录就是空的。有用过git管理项目结果如下</p>\n<pre><code>total 32\ndrwx------   5 dev.temobi  staff   170  6  8 17:00 .\ndrwxr-xr-x+ 69 dev.temobi  staff  2346  6 12 13:47 ..\n-rw-------   1 dev.temobi  staff  1675  6  8 16:46 id_rsa\n-rw-r--r--@  1 dev.temobi  staff   399  6  8 17:04 id_rsa.pub\n-rw-r--r--   1 dev.temobi  staff  1593  6  8 18:27 known_hosts\n</code></pre><p>执行命令 </p>\n<pre><code>ssh-keygen -t rsa -C &quot;depthlove@163.com&quot;  \n</code></pre><p>depthlove@163.com 是注册github账号时所用的邮箱</p>\n<p>执行上面的命令后，会出现一些提示，什么都不用管，直接回车，再回车</p>\n<p>继续输入命令</p>\n<pre><code>ssh-agent -s\n</code></pre><p>结果为</p>\n<pre><code>SSH_AUTH_SOCK=/var/folders/0r/y1__8yjx579743zfttfrflsr0000gq/T//ssh-a9zU09oKAnpw/agent.17852;\nexport SSH_AUTH_SOCK;\nSSH_AGENT_PID=17853; export SSH_AGENT_PID;\necho Agent pid 17853;\n</code></pre><p>继续输入命令 </p>\n<pre><code>ssh-add ~/.ssh/id_rsa\n</code></pre><p>结果为</p>\n<pre><code>Identity added: /Users/dev.temobi/.ssh/id_rsa (/Users/dev.temobi/.ssh/id_rsa)\n</code></pre><p>如果执行ssh-add ~/.ssh/id_rsa 出错，就输入以下指令：</p>\n<pre><code>eval `ssh-agent -s`\n\nssh-add\n</code></pre><p>现在就成功生成了 SSH keys。</p>\n<h4 id=\"把SSH-keys添加到github账户中。\"><a href=\"#把SSH-keys添加到github账户中。\" class=\"headerlink\" title=\"把SSH keys添加到github账户中。\"></a>把SSH keys添加到github账户中。</h4><p>前往文件夹 ~/.ssh，用文本编辑器打开文件id_rsa.pub，复制其中的内容，然后粘贴到github add SSH keys的文本框中。操作完之后，github会要求输入github的登陆密码，输入完密码就成功添加了 SSH keys。</p>\n<p>若还不放心，还可以通过 ssh -T git@github.com 命令查看SSH keys是否添加成功，继续在终端执行命令</p>\n<pre><code>ssh -T git@github.com\n</code></pre><p>结果如下</p>\n<pre><code>Are you sure you want to continue connecting (yes/no)?yes // 输入yes\nWarning: Permanently added the RSA host key for IP address &apos;192.xx.xxx.xxx’ to the list of known hosts.\nHi depthlove! You&apos;ve successfully authenticated, but GitHub does not provide shell access.\n</code></pre><p>到这里准备工作都已做好，现在就是部署了。</p>\n<p>继续在终端执行命令</p>\n<pre><code>hexo generate\n\nhexo deploy\n</code></pre><p>结果出现错误</p>\n<pre><code>ERROR Deployer not found: git\n</code></pre><p>此时，就要检查为什么出现这种错误了，解决方法是上网百度寻求解决方案，还有一种就是靠自己的经验了。我发现在我修改文件_config.yml的时候发现</p>\n<pre><code># Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type:\n</code></pre><p>发现有个word文档说明，而且我在执行hexo deploy出错，说明解决方法肯定在word链接中，结果是答案真的就在这里面。</p>\n<p>在浏览器中输入 <a href=\"http://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">http://hexo.io/docs/deployment.html</a></p>\n<p>然后按照网页上的文档说明，继续在终端上执行命令</p>\n<pre><code>npm install hexo-deployer-git --save\n</code></pre><p>最后在终端上执行命令 </p>\n<pre><code>hexo deploy\n</code></pre><p>OK，成功了！结果如下</p>\n<pre><code>INFO  Deploying: git\nINFO  Setting up Git deployment...\n初始化空的 Git 版本库于 /Users/dev.temobi/Desktop/sunmmMainPrj/ZZ_HexoBlog/.deploy_git/.git/\n[master（根提交） e8f14ef] First commit\n Committer: dev.temobi &lt;dev.temobi@devtemobideMac-mini.local&gt;\n您的姓名和邮件地址基于登录名和主机名进行了自动设置。请检查它们正确\n与否。您可以通过下面的命令对其进行明确地设置以免再出现本提示信息：\n\ngit config --global user.name &quot;Your Name&quot;\ngit config --global user.email you@example.com\n\n设置完毕后，您可以用下面的命令来修正本次提交所使用的用户身份：\n\ngit commit --amend --reset-author\n……\n……\n……\ncreate mode 100644 index.html\ncreate mode 100644 js/script.js\ndelete mode 100644 placeholder\nUsername for &apos;https://github.com&apos;: depthlove  // 输入自己的github用户名\nPassword for &apos;https://depthlove@github.com&apos;:  // 输入自己的github密码\nTo https://github.com/depthlove/depthlove.github.io.git\n + f0b2e27...cd56463 master -&gt; master (forced update)\n分支 master 设置为跟踪来自 https://github.com/depthlove/depthlove.github.io.git 的远程分支 master。\nINFO  Deploy done: git\n</code></pre><p>现在，就可以在浏览器中输入 <a href=\"http://depthlove.github.io\">http://depthlove.github.io</a> ，访问我的hexo博客了</p>\n<p><code>注意：每次修改本地文件后，都要在hexo博客所在的目录下，执行命令 hexo generate 保存；想要上传文件到Github时，就应该在hexo博客所在的目录下先执行命令 hexo generate 保存之后，再执行命令 hexo deploy</code></p>\n<h4 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h4><p>hexo现在支持更加简单的命令格式了，比如：</p>\n<p>hexo g == hexo generate</p>\n<p>hexo d == hexo deploy</p>\n<p>hexo s == hexo server</p>\n<p>hexo n == hexo new</p>"},{"title":"利用openh264将iOS摄像头实时视频流编码为h264文件","date":"2016-07-11T05:22:42.000Z","_content":"\n\n<!-- more -->","source":"_posts/use-openh264-encode-iOS-camera-video-to-h264.md","raw":"---\ntitle: 利用openh264将iOS摄像头实时视频流编码为h264文件\ndate: 2016-07-11 13:22:42\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n\n\n<!-- more -->","slug":"use-openh264-encode-iOS-camera-video-to-h264","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzus003qqxep6g879p9p","content":"<a id=\"more\"></a>","site":{"data":{}},"excerpt":"","more":""},{"title":"采用工具软件分析h264文件","date":"2015-09-23T07:04:21.000Z","_content":"　　通过文章[利用x264将iOS摄像头实时视频流编码为h264文件](http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/) 和 [利用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件](http://depthlove.github.io/2015/09/18/use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264/)，实现了如何采集实时视频流并压缩为h264编码格式的文件。对于采集到h264文件，里面究竟有些什么，下面就通过工具软件来一探究竟。\n\n* 采用文章[利用x264将iOS摄像头实时视频流编码为h264文件](http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/)配套工程[X264-Encode-for-iOS](https://github.com/depthlove/X264-Encode-for-iOS)中的h264文件，该文件地址为[2015-09-17 18:05:20.h264](https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264)\n\n* 工具软件 UITraEdit\n\n<!-- more -->\n\n　　H.264 的基本流（elementary stream,ES）的结构分为两层，包括视频编码层（VCL）和网络适配层（NAL）。视频编码层负责高效的视频内容表示，而网络适配层负责以网络所要求的恰当的方式对数据进行打包和传送。引入NAL并使之与VCL分离带来的好处包括两方面：其一、使信号处理和网络传输分离，VCL 和NAL 可以在不同的处理平台上实现；其二、VCL 和NAL 分离设计，使得在不同的网络环境内，网关不需要因为网络环境不同而对VCL比特流进行重构和重编码。\n       \n　　H.264 的基本流由一系列NALU （Network Abstraction Layer Unit ）组成，不同的NALU数据量各不相同。H.264 草案指出，当数据流是储存在介质上时，**在每个NALU 前添加起始码：0x000001 或 0x00000001，用来指示一个NALU 的起始和终止位置**。在这样的机制下，在码流中检测起始码，作为一个NALU得起始标识，当检测到下一个起始码时，当前NALU结束。\n\n　　**H.264 码流中每个帧的开头的3~4个字节是H.264 的start_code（起始码），0x00000001或者0x000001。3字节的0x000001只有一种场合下使用，就是一个完整的帧被编为多个slice（片）的时候，包含这些slice的NALU 使用3字节起始码。其余场合都是4字节0x00000001的。**\n\n　　每个NALU单元由一个字节的 NALU头（NALU Header）和若干个字节的载荷数据（RBSP）组成。其中NALU 头的格式如图所示：\n\n![img](http://images2015.cnblogs.com/blog/719115/201509/719115-20150923173814084-917352993.png)\n\n **NALU头结构**\n\n长度：1byte\n\nforbidden_bit(1bit) + nal_reference_bit(2bit) + nal_unit_type(5bit)\n\n* F：forbidden_zero_bit.1 位，如果有语法冲突，则为 1。当网络识别此单元存在比特错误时，可将其设为 1，以便接收方丢掉该单元。 \n\n* NRI：nal_ref_idc.2 位，用来指示该NALU 的重要性等级。值越大，表示当前NALU越重要。具体大于0 时取何值，没有具体规定。\n\n* Type：5 位，指出NALU 的类型。\n\nh264中NALU类型取值如下图(图片来至《新一代视频压缩编码标准H.264》)\n\n![nal单元类型图](http://my.csdn.net/uploads/201205/11/1336727471_3857.png)\n\n\n　　将 [2015-09-17 18:05:20.h264](https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264) 文件用UITraEdit打开，效果如下图\n\n![img](http://images2015.cnblogs.com/blog/719115/201509/719115-20150923160926115-439296052.png)\n\n　　由于数据量较大，我挑选了其中3段数据来分析。\n\n### **分析第一段数据：**\n\n![img](http://images2015.cnblogs.com/blog/719115/201509/719115-20150923170442975-1838666657.png)\n\n* #### **00 00 00 01 67**\n\n**00 00 00 01** 为NALU的起始标志。\n\n**00 00 00 01** 后面的 67 为前面说的占1个字节的NALU头。将十六进制的67转换为二进制，得 **0110 0111**。\n\n字段\t\t\t\t  | 所占bit位数 |  二进制       | 十进制             |  类型\n----------------- | ---------- | ------------| ----------------- | -----      \nforbidden_bit     |  1         |       0     |      0            |\nnal_reference_bit |  2         |      11     |      3            | NALU 的重要性等级系数\nnal_unit_type     |  5         |   00111     |      7            | 序列参数集，sps\n\n* ####  **00 00 00 01 68**\n\n**00 00 00 01** 为NALU的起始标志。\n\n**00 00 00 01** 后面的 68 为前面说的占1个字节的NALU头。将十六进制的68转换为二进制，得 **0110 1000**。\n\n字段\t\t\t\t  | 所占bit位数 |  二进制       | 十进制             |  类型\n----------------- | ---------- | ------------| ----------------- | -----      \nforbidden_bit     |  1         |       0     |      0            |\nnal_reference_bit |  2         |      11     |      3            | NALU 的重要性等级系数\nnal_unit_type     |  5         |   01000     |      8            | 图像参数集，pps\n\n* ####  **00 00 03 00**\n\n　　H.264规定，当检测到0x000000时，也可以表征当前NAL的结束。那么NAL中数据出现0x000001或0x000000时怎么办？H.264引入了防止竞争机制，如果编码器检测到NAL数据存在0x000001或0x000000时，编码器会在最后个字节前插入一个新的字节0x03，这样：\n\n0x000000－>0x00000300\n\n0x000001－>0x00000301\n\n0x000002－>0x00000302\n\n0x000003－>0x00000303\n\n　　解码器检测到0x000003时，把03抛弃，恢复原始数据（脱壳操作）。解码器在解码时，首先逐个字节读取NAL的数据，统计NAL的长度，然后再开始解码。\n\n### **分析第二段数据：**\n\n![img](http://images2015.cnblogs.com/blog/719115/201509/719115-20150924095706865-430226903.png)\n\n\n* #### **00 00 00 01 65** 或 **00 00 01 65**\n\n**00 00 00 01** 或 **00 00 01** 为NALU的起始标志。\n\n**00 00 00 01** 或 **00 00 01** 后面的 65 为前面说的占1个字节的NALU头。将十六进制的65转换为二进制，得 **0110 0101**。\n\n字段\t\t\t\t  | 所占bit位数 |  二进制       | 十进制             |  类型\n----------------- | ---------- | ------------| ----------------- | -----      \nforbidden_bit     |  1         |       0     |      0            |\nnal_reference_bit |  2         |      11     |      3            | NALU 的重要性等级系数\nnal_unit_type     |  5         |   00101     |      5            | IDR图像中的片\n\nIDR图像中的片，即 I帧。\n\n　　我在用UITraEdit打开的[2015-09-17 18:05:20.h264](https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264)文件中搜索 00 00 00 01 65，没有找到该标志。搜索 00 00 01 65，存在该标志，说明一个完整的帧被编为多个slice（片）。\n\n### **分析第三段数据：**\n\n![img](http://images2015.cnblogs.com/blog/719115/201509/719115-20150923170450522-678610212.png)\n\n* #### **00 00 00 01 41**\n\n**00 00 00 01** 为NALU的起始标志。\n\n**00 00 00 01** 后面的 41 为前面说的占1个字节的NALU头。将十六进制的41转换为二进制，得 **0100 0001**。\n\n字段\t\t\t\t  | 所占bit位数 |  二进制       | 十进制             |  类型\n----------------- | ---------- | ------------| ----------------- | -----      \nforbidden_bit     |  1         |       0     |      0            |\nnal_reference_bit |  2         |      10     |      2            | NALU 的重要性等级系数\nnal_unit_type     |  5         |   00001     |      1            | 不分区，非IDR图像的片\n\n在baseline的档次中nal_unit_type表示的就是P帧，因为baseline没有B帧。\n\n　　以上，就是对H264的结构和机制的一些分析。\n\n* 扩展阅读：\n\n[H264--1--编码原理以及I帧B帧P帧 ](http://blog.csdn.net/yangzhongxuan/article/details/8003504)\n \n[ H264--2--语法及结构 ](http://blog.csdn.net/yangzhongxuan/article/details/8003494)\n\n\n\n\n","source":"_posts/use-tool-to-analyze-h264-file.md","raw":"title: 采用工具软件分析h264文件\ndate: 2015-09-23 15:04:21\ntags:\n- 音视频处理\n---\n　　通过文章[利用x264将iOS摄像头实时视频流编码为h264文件](http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/) 和 [利用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件](http://depthlove.github.io/2015/09/18/use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264/)，实现了如何采集实时视频流并压缩为h264编码格式的文件。对于采集到h264文件，里面究竟有些什么，下面就通过工具软件来一探究竟。\n\n* 采用文章[利用x264将iOS摄像头实时视频流编码为h264文件](http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/)配套工程[X264-Encode-for-iOS](https://github.com/depthlove/X264-Encode-for-iOS)中的h264文件，该文件地址为[2015-09-17 18:05:20.h264](https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264)\n\n* 工具软件 UITraEdit\n\n<!-- more -->\n\n　　H.264 的基本流（elementary stream,ES）的结构分为两层，包括视频编码层（VCL）和网络适配层（NAL）。视频编码层负责高效的视频内容表示，而网络适配层负责以网络所要求的恰当的方式对数据进行打包和传送。引入NAL并使之与VCL分离带来的好处包括两方面：其一、使信号处理和网络传输分离，VCL 和NAL 可以在不同的处理平台上实现；其二、VCL 和NAL 分离设计，使得在不同的网络环境内，网关不需要因为网络环境不同而对VCL比特流进行重构和重编码。\n       \n　　H.264 的基本流由一系列NALU （Network Abstraction Layer Unit ）组成，不同的NALU数据量各不相同。H.264 草案指出，当数据流是储存在介质上时，**在每个NALU 前添加起始码：0x000001 或 0x00000001，用来指示一个NALU 的起始和终止位置**。在这样的机制下，在码流中检测起始码，作为一个NALU得起始标识，当检测到下一个起始码时，当前NALU结束。\n\n　　**H.264 码流中每个帧的开头的3~4个字节是H.264 的start_code（起始码），0x00000001或者0x000001。3字节的0x000001只有一种场合下使用，就是一个完整的帧被编为多个slice（片）的时候，包含这些slice的NALU 使用3字节起始码。其余场合都是4字节0x00000001的。**\n\n　　每个NALU单元由一个字节的 NALU头（NALU Header）和若干个字节的载荷数据（RBSP）组成。其中NALU 头的格式如图所示：\n\n![img](http://images2015.cnblogs.com/blog/719115/201509/719115-20150923173814084-917352993.png)\n\n **NALU头结构**\n\n长度：1byte\n\nforbidden_bit(1bit) + nal_reference_bit(2bit) + nal_unit_type(5bit)\n\n* F：forbidden_zero_bit.1 位，如果有语法冲突，则为 1。当网络识别此单元存在比特错误时，可将其设为 1，以便接收方丢掉该单元。 \n\n* NRI：nal_ref_idc.2 位，用来指示该NALU 的重要性等级。值越大，表示当前NALU越重要。具体大于0 时取何值，没有具体规定。\n\n* Type：5 位，指出NALU 的类型。\n\nh264中NALU类型取值如下图(图片来至《新一代视频压缩编码标准H.264》)\n\n![nal单元类型图](http://my.csdn.net/uploads/201205/11/1336727471_3857.png)\n\n\n　　将 [2015-09-17 18:05:20.h264](https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264) 文件用UITraEdit打开，效果如下图\n\n![img](http://images2015.cnblogs.com/blog/719115/201509/719115-20150923160926115-439296052.png)\n\n　　由于数据量较大，我挑选了其中3段数据来分析。\n\n### **分析第一段数据：**\n\n![img](http://images2015.cnblogs.com/blog/719115/201509/719115-20150923170442975-1838666657.png)\n\n* #### **00 00 00 01 67**\n\n**00 00 00 01** 为NALU的起始标志。\n\n**00 00 00 01** 后面的 67 为前面说的占1个字节的NALU头。将十六进制的67转换为二进制，得 **0110 0111**。\n\n字段\t\t\t\t  | 所占bit位数 |  二进制       | 十进制             |  类型\n----------------- | ---------- | ------------| ----------------- | -----      \nforbidden_bit     |  1         |       0     |      0            |\nnal_reference_bit |  2         |      11     |      3            | NALU 的重要性等级系数\nnal_unit_type     |  5         |   00111     |      7            | 序列参数集，sps\n\n* ####  **00 00 00 01 68**\n\n**00 00 00 01** 为NALU的起始标志。\n\n**00 00 00 01** 后面的 68 为前面说的占1个字节的NALU头。将十六进制的68转换为二进制，得 **0110 1000**。\n\n字段\t\t\t\t  | 所占bit位数 |  二进制       | 十进制             |  类型\n----------------- | ---------- | ------------| ----------------- | -----      \nforbidden_bit     |  1         |       0     |      0            |\nnal_reference_bit |  2         |      11     |      3            | NALU 的重要性等级系数\nnal_unit_type     |  5         |   01000     |      8            | 图像参数集，pps\n\n* ####  **00 00 03 00**\n\n　　H.264规定，当检测到0x000000时，也可以表征当前NAL的结束。那么NAL中数据出现0x000001或0x000000时怎么办？H.264引入了防止竞争机制，如果编码器检测到NAL数据存在0x000001或0x000000时，编码器会在最后个字节前插入一个新的字节0x03，这样：\n\n0x000000－>0x00000300\n\n0x000001－>0x00000301\n\n0x000002－>0x00000302\n\n0x000003－>0x00000303\n\n　　解码器检测到0x000003时，把03抛弃，恢复原始数据（脱壳操作）。解码器在解码时，首先逐个字节读取NAL的数据，统计NAL的长度，然后再开始解码。\n\n### **分析第二段数据：**\n\n![img](http://images2015.cnblogs.com/blog/719115/201509/719115-20150924095706865-430226903.png)\n\n\n* #### **00 00 00 01 65** 或 **00 00 01 65**\n\n**00 00 00 01** 或 **00 00 01** 为NALU的起始标志。\n\n**00 00 00 01** 或 **00 00 01** 后面的 65 为前面说的占1个字节的NALU头。将十六进制的65转换为二进制，得 **0110 0101**。\n\n字段\t\t\t\t  | 所占bit位数 |  二进制       | 十进制             |  类型\n----------------- | ---------- | ------------| ----------------- | -----      \nforbidden_bit     |  1         |       0     |      0            |\nnal_reference_bit |  2         |      11     |      3            | NALU 的重要性等级系数\nnal_unit_type     |  5         |   00101     |      5            | IDR图像中的片\n\nIDR图像中的片，即 I帧。\n\n　　我在用UITraEdit打开的[2015-09-17 18:05:20.h264](https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264)文件中搜索 00 00 00 01 65，没有找到该标志。搜索 00 00 01 65，存在该标志，说明一个完整的帧被编为多个slice（片）。\n\n### **分析第三段数据：**\n\n![img](http://images2015.cnblogs.com/blog/719115/201509/719115-20150923170450522-678610212.png)\n\n* #### **00 00 00 01 41**\n\n**00 00 00 01** 为NALU的起始标志。\n\n**00 00 00 01** 后面的 41 为前面说的占1个字节的NALU头。将十六进制的41转换为二进制，得 **0100 0001**。\n\n字段\t\t\t\t  | 所占bit位数 |  二进制       | 十进制             |  类型\n----------------- | ---------- | ------------| ----------------- | -----      \nforbidden_bit     |  1         |       0     |      0            |\nnal_reference_bit |  2         |      10     |      2            | NALU 的重要性等级系数\nnal_unit_type     |  5         |   00001     |      1            | 不分区，非IDR图像的片\n\n在baseline的档次中nal_unit_type表示的就是P帧，因为baseline没有B帧。\n\n　　以上，就是对H264的结构和机制的一些分析。\n\n* 扩展阅读：\n\n[H264--1--编码原理以及I帧B帧P帧 ](http://blog.csdn.net/yangzhongxuan/article/details/8003504)\n \n[ H264--2--语法及结构 ](http://blog.csdn.net/yangzhongxuan/article/details/8003494)\n\n\n\n\n","slug":"use-tool-to-analyze-h264-file","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzuu003sqxep5fl8yk98","content":"<p>　　通过文章<a href=\"http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/\">利用x264将iOS摄像头实时视频流编码为h264文件</a> 和 <a href=\"http://depthlove.github.io/2015/09/18/use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264/\">利用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件</a>，实现了如何采集实时视频流并压缩为h264编码格式的文件。对于采集到h264文件，里面究竟有些什么，下面就通过工具软件来一探究竟。</p>\n<ul>\n<li><p>采用文章<a href=\"http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/\">利用x264将iOS摄像头实时视频流编码为h264文件</a>配套工程<a href=\"https://github.com/depthlove/X264-Encode-for-iOS\" target=\"_blank\" rel=\"external\">X264-Encode-for-iOS</a>中的h264文件，该文件地址为<a href=\"https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264\" target=\"_blank\" rel=\"external\">2015-09-17 18:05:20.h264</a></p>\n</li>\n<li><p>工具软件 UITraEdit</p>\n</li>\n</ul>\n<a id=\"more\"></a>\n<p>　　H.264 的基本流（elementary stream,ES）的结构分为两层，包括视频编码层（VCL）和网络适配层（NAL）。视频编码层负责高效的视频内容表示，而网络适配层负责以网络所要求的恰当的方式对数据进行打包和传送。引入NAL并使之与VCL分离带来的好处包括两方面：其一、使信号处理和网络传输分离，VCL 和NAL 可以在不同的处理平台上实现；其二、VCL 和NAL 分离设计，使得在不同的网络环境内，网关不需要因为网络环境不同而对VCL比特流进行重构和重编码。</p>\n<p>　　H.264 的基本流由一系列NALU （Network Abstraction Layer Unit ）组成，不同的NALU数据量各不相同。H.264 草案指出，当数据流是储存在介质上时，<strong>在每个NALU 前添加起始码：0x000001 或 0x00000001，用来指示一个NALU 的起始和终止位置</strong>。在这样的机制下，在码流中检测起始码，作为一个NALU得起始标识，当检测到下一个起始码时，当前NALU结束。</p>\n<p>　　<strong>H.264 码流中每个帧的开头的3~4个字节是H.264 的start_code（起始码），0x00000001或者0x000001。3字节的0x000001只有一种场合下使用，就是一个完整的帧被编为多个slice（片）的时候，包含这些slice的NALU 使用3字节起始码。其余场合都是4字节0x00000001的。</strong></p>\n<p>　　每个NALU单元由一个字节的 NALU头（NALU Header）和若干个字节的载荷数据（RBSP）组成。其中NALU 头的格式如图所示：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150923173814084-917352993.png\" alt=\"img\"></p>\n<p> <strong>NALU头结构</strong></p>\n<p>长度：1byte</p>\n<p>forbidden_bit(1bit) + nal_reference_bit(2bit) + nal_unit_type(5bit)</p>\n<ul>\n<li><p>F：forbidden_zero_bit.1 位，如果有语法冲突，则为 1。当网络识别此单元存在比特错误时，可将其设为 1，以便接收方丢掉该单元。 </p>\n</li>\n<li><p>NRI：nal_ref_idc.2 位，用来指示该NALU 的重要性等级。值越大，表示当前NALU越重要。具体大于0 时取何值，没有具体规定。</p>\n</li>\n<li><p>Type：5 位，指出NALU 的类型。</p>\n</li>\n</ul>\n<p>h264中NALU类型取值如下图(图片来至《新一代视频压缩编码标准H.264》)</p>\n<p><img src=\"http://my.csdn.net/uploads/201205/11/1336727471_3857.png\" alt=\"nal单元类型图\"></p>\n<p>　　将 <a href=\"https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264\" target=\"_blank\" rel=\"external\">2015-09-17 18:05:20.h264</a> 文件用UITraEdit打开，效果如下图</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150923160926115-439296052.png\" alt=\"img\"></p>\n<p>　　由于数据量较大，我挑选了其中3段数据来分析。</p>\n<h3 id=\"分析第一段数据：\"><a href=\"#分析第一段数据：\" class=\"headerlink\" title=\"分析第一段数据：\"></a><strong>分析第一段数据：</strong></h3><p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150923170442975-1838666657.png\" alt=\"img\"></p>\n<ul>\n<li><h4 id=\"00-00-00-01-67\"><a href=\"#00-00-00-01-67\" class=\"headerlink\" title=\"00 00 00 01 67\"></a><strong>00 00 00 01 67</strong></h4></li>\n</ul>\n<p><strong>00 00 00 01</strong> 为NALU的起始标志。</p>\n<p><strong>00 00 00 01</strong> 后面的 67 为前面说的占1个字节的NALU头。将十六进制的67转换为二进制，得 <strong>0110 0111</strong>。</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>所占bit位数</th>\n<th>二进制</th>\n<th>十进制</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>forbidden_bit</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>nal_reference_bit</td>\n<td>2</td>\n<td>11</td>\n<td>3</td>\n<td>NALU 的重要性等级系数</td>\n</tr>\n<tr>\n<td>nal_unit_type</td>\n<td>5</td>\n<td>00111</td>\n<td>7</td>\n<td>序列参数集，sps</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><h4 id=\"00-00-00-01-68\"><a href=\"#00-00-00-01-68\" class=\"headerlink\" title=\"00 00 00 01 68\"></a><strong>00 00 00 01 68</strong></h4></li>\n</ul>\n<p><strong>00 00 00 01</strong> 为NALU的起始标志。</p>\n<p><strong>00 00 00 01</strong> 后面的 68 为前面说的占1个字节的NALU头。将十六进制的68转换为二进制，得 <strong>0110 1000</strong>。</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>所占bit位数</th>\n<th>二进制</th>\n<th>十进制</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>forbidden_bit</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>nal_reference_bit</td>\n<td>2</td>\n<td>11</td>\n<td>3</td>\n<td>NALU 的重要性等级系数</td>\n</tr>\n<tr>\n<td>nal_unit_type</td>\n<td>5</td>\n<td>01000</td>\n<td>8</td>\n<td>图像参数集，pps</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><h4 id=\"00-00-03-00\"><a href=\"#00-00-03-00\" class=\"headerlink\" title=\"00 00 03 00\"></a><strong>00 00 03 00</strong></h4></li>\n</ul>\n<p>　　H.264规定，当检测到0x000000时，也可以表征当前NAL的结束。那么NAL中数据出现0x000001或0x000000时怎么办？H.264引入了防止竞争机制，如果编码器检测到NAL数据存在0x000001或0x000000时，编码器会在最后个字节前插入一个新的字节0x03，这样：</p>\n<p>0x000000－&gt;0x00000300</p>\n<p>0x000001－&gt;0x00000301</p>\n<p>0x000002－&gt;0x00000302</p>\n<p>0x000003－&gt;0x00000303</p>\n<p>　　解码器检测到0x000003时，把03抛弃，恢复原始数据（脱壳操作）。解码器在解码时，首先逐个字节读取NAL的数据，统计NAL的长度，然后再开始解码。</p>\n<h3 id=\"分析第二段数据：\"><a href=\"#分析第二段数据：\" class=\"headerlink\" title=\"分析第二段数据：\"></a><strong>分析第二段数据：</strong></h3><p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150924095706865-430226903.png\" alt=\"img\"></p>\n<ul>\n<li><h4 id=\"00-00-00-01-65-或-00-00-01-65\"><a href=\"#00-00-00-01-65-或-00-00-01-65\" class=\"headerlink\" title=\"00 00 00 01 65 或 00 00 01 65\"></a><strong>00 00 00 01 65</strong> 或 <strong>00 00 01 65</strong></h4></li>\n</ul>\n<p><strong>00 00 00 01</strong> 或 <strong>00 00 01</strong> 为NALU的起始标志。</p>\n<p><strong>00 00 00 01</strong> 或 <strong>00 00 01</strong> 后面的 65 为前面说的占1个字节的NALU头。将十六进制的65转换为二进制，得 <strong>0110 0101</strong>。</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>所占bit位数</th>\n<th>二进制</th>\n<th>十进制</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>forbidden_bit</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>nal_reference_bit</td>\n<td>2</td>\n<td>11</td>\n<td>3</td>\n<td>NALU 的重要性等级系数</td>\n</tr>\n<tr>\n<td>nal_unit_type</td>\n<td>5</td>\n<td>00101</td>\n<td>5</td>\n<td>IDR图像中的片</td>\n</tr>\n</tbody>\n</table>\n<p>IDR图像中的片，即 I帧。</p>\n<p>　　我在用UITraEdit打开的<a href=\"https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264\" target=\"_blank\" rel=\"external\">2015-09-17 18:05:20.h264</a>文件中搜索 00 00 00 01 65，没有找到该标志。搜索 00 00 01 65，存在该标志，说明一个完整的帧被编为多个slice（片）。</p>\n<h3 id=\"分析第三段数据：\"><a href=\"#分析第三段数据：\" class=\"headerlink\" title=\"分析第三段数据：\"></a><strong>分析第三段数据：</strong></h3><p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150923170450522-678610212.png\" alt=\"img\"></p>\n<ul>\n<li><h4 id=\"00-00-00-01-41\"><a href=\"#00-00-00-01-41\" class=\"headerlink\" title=\"00 00 00 01 41\"></a><strong>00 00 00 01 41</strong></h4></li>\n</ul>\n<p><strong>00 00 00 01</strong> 为NALU的起始标志。</p>\n<p><strong>00 00 00 01</strong> 后面的 41 为前面说的占1个字节的NALU头。将十六进制的41转换为二进制，得 <strong>0100 0001</strong>。</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>所占bit位数</th>\n<th>二进制</th>\n<th>十进制</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>forbidden_bit</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>nal_reference_bit</td>\n<td>2</td>\n<td>10</td>\n<td>2</td>\n<td>NALU 的重要性等级系数</td>\n</tr>\n<tr>\n<td>nal_unit_type</td>\n<td>5</td>\n<td>00001</td>\n<td>1</td>\n<td>不分区，非IDR图像的片</td>\n</tr>\n</tbody>\n</table>\n<p>在baseline的档次中nal_unit_type表示的就是P帧，因为baseline没有B帧。</p>\n<p>　　以上，就是对H264的结构和机制的一些分析。</p>\n<ul>\n<li>扩展阅读：</li>\n</ul>\n<p><a href=\"http://blog.csdn.net/yangzhongxuan/article/details/8003504\" target=\"_blank\" rel=\"external\">H264–1–编码原理以及I帧B帧P帧 </a></p>\n<p><a href=\"http://blog.csdn.net/yangzhongxuan/article/details/8003494\" target=\"_blank\" rel=\"external\"> H264–2–语法及结构 </a></p>\n","site":{"data":{}},"excerpt":"<p>　　通过文章<a href=\"http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/\">利用x264将iOS摄像头实时视频流编码为h264文件</a> 和 <a href=\"http://depthlove.github.io/2015/09/18/use-ffmpeg-and-x264-encode-iOS-camera-video-to-h264/\">利用FFmpeg+x264将iOS摄像头实时视频流编码为h264文件</a>，实现了如何采集实时视频流并压缩为h264编码格式的文件。对于采集到h264文件，里面究竟有些什么，下面就通过工具软件来一探究竟。</p>\n<ul>\n<li><p>采用文章<a href=\"http://depthlove.github.io/2015/09/17/use-x264-encode-iOS-camera-video-to-h264/\">利用x264将iOS摄像头实时视频流编码为h264文件</a>配套工程<a href=\"https://github.com/depthlove/X264-Encode-for-iOS\" target=\"_blank\" rel=\"external\">X264-Encode-for-iOS</a>中的h264文件，该文件地址为<a href=\"https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264\" target=\"_blank\" rel=\"external\">2015-09-17 18:05:20.h264</a></p>\n</li>\n<li><p>工具软件 UITraEdit</p>\n</li>\n</ul>","more":"<p>　　H.264 的基本流（elementary stream,ES）的结构分为两层，包括视频编码层（VCL）和网络适配层（NAL）。视频编码层负责高效的视频内容表示，而网络适配层负责以网络所要求的恰当的方式对数据进行打包和传送。引入NAL并使之与VCL分离带来的好处包括两方面：其一、使信号处理和网络传输分离，VCL 和NAL 可以在不同的处理平台上实现；其二、VCL 和NAL 分离设计，使得在不同的网络环境内，网关不需要因为网络环境不同而对VCL比特流进行重构和重编码。</p>\n<p>　　H.264 的基本流由一系列NALU （Network Abstraction Layer Unit ）组成，不同的NALU数据量各不相同。H.264 草案指出，当数据流是储存在介质上时，<strong>在每个NALU 前添加起始码：0x000001 或 0x00000001，用来指示一个NALU 的起始和终止位置</strong>。在这样的机制下，在码流中检测起始码，作为一个NALU得起始标识，当检测到下一个起始码时，当前NALU结束。</p>\n<p>　　<strong>H.264 码流中每个帧的开头的3~4个字节是H.264 的start_code（起始码），0x00000001或者0x000001。3字节的0x000001只有一种场合下使用，就是一个完整的帧被编为多个slice（片）的时候，包含这些slice的NALU 使用3字节起始码。其余场合都是4字节0x00000001的。</strong></p>\n<p>　　每个NALU单元由一个字节的 NALU头（NALU Header）和若干个字节的载荷数据（RBSP）组成。其中NALU 头的格式如图所示：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150923173814084-917352993.png\" alt=\"img\"></p>\n<p> <strong>NALU头结构</strong></p>\n<p>长度：1byte</p>\n<p>forbidden_bit(1bit) + nal_reference_bit(2bit) + nal_unit_type(5bit)</p>\n<ul>\n<li><p>F：forbidden_zero_bit.1 位，如果有语法冲突，则为 1。当网络识别此单元存在比特错误时，可将其设为 1，以便接收方丢掉该单元。 </p>\n</li>\n<li><p>NRI：nal_ref_idc.2 位，用来指示该NALU 的重要性等级。值越大，表示当前NALU越重要。具体大于0 时取何值，没有具体规定。</p>\n</li>\n<li><p>Type：5 位，指出NALU 的类型。</p>\n</li>\n</ul>\n<p>h264中NALU类型取值如下图(图片来至《新一代视频压缩编码标准H.264》)</p>\n<p><img src=\"http://my.csdn.net/uploads/201205/11/1336727471_3857.png\" alt=\"nal单元类型图\"></p>\n<p>　　将 <a href=\"https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264\" target=\"_blank\" rel=\"external\">2015-09-17 18:05:20.h264</a> 文件用UITraEdit打开，效果如下图</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150923160926115-439296052.png\" alt=\"img\"></p>\n<p>　　由于数据量较大，我挑选了其中3段数据来分析。</p>\n<h3 id=\"分析第一段数据：\"><a href=\"#分析第一段数据：\" class=\"headerlink\" title=\"分析第一段数据：\"></a><strong>分析第一段数据：</strong></h3><p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150923170442975-1838666657.png\" alt=\"img\"></p>\n<ul>\n<li><h4 id=\"00-00-00-01-67\"><a href=\"#00-00-00-01-67\" class=\"headerlink\" title=\"00 00 00 01 67\"></a><strong>00 00 00 01 67</strong></h4></li>\n</ul>\n<p><strong>00 00 00 01</strong> 为NALU的起始标志。</p>\n<p><strong>00 00 00 01</strong> 后面的 67 为前面说的占1个字节的NALU头。将十六进制的67转换为二进制，得 <strong>0110 0111</strong>。</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>所占bit位数</th>\n<th>二进制</th>\n<th>十进制</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>forbidden_bit</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>nal_reference_bit</td>\n<td>2</td>\n<td>11</td>\n<td>3</td>\n<td>NALU 的重要性等级系数</td>\n</tr>\n<tr>\n<td>nal_unit_type</td>\n<td>5</td>\n<td>00111</td>\n<td>7</td>\n<td>序列参数集，sps</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><h4 id=\"00-00-00-01-68\"><a href=\"#00-00-00-01-68\" class=\"headerlink\" title=\"00 00 00 01 68\"></a><strong>00 00 00 01 68</strong></h4></li>\n</ul>\n<p><strong>00 00 00 01</strong> 为NALU的起始标志。</p>\n<p><strong>00 00 00 01</strong> 后面的 68 为前面说的占1个字节的NALU头。将十六进制的68转换为二进制，得 <strong>0110 1000</strong>。</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>所占bit位数</th>\n<th>二进制</th>\n<th>十进制</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>forbidden_bit</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>nal_reference_bit</td>\n<td>2</td>\n<td>11</td>\n<td>3</td>\n<td>NALU 的重要性等级系数</td>\n</tr>\n<tr>\n<td>nal_unit_type</td>\n<td>5</td>\n<td>01000</td>\n<td>8</td>\n<td>图像参数集，pps</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><h4 id=\"00-00-03-00\"><a href=\"#00-00-03-00\" class=\"headerlink\" title=\"00 00 03 00\"></a><strong>00 00 03 00</strong></h4></li>\n</ul>\n<p>　　H.264规定，当检测到0x000000时，也可以表征当前NAL的结束。那么NAL中数据出现0x000001或0x000000时怎么办？H.264引入了防止竞争机制，如果编码器检测到NAL数据存在0x000001或0x000000时，编码器会在最后个字节前插入一个新的字节0x03，这样：</p>\n<p>0x000000－&gt;0x00000300</p>\n<p>0x000001－&gt;0x00000301</p>\n<p>0x000002－&gt;0x00000302</p>\n<p>0x000003－&gt;0x00000303</p>\n<p>　　解码器检测到0x000003时，把03抛弃，恢复原始数据（脱壳操作）。解码器在解码时，首先逐个字节读取NAL的数据，统计NAL的长度，然后再开始解码。</p>\n<h3 id=\"分析第二段数据：\"><a href=\"#分析第二段数据：\" class=\"headerlink\" title=\"分析第二段数据：\"></a><strong>分析第二段数据：</strong></h3><p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150924095706865-430226903.png\" alt=\"img\"></p>\n<ul>\n<li><h4 id=\"00-00-00-01-65-或-00-00-01-65\"><a href=\"#00-00-00-01-65-或-00-00-01-65\" class=\"headerlink\" title=\"00 00 00 01 65 或 00 00 01 65\"></a><strong>00 00 00 01 65</strong> 或 <strong>00 00 01 65</strong></h4></li>\n</ul>\n<p><strong>00 00 00 01</strong> 或 <strong>00 00 01</strong> 为NALU的起始标志。</p>\n<p><strong>00 00 00 01</strong> 或 <strong>00 00 01</strong> 后面的 65 为前面说的占1个字节的NALU头。将十六进制的65转换为二进制，得 <strong>0110 0101</strong>。</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>所占bit位数</th>\n<th>二进制</th>\n<th>十进制</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>forbidden_bit</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>nal_reference_bit</td>\n<td>2</td>\n<td>11</td>\n<td>3</td>\n<td>NALU 的重要性等级系数</td>\n</tr>\n<tr>\n<td>nal_unit_type</td>\n<td>5</td>\n<td>00101</td>\n<td>5</td>\n<td>IDR图像中的片</td>\n</tr>\n</tbody>\n</table>\n<p>IDR图像中的片，即 I帧。</p>\n<p>　　我在用UITraEdit打开的<a href=\"https://github.com/depthlove/X264-Encode-for-iOS/blob/master/myRecordH264Vieo/2015-09-17%2018:05:20.h264\" target=\"_blank\" rel=\"external\">2015-09-17 18:05:20.h264</a>文件中搜索 00 00 00 01 65，没有找到该标志。搜索 00 00 01 65，存在该标志，说明一个完整的帧被编为多个slice（片）。</p>\n<h3 id=\"分析第三段数据：\"><a href=\"#分析第三段数据：\" class=\"headerlink\" title=\"分析第三段数据：\"></a><strong>分析第三段数据：</strong></h3><p><img src=\"http://images2015.cnblogs.com/blog/719115/201509/719115-20150923170450522-678610212.png\" alt=\"img\"></p>\n<ul>\n<li><h4 id=\"00-00-00-01-41\"><a href=\"#00-00-00-01-41\" class=\"headerlink\" title=\"00 00 00 01 41\"></a><strong>00 00 00 01 41</strong></h4></li>\n</ul>\n<p><strong>00 00 00 01</strong> 为NALU的起始标志。</p>\n<p><strong>00 00 00 01</strong> 后面的 41 为前面说的占1个字节的NALU头。将十六进制的41转换为二进制，得 <strong>0100 0001</strong>。</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>所占bit位数</th>\n<th>二进制</th>\n<th>十进制</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>forbidden_bit</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>nal_reference_bit</td>\n<td>2</td>\n<td>10</td>\n<td>2</td>\n<td>NALU 的重要性等级系数</td>\n</tr>\n<tr>\n<td>nal_unit_type</td>\n<td>5</td>\n<td>00001</td>\n<td>1</td>\n<td>不分区，非IDR图像的片</td>\n</tr>\n</tbody>\n</table>\n<p>在baseline的档次中nal_unit_type表示的就是P帧，因为baseline没有B帧。</p>\n<p>　　以上，就是对H264的结构和机制的一些分析。</p>\n<ul>\n<li>扩展阅读：</li>\n</ul>\n<p><a href=\"http://blog.csdn.net/yangzhongxuan/article/details/8003504\" target=\"_blank\" rel=\"external\">H264–1–编码原理以及I帧B帧P帧 </a></p>\n<p><a href=\"http://blog.csdn.net/yangzhongxuan/article/details/8003494\" target=\"_blank\" rel=\"external\"> H264–2–语法及结构 </a></p>"},{"title":"在iOS平台上编译WebRTC","date":"2016-03-14T02:46:48.000Z","_content":"","source":"_posts/use-webrtc-codec-in-ios-platform.md","raw":"---\ntitle: 在iOS平台上编译WebRTC\ndate: 2016-03-14 10:46:48\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n","slug":"use-webrtc-codec-in-ios-platform","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzux003uqxepomkqc584","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"利用x264将iOS摄像头实时视频流编码为h264文件","date":"2015-09-17T10:37:26.000Z","_content":"\n代码见我的Github代码托管区域：[X264-Encode-for-iOS](https://github.com/depthlove/X264-Encode-for-iOS)\n\n<!-- more -->\n\n\n","source":"_posts/use-x264-encode-iOS-camera-video-to-h264.md","raw":"title: 利用x264将iOS摄像头实时视频流编码为h264文件\ndate: 2015-09-17 18:37:26\ntags:\n- 音视频处理\n- iOS中高级开发\n---\n\n代码见我的Github代码托管区域：[X264-Encode-for-iOS](https://github.com/depthlove/X264-Encode-for-iOS)\n\n<!-- more -->\n\n\n","slug":"use-x264-encode-iOS-camera-video-to-h264","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzuy003wqxepuayccel1","content":"<p>代码见我的Github代码托管区域：<a href=\"https://github.com/depthlove/X264-Encode-for-iOS\" target=\"_blank\" rel=\"external\">X264-Encode-for-iOS</a></p>\n<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"<p>代码见我的Github代码托管区域：<a href=\"https://github.com/depthlove/X264-Encode-for-iOS\" target=\"_blank\" rel=\"external\">X264-Encode-for-iOS</a></p>","more":""},{"title":"我对毕业生进大公司与小公司的看法","date":"2015-06-18T04:14:57.000Z","_content":"\n　　2014年7月1日毕业，2014年4月23日第一天正式上班，1个半月就从试用期转正，到今天已经工作1年2个月了。工作了1年多，重新思考以前自己面对的问题，以前对毕业之后究竟要找一个什么样的公司很模糊，听到的是进大公司好，福利好，做颗小螺丝钉，小公司加班多，待遇差，锻炼人。究竟大公司与小公司对初入社会的毕业生今后的职业生涯与生存状态有多大影响？\n\n　　小公司与大公司的直接明了的区别就是职员人数，几十个人的公司虽在业务经济效益上可能取胜人数上百的大公司，但是整个公司的建制体系跟数百人上千人的公司是无法比的。\n\n<!-- more -->\n\n　　我的第一份工作是在一家小型互联网公司，在小公司行为与装束可以随意，上班可以穿个拖鞋就啪啪啪的去公司开工了。若想在小公司开拓眼界以及技术的延伸，就不要指望公司的条件了，自个掏钱自个多关注信息。以前，总想着公司能请些牛人给我们做讲座，给我们充充电，或者希望公司能安排去参加一些好的讲座，这些在小公司简直就是自己在瞎想，不切实际。\n\n　　对于小公司锻炼人这个说法，其实我并不认同，为什么能锻炼人，不就是公司在使用少的人力资源在员工上获取更大的回报。但是，员工收到利益上的回报有变化吗，没有。锻炼人，也是在员工花更多的私人时间泡在公司加班或在家加班的投入所致，这是投入大量时间之后，应有的收获。与小公司能锻炼人其实并无因果关系。小公司能发挥自己更大的能力，有更大的自由发挥空间？公司项目与业务的决策，一个小职员究竟有多大的份量，刚出来的毕业生懂得不多，几乎是不懂，就是想发挥也没地。\n\n　　小公司做事的流程好吗？没有大公司复杂的流程，但面临的是上面的指令下达后，朝令夕改。这个对于程序员来说，实在是不堪重负的。在小公司天天见到老板，在大公司除了能看见或认识所在部门的一些人，其它部门的人基本就是陌生的，好像在另一个未知区域。\n\n　　在大一点的公司里面做事，首先是格局与视野层面上对自己以后的发展有好处，其次，现在就职的公司就是以后跳槽或转行的平台，对加薪和升职影响很大。\n\n　　非诚勿扰里面有句经典话语，“宁愿坐在宝马车上哭，也不愿坐在自行车上笑”，虽然这句对人的道德观和价值观有很大的扭曲，但是直接反映了这个社会的真实情况，作为工薪一族，“宁愿在大公司拼，也不愿在小公司做”，好的职业背景，带给自己的不仅仅是金钱上的优势，更有助于成就一番或大或小的事业。","source":"_posts/view-graduates-which-enter-the-large-companies-or-small-companies.md","raw":"title: 我对毕业生进大公司与小公司的看法\ndate: 2015-06-18 12:14:57\ntags: 生活\n---\n\n　　2014年7月1日毕业，2014年4月23日第一天正式上班，1个半月就从试用期转正，到今天已经工作1年2个月了。工作了1年多，重新思考以前自己面对的问题，以前对毕业之后究竟要找一个什么样的公司很模糊，听到的是进大公司好，福利好，做颗小螺丝钉，小公司加班多，待遇差，锻炼人。究竟大公司与小公司对初入社会的毕业生今后的职业生涯与生存状态有多大影响？\n\n　　小公司与大公司的直接明了的区别就是职员人数，几十个人的公司虽在业务经济效益上可能取胜人数上百的大公司，但是整个公司的建制体系跟数百人上千人的公司是无法比的。\n\n<!-- more -->\n\n　　我的第一份工作是在一家小型互联网公司，在小公司行为与装束可以随意，上班可以穿个拖鞋就啪啪啪的去公司开工了。若想在小公司开拓眼界以及技术的延伸，就不要指望公司的条件了，自个掏钱自个多关注信息。以前，总想着公司能请些牛人给我们做讲座，给我们充充电，或者希望公司能安排去参加一些好的讲座，这些在小公司简直就是自己在瞎想，不切实际。\n\n　　对于小公司锻炼人这个说法，其实我并不认同，为什么能锻炼人，不就是公司在使用少的人力资源在员工上获取更大的回报。但是，员工收到利益上的回报有变化吗，没有。锻炼人，也是在员工花更多的私人时间泡在公司加班或在家加班的投入所致，这是投入大量时间之后，应有的收获。与小公司能锻炼人其实并无因果关系。小公司能发挥自己更大的能力，有更大的自由发挥空间？公司项目与业务的决策，一个小职员究竟有多大的份量，刚出来的毕业生懂得不多，几乎是不懂，就是想发挥也没地。\n\n　　小公司做事的流程好吗？没有大公司复杂的流程，但面临的是上面的指令下达后，朝令夕改。这个对于程序员来说，实在是不堪重负的。在小公司天天见到老板，在大公司除了能看见或认识所在部门的一些人，其它部门的人基本就是陌生的，好像在另一个未知区域。\n\n　　在大一点的公司里面做事，首先是格局与视野层面上对自己以后的发展有好处，其次，现在就职的公司就是以后跳槽或转行的平台，对加薪和升职影响很大。\n\n　　非诚勿扰里面有句经典话语，“宁愿坐在宝马车上哭，也不愿坐在自行车上笑”，虽然这句对人的道德观和价值观有很大的扭曲，但是直接反映了这个社会的真实情况，作为工薪一族，“宁愿在大公司拼，也不愿在小公司做”，好的职业背景，带给自己的不仅仅是金钱上的优势，更有助于成就一番或大或小的事业。","slug":"view-graduates-which-enter-the-large-companies-or-small-companies","published":1,"updated":"2017-05-14T03:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjch8gzv0003yqxepdskr7pqd","content":"<p>　　2014年7月1日毕业，2014年4月23日第一天正式上班，1个半月就从试用期转正，到今天已经工作1年2个月了。工作了1年多，重新思考以前自己面对的问题，以前对毕业之后究竟要找一个什么样的公司很模糊，听到的是进大公司好，福利好，做颗小螺丝钉，小公司加班多，待遇差，锻炼人。究竟大公司与小公司对初入社会的毕业生今后的职业生涯与生存状态有多大影响？</p>\n<p>　　小公司与大公司的直接明了的区别就是职员人数，几十个人的公司虽在业务经济效益上可能取胜人数上百的大公司，但是整个公司的建制体系跟数百人上千人的公司是无法比的。</p>\n<a id=\"more\"></a>\n<p>　　我的第一份工作是在一家小型互联网公司，在小公司行为与装束可以随意，上班可以穿个拖鞋就啪啪啪的去公司开工了。若想在小公司开拓眼界以及技术的延伸，就不要指望公司的条件了，自个掏钱自个多关注信息。以前，总想着公司能请些牛人给我们做讲座，给我们充充电，或者希望公司能安排去参加一些好的讲座，这些在小公司简直就是自己在瞎想，不切实际。</p>\n<p>　　对于小公司锻炼人这个说法，其实我并不认同，为什么能锻炼人，不就是公司在使用少的人力资源在员工上获取更大的回报。但是，员工收到利益上的回报有变化吗，没有。锻炼人，也是在员工花更多的私人时间泡在公司加班或在家加班的投入所致，这是投入大量时间之后，应有的收获。与小公司能锻炼人其实并无因果关系。小公司能发挥自己更大的能力，有更大的自由发挥空间？公司项目与业务的决策，一个小职员究竟有多大的份量，刚出来的毕业生懂得不多，几乎是不懂，就是想发挥也没地。</p>\n<p>　　小公司做事的流程好吗？没有大公司复杂的流程，但面临的是上面的指令下达后，朝令夕改。这个对于程序员来说，实在是不堪重负的。在小公司天天见到老板，在大公司除了能看见或认识所在部门的一些人，其它部门的人基本就是陌生的，好像在另一个未知区域。</p>\n<p>　　在大一点的公司里面做事，首先是格局与视野层面上对自己以后的发展有好处，其次，现在就职的公司就是以后跳槽或转行的平台，对加薪和升职影响很大。</p>\n<p>　　非诚勿扰里面有句经典话语，“宁愿坐在宝马车上哭，也不愿坐在自行车上笑”，虽然这句对人的道德观和价值观有很大的扭曲，但是直接反映了这个社会的真实情况，作为工薪一族，“宁愿在大公司拼，也不愿在小公司做”，好的职业背景，带给自己的不仅仅是金钱上的优势，更有助于成就一番或大或小的事业。</p>\n","site":{"data":{}},"excerpt":"<p>　　2014年7月1日毕业，2014年4月23日第一天正式上班，1个半月就从试用期转正，到今天已经工作1年2个月了。工作了1年多，重新思考以前自己面对的问题，以前对毕业之后究竟要找一个什么样的公司很模糊，听到的是进大公司好，福利好，做颗小螺丝钉，小公司加班多，待遇差，锻炼人。究竟大公司与小公司对初入社会的毕业生今后的职业生涯与生存状态有多大影响？</p>\n<p>　　小公司与大公司的直接明了的区别就是职员人数，几十个人的公司虽在业务经济效益上可能取胜人数上百的大公司，但是整个公司的建制体系跟数百人上千人的公司是无法比的。</p>","more":"<p>　　我的第一份工作是在一家小型互联网公司，在小公司行为与装束可以随意，上班可以穿个拖鞋就啪啪啪的去公司开工了。若想在小公司开拓眼界以及技术的延伸，就不要指望公司的条件了，自个掏钱自个多关注信息。以前，总想着公司能请些牛人给我们做讲座，给我们充充电，或者希望公司能安排去参加一些好的讲座，这些在小公司简直就是自己在瞎想，不切实际。</p>\n<p>　　对于小公司锻炼人这个说法，其实我并不认同，为什么能锻炼人，不就是公司在使用少的人力资源在员工上获取更大的回报。但是，员工收到利益上的回报有变化吗，没有。锻炼人，也是在员工花更多的私人时间泡在公司加班或在家加班的投入所致，这是投入大量时间之后，应有的收获。与小公司能锻炼人其实并无因果关系。小公司能发挥自己更大的能力，有更大的自由发挥空间？公司项目与业务的决策，一个小职员究竟有多大的份量，刚出来的毕业生懂得不多，几乎是不懂，就是想发挥也没地。</p>\n<p>　　小公司做事的流程好吗？没有大公司复杂的流程，但面临的是上面的指令下达后，朝令夕改。这个对于程序员来说，实在是不堪重负的。在小公司天天见到老板，在大公司除了能看见或认识所在部门的一些人，其它部门的人基本就是陌生的，好像在另一个未知区域。</p>\n<p>　　在大一点的公司里面做事，首先是格局与视野层面上对自己以后的发展有好处，其次，现在就职的公司就是以后跳槽或转行的平台，对加薪和升职影响很大。</p>\n<p>　　非诚勿扰里面有句经典话语，“宁愿坐在宝马车上哭，也不愿坐在自行车上笑”，虽然这句对人的道德观和价值观有很大的扭曲，但是直接反映了这个社会的真实情况，作为工薪一族，“宁愿在大公司拼，也不愿在小公司做”，好的职业背景，带给自己的不仅仅是金钱上的优势，更有助于成就一番或大或小的事业。</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjch8gzqw0006qxepn8tvumax","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzr60009qxep8i8423xs"},{"post_id":"cjch8gzqa0001qxept0ygjuih","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzrd000eqxep7fr9by1o"},{"post_id":"cjch8gzqa0001qxept0ygjuih","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzrf000gqxepknng9qld"},{"post_id":"cjch8gzrc000dqxeppr9zjtyx","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzrh000jqxepu46yst6x"},{"post_id":"cjch8gzqj0003qxepowz8tynt","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzrj000lqxepgugruomq"},{"post_id":"cjch8gzre000fqxeporp7c7aq","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzrm000oqxep71jnqsj0"},{"post_id":"cjch8gzrl000nqxepolnrcjr4","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzrq000qqxepibuhxla7"},{"post_id":"cjch8gzqt0005qxepgz1vy833","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzrt000tqxepff08luvz"},{"post_id":"cjch8gzqt0005qxepgz1vy833","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzru000vqxepga6noicw"},{"post_id":"cjch8gzrn000pqxep4fql2lj2","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzrv000yqxepwbhcq9m4"},{"post_id":"cjch8gzrn000pqxep4fql2lj2","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzrx0010qxepmwln34sv"},{"post_id":"cjch8gzrr000sqxepgh1vp6y1","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzry0013qxeprof2s3mw"},{"post_id":"cjch8gzqy0007qxep18v01bhc","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzs00015qxepnbc26crl"},{"post_id":"cjch8gzqy0007qxep18v01bhc","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzs20018qxep71596ow5"},{"post_id":"cjch8gzrt000uqxepgdozujbt","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzs3001aqxepmatstr23"},{"post_id":"cjch8gzru000xqxepsvdaakls","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzs9001dqxep55cl9dtn"},{"post_id":"cjch8gzr6000aqxep4kfgvpb8","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzsd001fqxeprl1tge0r"},{"post_id":"cjch8gzrv000zqxepa08tkaf4","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzsj001hqxepuh2dk7zt"},{"post_id":"cjch8gzrv000zqxepa08tkaf4","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzsk001jqxepvk3gyctd"},{"post_id":"cjch8gzrx0012qxepkv4n3ppe","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzsl001lqxepdf8qdwxc"},{"post_id":"cjch8gzr7000bqxepyudv9ey1","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzso001nqxepy3zlwsih"},{"post_id":"cjch8gzry0014qxepcpl4xf22","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzsq001qqxepsf9w11o0"},{"post_id":"cjch8gzs10017qxepby01kp97","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzsr001sqxep3ci6cxq3"},{"post_id":"cjch8gzs10017qxepby01kp97","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzsx001uqxepc3ygd7yc"},{"post_id":"cjch8gzrg000iqxep9mv597e1","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzt0001wqxepylbpu7ai"},{"post_id":"cjch8gzs20019qxepknxis510","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzt1001yqxepobjt8k4w"},{"post_id":"cjch8gzs20019qxepknxis510","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzt30020qxepboogv1l9"},{"post_id":"cjch8gzs4001cqxep2bmhvoox","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzt40022qxepjpb3xej6"},{"post_id":"cjch8gzs4001cqxep2bmhvoox","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzt60025qxepfu8nic9y"},{"post_id":"cjch8gzs9001eqxepwc2e37qh","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzt80027qxept8qn40mb"},{"post_id":"cjch8gzs9001eqxepwc2e37qh","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzt90029qxep3dy9wsnu"},{"post_id":"cjch8gzri000kqxep1j7s3z4n","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gztb002bqxepc26pg46j"},{"post_id":"cjch8gzri000kqxep1j7s3z4n","tag_id":"cjch8gzs3001bqxepu9mqw0o6","_id":"cjch8gztd002dqxepz21bq935"},{"post_id":"cjch8gzse001gqxepz8uk702y","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gztg002fqxepycplo4na"},{"post_id":"cjch8gzse001gqxepz8uk702y","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzti002hqxep76zcl5h7"},{"post_id":"cjch8gzsj001iqxeplwx5urk4","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gztq002jqxep3qgme0xo"},{"post_id":"cjch8gzsj001iqxeplwx5urk4","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzts002lqxepyppvqkpl"},{"post_id":"cjch8gzsk001kqxep45oiw20h","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gztu002nqxep2e97t5d4"},{"post_id":"cjch8gzso001oqxepvxi5ohaa","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gztw002pqxep13sgcfkr"},{"post_id":"cjch8gzsq001rqxeps8zj8vnc","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gztx002rqxep7bvotr39"},{"post_id":"cjch8gzsq001rqxeps8zj8vnc","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gztz002tqxepdt9lvrs3"},{"post_id":"cjch8gzss001tqxep58fn2lam","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzu0002vqxepzygi6sve"},{"post_id":"cjch8gzss001tqxep58fn2lam","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzu1002xqxepjgyq7hgf"},{"post_id":"cjch8gzsm001mqxepcss50pis","tag_id":"cjch8gzsp001pqxepn5potcis","_id":"cjch8gzu3002zqxepizojuv92"},{"post_id":"cjch8gzsx001vqxepfke5pw8s","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzu40031qxepcfi8s9fs"},{"post_id":"cjch8gzt0001xqxeplwrnp113","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzu60034qxepdztqi664"},{"post_id":"cjch8gzt2001zqxepz40tp3mx","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzu70036qxeplr5h2cg6"},{"post_id":"cjch8gzt2001zqxepz40tp3mx","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzu90038qxepzljf9byt"},{"post_id":"cjch8gzt50023qxeprc3b5dzt","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzub003bqxepo2tfgbis"},{"post_id":"cjch8gzt50023qxeprc3b5dzt","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzud003dqxepln5vx20n"},{"post_id":"cjch8gzt70026qxep47pmvwlo","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzuh003fqxepy7xaopfm"},{"post_id":"cjch8gzt70026qxep47pmvwlo","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzui003hqxep1g110xah"},{"post_id":"cjch8gzt80028qxepvd2l1or1","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzuk003jqxep1v91v98w"},{"post_id":"cjch8gzt30021qxepwsr32s0c","tag_id":"cjch8gzt60024qxep1gtxk5p2","_id":"cjch8gzul003lqxep6x3l2w6z"},{"post_id":"cjch8gzt30021qxepwsr32s0c","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzup003nqxepdgm5uzzf"},{"post_id":"cjch8gzt9002aqxep7x7vkyh4","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzus003pqxepzp3bqq72"},{"post_id":"cjch8gztb002cqxepmjafxgvh","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzut003rqxepqnrfsq2r"},{"post_id":"cjch8gztb002cqxepmjafxgvh","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzuw003tqxepcl7bop9t"},{"post_id":"cjch8gztd002eqxepr6btyv3e","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzuy003vqxep0r61yfjc"},{"post_id":"cjch8gztd002eqxepr6btyv3e","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzv0003xqxeprqrj158t"},{"post_id":"cjch8gzth002gqxepw3mwb8qg","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzv2003zqxepsc2avyho"},{"post_id":"cjch8gzth002gqxepw3mwb8qg","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzv20040qxepfuyg8cd2"},{"post_id":"cjch8gztj002iqxep1b4q5qeq","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzv20041qxepuqxhzsh3"},{"post_id":"cjch8gztj002iqxep1b4q5qeq","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzv20042qxepi5ydui89"},{"post_id":"cjch8gztq002kqxepglcsst87","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzv20043qxepo7ipdb0e"},{"post_id":"cjch8gztq002kqxepglcsst87","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzv30044qxepqwy75ygp"},{"post_id":"cjch8gzts002mqxepg1hf98kp","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzv30045qxep85vugy5o"},{"post_id":"cjch8gztu002oqxep7ica8t4s","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzv30046qxep86or8upm"},{"post_id":"cjch8gztw002qqxepe3g87s90","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzv30047qxepet3jwxjf"},{"post_id":"cjch8gzty002sqxep86qi6amm","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzv30048qxephisv10vn"},{"post_id":"cjch8gztz002uqxepfgmm98fg","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzv40049qxepyss175lq"},{"post_id":"cjch8gzu0002wqxepmuw6htk0","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzv4004aqxepow8n272q"},{"post_id":"cjch8gzu2002yqxepi8iubmiz","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzv4004bqxep621folwh"},{"post_id":"cjch8gzu2002yqxepi8iubmiz","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzv4004cqxep4mpsa3bc"},{"post_id":"cjch8gzu60035qxep33nlmugt","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzv4004dqxepuyb8gvbj"},{"post_id":"cjch8gzu60035qxep33nlmugt","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzv5004eqxepw59dxwza"},{"post_id":"cjch8gzu70037qxep8q66vvz3","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzv5004fqxep55lsd72w"},{"post_id":"cjch8gzu70037qxep8q66vvz3","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzv7004gqxepz7lna59p"},{"post_id":"cjch8gzu40030qxepe5ctqff4","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzv8004hqxepl7syq22a"},{"post_id":"cjch8gzu40030qxepe5ctqff4","tag_id":"cjch8gzu50033qxeprv572jww","_id":"cjch8gzv8004iqxepem9scj99"},{"post_id":"cjch8gzu90039qxep1na3gf8c","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzv9004jqxep1b7ri40c"},{"post_id":"cjch8gzu90039qxep1na3gf8c","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzvb004kqxepbxmh4cjo"},{"post_id":"cjch8gzub003cqxep9xqrx6mb","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzvb004lqxep41fgpgu9"},{"post_id":"cjch8gzub003cqxep9xqrx6mb","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzvb004mqxepu2k5royn"},{"post_id":"cjch8gzu50032qxepo4g60eye","tag_id":"cjch8gzu50033qxeprv572jww","_id":"cjch8gzvb004nqxepmd9wtkg6"},{"post_id":"cjch8gzue003eqxep08io3uu0","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzvc004oqxep1izwbfi6"},{"post_id":"cjch8gzue003eqxep08io3uu0","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzvc004pqxeppkc9hya8"},{"post_id":"cjch8gzue003eqxep08io3uu0","tag_id":"cjch8gzu50033qxeprv572jww","_id":"cjch8gzvc004qqxep64xsujlz"},{"post_id":"cjch8gzuh003gqxeprix4qhqf","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzvc004rqxep0ogbazmg"},{"post_id":"cjch8gzuh003gqxeprix4qhqf","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzvc004sqxeps8mlk9yv"},{"post_id":"cjch8gzui003iqxepcrld8ziz","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzvc004tqxept0qpfx59"},{"post_id":"cjch8gzui003iqxepcrld8ziz","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzvc004uqxepd4lrkl53"},{"post_id":"cjch8gzuk003kqxep9dvh0ci4","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzvd004vqxepu8lnmabm"},{"post_id":"cjch8gzuk003kqxep9dvh0ci4","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzvd004wqxepollhpnp4"},{"post_id":"cjch8gzum003mqxepibh994i9","tag_id":"cjch8gzqp0004qxep3l7nqdz3","_id":"cjch8gzvd004xqxep9s1rtee4"},{"post_id":"cjch8gzum003mqxepibh994i9","tag_id":"cjch8gzs3001bqxepu9mqw0o6","_id":"cjch8gzvd004yqxepakkq70ya"},{"post_id":"cjch8gzuq003oqxephm2hj68t","tag_id":"cjch8gzs3001bqxepu9mqw0o6","_id":"cjch8gzvd004zqxepo6xham0r"},{"post_id":"cjch8gzus003qqxep6g879p9p","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzvd0050qxepft80upp9"},{"post_id":"cjch8gzus003qqxep6g879p9p","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzvd0051qxepy99laej0"},{"post_id":"cjch8gzuu003sqxep5fl8yk98","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzve0052qxepgotya1xa"},{"post_id":"cjch8gzux003uqxepomkqc584","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzve0053qxep7h2nzdzy"},{"post_id":"cjch8gzux003uqxepomkqc584","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzve0054qxepqa1v5yt0"},{"post_id":"cjch8gzuy003wqxepuayccel1","tag_id":"cjch8gzrk000mqxep6joodi6v","_id":"cjch8gzve0055qxep14ow2w88"},{"post_id":"cjch8gzuy003wqxepuayccel1","tag_id":"cjch8gzrg000hqxepng5onm3x","_id":"cjch8gzve0056qxep1juntkb9"},{"post_id":"cjch8gzv0003yqxepdskr7pqd","tag_id":"cjch8gzr50008qxep6ubbkvm1","_id":"cjch8gzve0057qxepy5perq5z"}],"Tag":[{"name":"工作","_id":"cjch8gzqp0004qxep3l7nqdz3"},{"name":"生活","_id":"cjch8gzr50008qxep6ubbkvm1"},{"name":"iOS中高级开发","_id":"cjch8gzrg000hqxepng5onm3x"},{"name":"音视频处理","_id":"cjch8gzrk000mqxep6joodi6v"},{"name":"hexo","_id":"cjch8gzs3001bqxepu9mqw0o6"},{"name":"Android开发","_id":"cjch8gzsp001pqxepn5potcis"},{"name":"OpenGL","_id":"cjch8gzt60024qxep1gtxk5p2"},{"name":"深度学习DL","_id":"cjch8gzu50033qxeprv572jww"}]}}